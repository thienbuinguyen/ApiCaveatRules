[{"className":"com.sun.jdi.VirtualMachine","api":"instanceCounts","signature":"long[] instanceCounts(List<? extends ReferenceType> refTypes)","paramTypes":["List"],"notNullIndices":[0]},{"className":"com.sun.management.HotSpotDiagnosticMXBean","api":"dumpHeap","signature":"void dumpHeap(String outputFile, boolean live) throws IOException","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"com.sun.management.HotSpotDiagnosticMXBean","api":"setVMOption","signature":"void setVMOption(String name, String value)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"com.sun.management.ThreadMXBean","api":"getThreadCpuTime","signature":"long[] getThreadCpuTime(long[] ids)","paramTypes":["long[]"],"notNullIndices":[0]},{"className":"com.sun.management.ThreadMXBean","api":"getThreadUserTime","signature":"long[] getThreadUserTime(long[] ids)","paramTypes":["long[]"],"notNullIndices":[0]},{"className":"com.sun.management.ThreadMXBean","api":"getThreadAllocatedBytes","signature":"long[] getThreadAllocatedBytes(long[] ids)","paramTypes":["long[]"],"notNullIndices":[0]},{"className":"com.sun.management.VMOption.Origin","api":"valueOf","signature":"public static VMOption.Origin valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.management.VMOption","api":"VMOption","signature":"public VMOption(String name, String value, boolean writeable, VMOption.Origin origin)","paramTypes":["String","String","boolean","VMOption.Origin"],"notNullIndices":[0,1]},{"className":"com.sun.net.httpserver.Filter.Chain","api":"doFilter","signature":"public void doFilter(HttpExchange exchange) throws IOException","paramTypes":["HttpExchange"],"notNullIndices":[0]},{"className":"com.sun.net.httpserver.Filter","api":"doFilter","signature":"public abstract void doFilter(HttpExchange exchange, Filter.Chain chain) throws IOException","paramTypes":["HttpExchange","Filter.Chain"],"notNullIndices":[0,1]},{"className":"com.sun.net.httpserver.HttpContext","api":"setHandler","signature":"public abstract void setHandler(HttpHandler h)","paramTypes":["HttpHandler"],"notNullIndices":[0]},{"className":"com.sun.net.httpserver.HttpExchange","api":"getAttribute","signature":"public abstract Object getAttribute(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.net.httpserver.HttpExchange","api":"setAttribute","signature":"public abstract void setAttribute(String name, Object value)","paramTypes":["String","Object"],"notNullIndices":[0]},{"className":"com.sun.net.httpserver.HttpHandler","api":"handle","signature":"void handle(HttpExchange exchange) throws IOException","paramTypes":["HttpExchange"],"notNullIndices":[0]},{"className":"com.sun.net.httpserver.HttpPrincipal","api":"HttpPrincipal","signature":"public HttpPrincipal(String username, String realm)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"com.sun.net.httpserver.HttpServer","api":"bind","signature":"public abstract void bind(InetSocketAddress addr, int backlog) throws IOException","paramTypes":["InetSocketAddress","int"],"notNullIndices":[0]},{"className":"com.sun.net.httpserver.HttpServer","api":"createContext","signature":"public abstract HttpContext createContext(String path, HttpHandler handler)","paramTypes":["String","HttpHandler"],"notNullIndices":[0,1]},{"className":"com.sun.net.httpserver.HttpServer","api":"createContext","signature":"public abstract HttpContext createContext(String path)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.net.httpserver.HttpServer","api":"removeContext","signature":"public abstract void removeContext(String path) throws IllegalArgumentException","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.net.httpserver.HttpServer","api":"removeContext","signature":"public abstract void removeContext(HttpContext context)","paramTypes":["HttpContext"],"notNullIndices":[0]},{"className":"com.sun.net.httpserver.HttpsServer","api":"setHttpsConfigurator","signature":"public abstract void setHttpsConfigurator(HttpsConfigurator config)","paramTypes":["HttpsConfigurator"],"notNullIndices":[0]},{"className":"com.sun.nio.sctp.AssociationChangeNotification.AssocChangeEvent","api":"valueOf","signature":"public static AssociationChangeNotification.AssocChangeEvent valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.nio.sctp.HandlerResult","api":"valueOf","signature":"public static HandlerResult valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.nio.sctp.MessageInfo","api":"createOutgoing","signature":"public static MessageInfo createOutgoing(Association association, SocketAddress address, int streamNumber)","paramTypes":["Association","SocketAddress","int"],"notNullIndices":[0]},{"className":"com.sun.nio.sctp.PeerAddressChangeNotification.AddressChangeEvent","api":"valueOf","signature":"public static PeerAddressChangeNotification.AddressChangeEvent valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.nio.sctp.SctpChannel","api":"bindAddress","signature":"public abstract SctpChannel bindAddress(InetAddress address) throws IOException","paramTypes":["InetAddress"],"notNullIndices":[0]},{"className":"com.sun.nio.sctp.SctpChannel","api":"unbindAddress","signature":"public abstract SctpChannel unbindAddress(InetAddress address) throws IOException","paramTypes":["InetAddress"],"notNullIndices":[0]},{"className":"com.sun.nio.sctp.SctpMultiChannel","api":"bindAddress","signature":"public abstract SctpMultiChannel bindAddress(InetAddress address) throws IOException","paramTypes":["InetAddress"],"notNullIndices":[0]},{"className":"com.sun.nio.sctp.SctpMultiChannel","api":"unbindAddress","signature":"public abstract SctpMultiChannel unbindAddress(InetAddress address) throws IOException","paramTypes":["InetAddress"],"notNullIndices":[0]},{"className":"com.sun.nio.sctp.SctpServerChannel","api":"bindAddress","signature":"public abstract SctpServerChannel bindAddress(InetAddress address) throws IOException","paramTypes":["InetAddress"],"notNullIndices":[0]},{"className":"com.sun.nio.sctp.SctpServerChannel","api":"unbindAddress","signature":"public abstract SctpServerChannel unbindAddress(InetAddress address) throws IOException","paramTypes":["InetAddress"],"notNullIndices":[0]},{"className":"com.sun.security.auth.LdapPrincipal","api":"LdapPrincipal","signature":"public LdapPrincipal(String name) throws InvalidNameException","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.security.auth.NTDomainPrincipal","api":"NTDomainPrincipal","signature":"public NTDomainPrincipal(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.security.auth.NTSid","api":"NTSid","signature":"public NTSid(String stringSid)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.security.auth.NTSidDomainPrincipal","api":"NTSidDomainPrincipal","signature":"public NTSidDomainPrincipal(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.security.auth.NTSidGroupPrincipal","api":"NTSidGroupPrincipal","signature":"public NTSidGroupPrincipal(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.security.auth.NTSidPrimaryGroupPrincipal","api":"NTSidPrimaryGroupPrincipal","signature":"public NTSidPrimaryGroupPrincipal(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.security.auth.NTSidUserPrincipal","api":"NTSidUserPrincipal","signature":"public NTSidUserPrincipal(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.security.auth.NTUserPrincipal","api":"NTUserPrincipal","signature":"public NTUserPrincipal(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.security.auth.UnixNumericGroupPrincipal","api":"UnixNumericGroupPrincipal","signature":"public UnixNumericGroupPrincipal(String name, boolean primaryGroup)","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"com.sun.security.auth.UnixNumericUserPrincipal","api":"UnixNumericUserPrincipal","signature":"public UnixNumericUserPrincipal(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.security.auth.UnixPrincipal","api":"UnixPrincipal","signature":"public UnixPrincipal(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.security.auth.UserPrincipal","api":"UserPrincipal","signature":"public UserPrincipal(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.security.auth.login.ConfigFile","api":"ConfigFile","signature":"public ConfigFile(URI uri)","paramTypes":["URI"],"notNullIndices":[0]},{"className":"com.sun.security.jgss.InquireSecContextPermission","api":"InquireSecContextPermission","signature":"public InquireSecContextPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.security.jgss.InquireType","api":"valueOf","signature":"public static InquireType valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.source.doctree.AttributeTree.ValueKind","api":"valueOf","signature":"public static AttributeTree.ValueKind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.source.doctree.DocTree.Kind","api":"valueOf","signature":"public static DocTree.Kind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.source.tree.LambdaExpressionTree.BodyKind","api":"valueOf","signature":"public static LambdaExpressionTree.BodyKind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.source.tree.MemberReferenceTree.ReferenceMode","api":"valueOf","signature":"public static MemberReferenceTree.ReferenceMode valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.source.tree.ModuleTree.ModuleKind","api":"valueOf","signature":"public static ModuleTree.ModuleKind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.source.tree.Tree.Kind","api":"valueOf","signature":"public static Tree.Kind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.source.util.TaskEvent.Kind","api":"valueOf","signature":"public static TaskEvent.Kind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.tools.attach.AttachPermission","api":"AttachPermission","signature":"public AttachPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.tools.attach.AttachPermission","api":"AttachPermission","signature":"public AttachPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"com.sun.tools.attach.VirtualMachine","api":"VirtualMachine","signature":"protected VirtualMachine(AttachProvider provider, String id)","paramTypes":["AttachProvider","String"],"notNullIndices":[0,1]},{"className":"com.sun.tools.attach.VirtualMachine","api":"attach","signature":"public static VirtualMachine attach(String id) throws AttachNotSupportedException, IOException","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.tools.attach.VirtualMachine","api":"attach","signature":"public static VirtualMachine attach(VirtualMachineDescriptor vmd) throws AttachNotSupportedException, IOException","paramTypes":["VirtualMachineDescriptor"],"notNullIndices":[0]},{"className":"com.sun.tools.attach.VirtualMachine","api":"loadAgentLibrary","signature":"public abstract void loadAgentLibrary(String agentLibrary, String options) throws AgentLoadException, AgentInitializationException, IOException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"com.sun.tools.attach.VirtualMachine","api":"loadAgentLibrary","signature":"public void loadAgentLibrary(String agentLibrary) throws AgentLoadException, AgentInitializationException, IOException","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.tools.attach.VirtualMachine","api":"loadAgentPath","signature":"public abstract void loadAgentPath(String agentPath, String options) throws AgentLoadException, AgentInitializationException, IOException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"com.sun.tools.attach.VirtualMachine","api":"loadAgentPath","signature":"public void loadAgentPath(String agentPath) throws AgentLoadException, AgentInitializationException, IOException","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.tools.attach.VirtualMachine","api":"loadAgent","signature":"public abstract void loadAgent(String agent, String options) throws AgentLoadException, AgentInitializationException, IOException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"com.sun.tools.attach.VirtualMachine","api":"loadAgent","signature":"public void loadAgent(String agent) throws AgentLoadException, AgentInitializationException, IOException","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.tools.attach.VirtualMachine","api":"startManagementAgent","signature":"public abstract void startManagementAgent(Properties agentProperties) throws IOException","paramTypes":["Properties"],"notNullIndices":[0]},{"className":"com.sun.tools.attach.VirtualMachineDescriptor","api":"VirtualMachineDescriptor","signature":"public VirtualMachineDescriptor(AttachProvider provider, String id)","paramTypes":["AttachProvider","String"],"notNullIndices":[0,1]},{"className":"com.sun.tools.attach.spi.AttachProvider","api":"attachVirtualMachine","signature":"public abstract VirtualMachine attachVirtualMachine(String id) throws AttachNotSupportedException, IOException","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.tools.attach.spi.AttachProvider","api":"attachVirtualMachine","signature":"public VirtualMachine attachVirtualMachine(VirtualMachineDescriptor vmd) throws AttachNotSupportedException, IOException","paramTypes":["VirtualMachineDescriptor"],"notNullIndices":[0]},{"className":"com.sun.tools.jconsole.JConsoleContext.ConnectionState","api":"valueOf","signature":"public static JConsoleContext.ConnectionState valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"com.sun.tools.jconsole.JConsolePlugin","api":"addContextPropertyChangeListener","signature":"public final void addContextPropertyChangeListener(PropertyChangeListener listener)","paramTypes":["PropertyChangeListener"],"notNullIndices":[0]},{"className":"com.sun.tools.jconsole.JConsolePlugin","api":"removeContextPropertyChangeListener","signature":"public final void removeContextPropertyChangeListener(PropertyChangeListener listener)","paramTypes":["PropertyChangeListener"],"notNullIndices":[0]},{"className":"java.awt.AWTKeyStroke","api":"getAWTKeyStroke","signature":"public static AWTKeyStroke getAWTKeyStroke(Character keyChar, int modifiers)","paramTypes":["Character","int"],"notNullIndices":[0]},{"className":"java.awt.AWTKeyStroke","api":"getAWTKeyStrokeForEvent","signature":"public static AWTKeyStroke getAWTKeyStrokeForEvent(KeyEvent anEvent)","paramTypes":["KeyEvent"],"notNullIndices":[0]},{"className":"java.awt.AWTKeyStroke","api":"getAWTKeyStroke","signature":"public static AWTKeyStroke getAWTKeyStroke(String s)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.AWTPermission","api":"AWTPermission","signature":"public AWTPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.AWTPermission","api":"AWTPermission","signature":"public AWTPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.awt.BasicStroke","api":"BasicStroke","signature":"@ConstructorProperties({\"lineWidth\",\"endCap\",\"lineJoin\",\"miterLimit\",\"dashArray\",\"dashPhase\"}) public BasicStroke(float width, int cap, int join, float miterlimit, float[] dash, float dash_phase)","paramTypes":["float","int","int","float","float[]","float"],"notNullIndices":[4,5]},{"className":"java.awt.BorderLayout","api":"getLayoutComponent","signature":"public Component getLayoutComponent(Container target, Object constraints)","paramTypes":["Container","Object"],"notNullIndices":[0]},{"className":"java.awt.BufferCapabilities","api":"BufferCapabilities","signature":"public BufferCapabilities(ImageCapabilities frontCaps, ImageCapabilities backCaps, BufferCapabilities.FlipContents flipContents)","paramTypes":["ImageCapabilities","ImageCapabilities","BufferCapabilities.FlipContents"],"notNullIndices":[0,1]},{"className":"java.awt.Canvas","api":"createBufferStrategy","signature":"public void createBufferStrategy(int numBuffers, BufferCapabilities caps) throws AWTException","paramTypes":["int","BufferCapabilities"],"notNullIndices":[0,1]},{"className":"java.awt.Choice","api":"add","signature":"public void add(String item)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.Choice","api":"addItem","signature":"public void addItem(String item)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.Component.BaselineResizeBehavior","api":"valueOf","signature":"public static Component.BaselineResizeBehavior valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.Component","api":"setSize","signature":"public void setSize(Dimension d)","paramTypes":["Dimension"],"notNullIndices":[0]},{"className":"java.awt.Component","api":"setBounds","signature":"public void setBounds(Rectangle r)","paramTypes":["Rectangle"],"notNullIndices":[0]},{"className":"java.awt.Component","api":"contains","signature":"public boolean contains(Point p)","paramTypes":["Point"],"notNullIndices":[0]},{"className":"java.awt.Component","api":"getListeners","signature":"public <T extends EventListener> T[] getListeners(Class<T> listenerType)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.awt.Component","api":"setFocusTraversalKeys","signature":"public void setFocusTraversalKeys(int id, Set<? extends AWTKeyStroke> keystrokes)","paramTypes":["int","Set"],"notNullIndices":[0,1]},{"className":"java.awt.Component","api":"add","signature":"public void add(PopupMenu popup)","paramTypes":["PopupMenu"],"notNullIndices":[0]},{"className":"java.awt.Component","api":"list","signature":"public void list(PrintStream out)","paramTypes":["PrintStream"],"notNullIndices":[0]},{"className":"java.awt.Component","api":"list","signature":"public void list(PrintStream out, int indent)","paramTypes":["PrintStream","int"],"notNullIndices":[0]},{"className":"java.awt.Component","api":"list","signature":"public void list(PrintWriter out)","paramTypes":["PrintWriter"],"notNullIndices":[0]},{"className":"java.awt.Component","api":"list","signature":"public void list(PrintWriter out, int indent)","paramTypes":["PrintWriter","int"],"notNullIndices":[0]},{"className":"java.awt.Component","api":"applyComponentOrientation","signature":"public void applyComponentOrientation(ComponentOrientation orientation)","paramTypes":["ComponentOrientation"],"notNullIndices":[0]},{"className":"java.awt.Container","api":"add","signature":"public Component add(Component comp)","paramTypes":["Component"],"notNullIndices":[0]},{"className":"java.awt.Container","api":"add","signature":"public Component add(String name, Component comp)","paramTypes":["String","Component"],"notNullIndices":[1]},{"className":"java.awt.Container","api":"add","signature":"public Component add(Component comp, int index)","paramTypes":["Component","int"],"notNullIndices":[0]},{"className":"java.awt.Container","api":"setComponentZOrder","signature":"public void setComponentZOrder(Component comp, int index)","paramTypes":["Component","int"],"notNullIndices":[0]},{"className":"java.awt.Container","api":"add","signature":"public void add(Component comp, Object constraints)","paramTypes":["Component","Object"],"notNullIndices":[0]},{"className":"java.awt.Container","api":"add","signature":"public void add(Component comp, Object constraints, int index)","paramTypes":["Component","Object","int"],"notNullIndices":[0]},{"className":"java.awt.Container","api":"addImpl","signature":"protected void addImpl(Component comp, Object constraints, int index)","paramTypes":["Component","Object","int"],"notNullIndices":[0]},{"className":"java.awt.Container","api":"remove","signature":"public void remove(Component comp)","paramTypes":["Component"],"notNullIndices":[0]},{"className":"java.awt.Container","api":"getListeners","signature":"public <T extends EventListener> T[] getListeners(Class<T> listenerType)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.awt.Container","api":"findComponentAt","signature":"public Component findComponentAt(Point p)","paramTypes":["Point"],"notNullIndices":[0]},{"className":"java.awt.Container","api":"list","signature":"public void list(PrintStream out, int indent)","paramTypes":["PrintStream","int"],"notNullIndices":[0]},{"className":"java.awt.Container","api":"list","signature":"public void list(PrintWriter out, int indent)","paramTypes":["PrintWriter","int"],"notNullIndices":[0]},{"className":"java.awt.Container","api":"setFocusTraversalKeys","signature":"public void setFocusTraversalKeys(int id, Set<? extends AWTKeyStroke> keystrokes)","paramTypes":["int","Set"],"notNullIndices":[0,1]},{"className":"java.awt.Container","api":"applyComponentOrientation","signature":"public void applyComponentOrientation(ComponentOrientation o)","paramTypes":["ComponentOrientation"],"notNullIndices":[0]},{"className":"java.awt.ContainerOrderFocusTraversalPolicy","api":"getComponentAfter","signature":"public Component getComponentAfter(Container aContainer, Component aComponent)","paramTypes":["Container","Component"],"notNullIndices":[0,1]},{"className":"java.awt.ContainerOrderFocusTraversalPolicy","api":"getComponentBefore","signature":"public Component getComponentBefore(Container aContainer, Component aComponent)","paramTypes":["Container","Component"],"notNullIndices":[0,1]},{"className":"java.awt.ContainerOrderFocusTraversalPolicy","api":"getFirstComponent","signature":"public Component getFirstComponent(Container aContainer)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"java.awt.ContainerOrderFocusTraversalPolicy","api":"getLastComponent","signature":"public Component getLastComponent(Container aContainer)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"java.awt.ContainerOrderFocusTraversalPolicy","api":"getDefaultComponent","signature":"public Component getDefaultComponent(Container aContainer)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"java.awt.Desktop.Action","api":"valueOf","signature":"public static Desktop.Action valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.Desktop","api":"open","signature":"public void open(File file) throws IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"java.awt.Desktop","api":"edit","signature":"public void edit(File file) throws IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"java.awt.Desktop","api":"print","signature":"public void print(File file) throws IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"java.awt.Desktop","api":"browse","signature":"public void browse(URI uri) throws IOException","paramTypes":["URI"],"notNullIndices":[0]},{"className":"java.awt.Desktop","api":"mail","signature":"public void mail(URI mailtoURI) throws IOException","paramTypes":["URI"],"notNullIndices":[0]},{"className":"java.awt.Desktop","api":"browseFileDirectory","signature":"public void browseFileDirectory(File file)","paramTypes":["File"],"notNullIndices":[0]},{"className":"java.awt.Desktop","api":"moveToTrash","signature":"public boolean moveToTrash(File file)","paramTypes":["File"],"notNullIndices":[0]},{"className":"java.awt.Dialog.ModalExclusionType","api":"valueOf","signature":"public static Dialog.ModalExclusionType valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.Dialog.ModalityType","api":"valueOf","signature":"public static Dialog.ModalityType valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.EventQueue","api":"postEvent","signature":"public void postEvent(AWTEvent theEvent)","paramTypes":["AWTEvent"],"notNullIndices":[0]},{"className":"java.awt.EventQueue","api":"dispatchEvent","signature":"protected void dispatchEvent(AWTEvent event)","paramTypes":["AWTEvent"],"notNullIndices":[0]},{"className":"java.awt.EventQueue","api":"push","signature":"public void push(EventQueue newEventQueue)","paramTypes":["EventQueue"],"notNullIndices":[0]},{"className":"java.awt.FileDialog","api":"FileDialog","signature":"public FileDialog(Dialog parent)","paramTypes":["Dialog"],"notNullIndices":[0]},{"className":"java.awt.FileDialog","api":"FileDialog","signature":"public FileDialog(Dialog parent, String title)","paramTypes":["Dialog","String"],"notNullIndices":[0]},{"className":"java.awt.FileDialog","api":"FileDialog","signature":"public FileDialog(Dialog parent, String title, int mode)","paramTypes":["Dialog","String","int"],"notNullIndices":[0]},{"className":"java.awt.FocusTraversalPolicy","api":"getComponentAfter","signature":"public abstract Component getComponentAfter(Container aContainer, Component aComponent)","paramTypes":["Container","Component"],"notNullIndices":[0,1]},{"className":"java.awt.FocusTraversalPolicy","api":"getComponentBefore","signature":"public abstract Component getComponentBefore(Container aContainer, Component aComponent)","paramTypes":["Container","Component"],"notNullIndices":[0,1]},{"className":"java.awt.FocusTraversalPolicy","api":"getFirstComponent","signature":"public abstract Component getFirstComponent(Container aContainer)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"java.awt.FocusTraversalPolicy","api":"getLastComponent","signature":"public abstract Component getLastComponent(Container aContainer)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"java.awt.FocusTraversalPolicy","api":"getDefaultComponent","signature":"public abstract Component getDefaultComponent(Container aContainer)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"java.awt.FocusTraversalPolicy","api":"getInitialComponent","signature":"public Component getInitialComponent(Window window)","paramTypes":["Window"],"notNullIndices":[0]},{"className":"java.awt.Font","api":"Font","signature":"protected Font(Font font)","paramTypes":["Font"],"notNullIndices":[0]},{"className":"java.awt.Font","api":"textRequiresLayout","signature":"public static boolean textRequiresLayout(char[] chars, int start, int end)","paramTypes":["char[]","int","int"],"notNullIndices":[0]},{"className":"java.awt.Font","api":"getFont","signature":"public static Font getFont(Map<? extends AttributedCharacterIterator.Attribute,?> attributes)","paramTypes":["Map"],"notNullIndices":[0]},{"className":"java.awt.Font","api":"createFont","signature":"public static Font createFont(int fontFormat, File fontFile) throws FontFormatException, IOException","paramTypes":["int","File"],"notNullIndices":[1]},{"className":"java.awt.Font","api":"getFont","signature":"public static Font getFont(String nm)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.Font","api":"getFont","signature":"public static Font getFont(String nm, Font font)","paramTypes":["String","Font"],"notNullIndices":[0]},{"className":"java.awt.Font","api":"deriveFont","signature":"public Font deriveFont(int style, AffineTransform trans)","paramTypes":["int","AffineTransform"],"notNullIndices":[1]},{"className":"java.awt.Font","api":"deriveFont","signature":"public Font deriveFont(AffineTransform trans)","paramTypes":["AffineTransform"],"notNullIndices":[0]},{"className":"java.awt.FontMetrics","api":"stringWidth","signature":"public int stringWidth(String str)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.FontMetrics","api":"charsWidth","signature":"public int charsWidth(char[] data, int off, int len)","paramTypes":["char[]","int","int"],"notNullIndices":[0]},{"className":"java.awt.FontMetrics","api":"bytesWidth","signature":"public int bytesWidth(byte[] data, int off, int len)","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.awt.Graphics","api":"drawString","signature":"public abstract void drawString(String str, int x, int y)","paramTypes":["String","int","int"],"notNullIndices":[0]},{"className":"java.awt.Graphics","api":"drawString","signature":"public abstract void drawString(AttributedCharacterIterator iterator, int x, int y)","paramTypes":["AttributedCharacterIterator","int","int"],"notNullIndices":[0]},{"className":"java.awt.Graphics","api":"drawChars","signature":"public void drawChars(char[] data, int offset, int length, int x, int y)","paramTypes":["char[]","int","int","int","int"],"notNullIndices":[0]},{"className":"java.awt.Graphics","api":"drawBytes","signature":"public void drawBytes(byte[] data, int offset, int length, int x, int y)","paramTypes":["byte[]","int","int","int","int"],"notNullIndices":[0]},{"className":"java.awt.Graphics2D","api":"drawString","signature":"public abstract void drawString(String str, int x, int y)","paramTypes":["String","int","int"],"notNullIndices":[0]},{"className":"java.awt.Graphics2D","api":"drawString","signature":"public abstract void drawString(String str, float x, float y)","paramTypes":["String","float","float"],"notNullIndices":[0]},{"className":"java.awt.Graphics2D","api":"drawString","signature":"public abstract void drawString(AttributedCharacterIterator iterator, int x, int y)","paramTypes":["AttributedCharacterIterator","int","int"],"notNullIndices":[0]},{"className":"java.awt.Graphics2D","api":"drawString","signature":"public abstract void drawString(AttributedCharacterIterator iterator, float x, float y)","paramTypes":["AttributedCharacterIterator","float","float"],"notNullIndices":[0]},{"className":"java.awt.Graphics2D","api":"drawGlyphVector","signature":"public abstract void drawGlyphVector(GlyphVector g, float x, float y)","paramTypes":["GlyphVector","float","float"],"notNullIndices":[0]},{"className":"java.awt.GraphicsDevice.WindowTranslucency","api":"valueOf","signature":"public static GraphicsDevice.WindowTranslucency valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.GraphicsDevice","api":"setDisplayMode","signature":"public void setDisplayMode(DisplayMode dm)","paramTypes":["DisplayMode"],"notNullIndices":[0]},{"className":"java.awt.GraphicsEnvironment","api":"createGraphics","signature":"public abstract Graphics2D createGraphics(BufferedImage img)","paramTypes":["BufferedImage"],"notNullIndices":[0]},{"className":"java.awt.GraphicsEnvironment","api":"registerFont","signature":"public boolean registerFont(Font font)","paramTypes":["Font"],"notNullIndices":[0]},{"className":"java.awt.Image","api":"getProperty","signature":"public abstract Object getProperty(String name, ImageObserver observer)","paramTypes":["String","ImageObserver"],"notNullIndices":[0]},{"className":"java.awt.JobAttributes","api":"setDefaultSelection","signature":"public void setDefaultSelection(JobAttributes.DefaultSelectionType defaultSelection)","paramTypes":["JobAttributes.DefaultSelectionType"],"notNullIndices":[0]},{"className":"java.awt.JobAttributes","api":"setDestination","signature":"public void setDestination(JobAttributes.DestinationType destination)","paramTypes":["JobAttributes.DestinationType"],"notNullIndices":[0]},{"className":"java.awt.JobAttributes","api":"setDialog","signature":"public void setDialog(JobAttributes.DialogType dialog)","paramTypes":["JobAttributes.DialogType"],"notNullIndices":[0]},{"className":"java.awt.JobAttributes","api":"setMultipleDocumentHandling","signature":"public void setMultipleDocumentHandling(JobAttributes.MultipleDocumentHandlingType multipleDocumentHandling)","paramTypes":["JobAttributes.MultipleDocumentHandlingType"],"notNullIndices":[0]},{"className":"java.awt.JobAttributes","api":"setSides","signature":"public void setSides(JobAttributes.SidesType sides)","paramTypes":["JobAttributes.SidesType"],"notNullIndices":[0]},{"className":"java.awt.KeyboardFocusManager","api":"setDefaultFocusTraversalPolicy","signature":"public void setDefaultFocusTraversalPolicy(FocusTraversalPolicy defaultPolicy)","paramTypes":["FocusTraversalPolicy"],"notNullIndices":[0]},{"className":"java.awt.KeyboardFocusManager","api":"setDefaultFocusTraversalKeys","signature":"public void setDefaultFocusTraversalKeys(int id, Set<? extends AWTKeyStroke> keystrokes)","paramTypes":["int","Set"],"notNullIndices":[0,1]},{"className":"java.awt.LinearGradientPaint","api":"LinearGradientPaint","signature":"public LinearGradientPaint(float startX, float startY, float endX, float endY, float[] fractions, Color[] colors)","paramTypes":["float","float","float","float","float[]","Color[]"],"notNullIndices":[4,5]},{"className":"java.awt.LinearGradientPaint","api":"LinearGradientPaint","signature":"public LinearGradientPaint(float startX, float startY, float endX, float endY, float[] fractions, Color[] colors, MultipleGradientPaint.CycleMethod cycleMethod)","paramTypes":["float","float","float","float","float[]","Color[]","MultipleGradientPaint.CycleMethod"],"notNullIndices":[4,5,6]},{"className":"java.awt.LinearGradientPaint","api":"LinearGradientPaint","signature":"public LinearGradientPaint(Point2D start, Point2D end, float[] fractions, Color[] colors)","paramTypes":["Point2D","Point2D","float[]","Color[]"],"notNullIndices":[2,3]},{"className":"java.awt.LinearGradientPaint","api":"LinearGradientPaint","signature":"public LinearGradientPaint(Point2D start, Point2D end, float[] fractions, Color[] colors, MultipleGradientPaint.CycleMethod cycleMethod)","paramTypes":["Point2D","Point2D","float[]","Color[]","MultipleGradientPaint.CycleMethod"],"notNullIndices":[2,3,4]},{"className":"java.awt.LinearGradientPaint","api":"LinearGradientPaint","signature":"@ConstructorProperties({\"startPoint\",\"endPoint\",\"fractions\",\"colors\",\"cycleMethod\",\"colorSpace\",\"transform\"}) public LinearGradientPaint(Point2D start, Point2D end, float[] fractions, Color[] colors, MultipleGradientPaint.CycleMethod cycleMethod, MultipleGradientPaint.ColorSpaceType colorSpace, AffineTransform gradientTransform)","paramTypes":["Point2D","Point2D","float[]","Color[]","MultipleGradientPaint.CycleMethod","MultipleGradientPaint.ColorSpaceType","AffineTransform"],"notNullIndices":[2,3,4,5,6]},{"className":"java.awt.MultipleGradientPaint.ColorSpaceType","api":"valueOf","signature":"public static MultipleGradientPaint.ColorSpaceType valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.MultipleGradientPaint.CycleMethod","api":"valueOf","signature":"public static MultipleGradientPaint.CycleMethod valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.PageAttributes","api":"setColor","signature":"public void setColor(PageAttributes.ColorType color)","paramTypes":["PageAttributes.ColorType"],"notNullIndices":[0]},{"className":"java.awt.PageAttributes","api":"setMedia","signature":"public void setMedia(PageAttributes.MediaType media)","paramTypes":["PageAttributes.MediaType"],"notNullIndices":[0]},{"className":"java.awt.PageAttributes","api":"setOrientationRequested","signature":"public void setOrientationRequested(PageAttributes.OrientationRequestedType orientationRequested)","paramTypes":["PageAttributes.OrientationRequestedType"],"notNullIndices":[0]},{"className":"java.awt.PageAttributes","api":"setOrigin","signature":"public void setOrigin(PageAttributes.OriginType origin)","paramTypes":["PageAttributes.OriginType"],"notNullIndices":[0]},{"className":"java.awt.PageAttributes","api":"setPrintQuality","signature":"public void setPrintQuality(PageAttributes.PrintQualityType printQuality)","paramTypes":["PageAttributes.PrintQualityType"],"notNullIndices":[0]},{"className":"java.awt.Polygon","api":"Polygon","signature":"public Polygon(int[] xpoints, int[] ypoints, int npoints)","paramTypes":["int[]","int[]","int"],"notNullIndices":[0,1]},{"className":"java.awt.RadialGradientPaint","api":"RadialGradientPaint","signature":"public RadialGradientPaint(float cx, float cy, float radius, float[] fractions, Color[] colors)","paramTypes":["float","float","float","float[]","Color[]"],"notNullIndices":[3,4]},{"className":"java.awt.RadialGradientPaint","api":"RadialGradientPaint","signature":"public RadialGradientPaint(Point2D center, float radius, float[] fractions, Color[] colors)","paramTypes":["Point2D","float","float[]","Color[]"],"notNullIndices":[0,2,3]},{"className":"java.awt.RadialGradientPaint","api":"RadialGradientPaint","signature":"public RadialGradientPaint(float cx, float cy, float radius, float[] fractions, Color[] colors, MultipleGradientPaint.CycleMethod cycleMethod)","paramTypes":["float","float","float","float[]","Color[]","MultipleGradientPaint.CycleMethod"],"notNullIndices":[3,4,5]},{"className":"java.awt.RadialGradientPaint","api":"RadialGradientPaint","signature":"public RadialGradientPaint(Point2D center, float radius, float[] fractions, Color[] colors, MultipleGradientPaint.CycleMethod cycleMethod)","paramTypes":["Point2D","float","float[]","Color[]","MultipleGradientPaint.CycleMethod"],"notNullIndices":[0,2,3,4]},{"className":"java.awt.RadialGradientPaint","api":"RadialGradientPaint","signature":"public RadialGradientPaint(float cx, float cy, float radius, float fx, float fy, float[] fractions, Color[] colors, MultipleGradientPaint.CycleMethod cycleMethod)","paramTypes":["float","float","float","float","float","float[]","Color[]","MultipleGradientPaint.CycleMethod"],"notNullIndices":[5,6,7]},{"className":"java.awt.RadialGradientPaint","api":"RadialGradientPaint","signature":"public RadialGradientPaint(Point2D center, float radius, Point2D focus, float[] fractions, Color[] colors, MultipleGradientPaint.CycleMethod cycleMethod)","paramTypes":["Point2D","float","Point2D","float[]","Color[]","MultipleGradientPaint.CycleMethod"],"notNullIndices":[3,4,5]},{"className":"java.awt.RadialGradientPaint","api":"RadialGradientPaint","signature":"@ConstructorProperties({\"centerPoint\",\"radius\",\"focusPoint\",\"fractions\",\"colors\",\"cycleMethod\",\"colorSpace\",\"transform\"}) public RadialGradientPaint(Point2D center, float radius, Point2D focus, float[] fractions, Color[] colors, MultipleGradientPaint.CycleMethod cycleMethod, MultipleGradientPaint.ColorSpaceType colorSpace, AffineTransform gradientTransform)","paramTypes":["Point2D","float","Point2D","float[]","Color[]","MultipleGradientPaint.CycleMethod","MultipleGradientPaint.ColorSpaceType","AffineTransform"],"notNullIndices":[3,4,5,6,7]},{"className":"java.awt.RadialGradientPaint","api":"RadialGradientPaint","signature":"public RadialGradientPaint(Rectangle2D gradientBounds, float[] fractions, Color[] colors, MultipleGradientPaint.CycleMethod cycleMethod)","paramTypes":["Rectangle2D","float[]","Color[]","MultipleGradientPaint.CycleMethod"],"notNullIndices":[0,1,2,3]},{"className":"java.awt.RenderingHints","api":"put","signature":"public Object put(Object key, Object value)","paramTypes":["Object","Object"],"notNullIndices":[0]},{"className":"java.awt.ScrollPane","api":"setScrollPosition","signature":"public void setScrollPosition(Point p)","paramTypes":["Point"],"notNullIndices":[0]},{"className":"java.awt.SplashScreen","api":"setImageURL","signature":"public void setImageURL(URL imageURL) throws NullPointerException, IOException, IllegalStateException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"java.awt.SystemTray","api":"add","signature":"public void add(TrayIcon trayIcon) throws AWTException","paramTypes":["TrayIcon"],"notNullIndices":[0]},{"className":"java.awt.Taskbar.Feature","api":"valueOf","signature":"public static Taskbar.Feature valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.Taskbar.State","api":"valueOf","signature":"public static Taskbar.State valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.Toolkit","api":"getPrintJob","signature":"public abstract PrintJob getPrintJob(Frame frame, String jobtitle, Properties props)","paramTypes":["Frame","String","Properties"],"notNullIndices":[0]},{"className":"java.awt.Toolkit","api":"getPrintJob","signature":"public PrintJob getPrintJob(Frame frame, String jobtitle, JobAttributes jobAttributes, PageAttributes pageAttributes)","paramTypes":["Frame","String","JobAttributes","PageAttributes"],"notNullIndices":[0]},{"className":"java.awt.TrayIcon.MessageType","api":"valueOf","signature":"public static TrayIcon.MessageType valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.TrayIcon","api":"TrayIcon","signature":"public TrayIcon(Image image)","paramTypes":["Image"],"notNullIndices":[0]},{"className":"java.awt.TrayIcon","api":"TrayIcon","signature":"public TrayIcon(Image image, String tooltip)","paramTypes":["Image","String"],"notNullIndices":[0]},{"className":"java.awt.TrayIcon","api":"TrayIcon","signature":"public TrayIcon(Image image, String tooltip, PopupMenu popup)","paramTypes":["Image","String","PopupMenu"],"notNullIndices":[0]},{"className":"java.awt.TrayIcon","api":"setImage","signature":"public void setImage(Image image)","paramTypes":["Image"],"notNullIndices":[0]},{"className":"java.awt.TrayIcon","api":"displayMessage","signature":"public void displayMessage(String caption, String text, TrayIcon.MessageType messageType)","paramTypes":["String","String","TrayIcon.MessageType"],"notNullIndices":[0,1]},{"className":"java.awt.Window.Type","api":"valueOf","signature":"public static Window.Type valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.Window","api":"getListeners","signature":"public <T extends EventListener> T[] getListeners(Class<T> listenerType)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.awt.Window","api":"setType","signature":"public void setType(Window.Type type)","paramTypes":["Window.Type"],"notNullIndices":[0]},{"className":"java.awt.Window","api":"createBufferStrategy","signature":"public void createBufferStrategy(int numBuffers, BufferCapabilities caps) throws AWTException","paramTypes":["int","BufferCapabilities"],"notNullIndices":[0,1]},{"className":"java.awt.Window","api":"setShape","signature":"public void setShape(Shape shape)","paramTypes":["Shape"],"notNullIndices":[0]},{"className":"java.awt.Window","api":"setShape","signature":"public void setShape(Shape shape)","paramTypes":["Shape"],"notNullIndices":[0]},{"className":"java.awt.Window","api":"setShape","signature":"public void setShape(Shape shape)","paramTypes":["Shape"],"notNullIndices":[0]},{"className":"java.awt.datatransfer.Clipboard","api":"isDataFlavorAvailable","signature":"public boolean isDataFlavorAvailable(DataFlavor flavor)","paramTypes":["DataFlavor"],"notNullIndices":[0]},{"className":"java.awt.datatransfer.Clipboard","api":"getData","signature":"public Object getData(DataFlavor flavor) throws UnsupportedFlavorException, IOException","paramTypes":["DataFlavor"],"notNullIndices":[0]},{"className":"java.awt.datatransfer.DataFlavor","api":"DataFlavor","signature":"public DataFlavor(Class<?> representationClass, String humanPresentableName)","paramTypes":["Class","String"],"notNullIndices":[0]},{"className":"java.awt.datatransfer.DataFlavor","api":"DataFlavor","signature":"public DataFlavor(String mimeType, String humanPresentableName)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.awt.datatransfer.DataFlavor","api":"DataFlavor","signature":"public DataFlavor(String mimeType, String humanPresentableName, ClassLoader classLoader) throws ClassNotFoundException","paramTypes":["String","String","ClassLoader"],"notNullIndices":[0]},{"className":"java.awt.datatransfer.DataFlavor","api":"DataFlavor","signature":"public DataFlavor(String mimeType) throws ClassNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.datatransfer.DataFlavor","api":"getReaderForText","signature":"public Reader getReaderForText(Transferable transferable) throws UnsupportedFlavorException, IOException","paramTypes":["Transferable"],"notNullIndices":[0]},{"className":"java.awt.datatransfer.DataFlavor","api":"getReaderForText","signature":"public Reader getReaderForText(Transferable transferable) throws UnsupportedFlavorException, IOException","paramTypes":["Transferable"],"notNullIndices":[0]},{"className":"java.awt.datatransfer.DataFlavor","api":"isMimeTypeEqual","signature":"public boolean isMimeTypeEqual(String mimeType)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.datatransfer.FlavorEvent","api":"FlavorEvent","signature":"public FlavorEvent(Clipboard source)","paramTypes":["Clipboard"],"notNullIndices":[0]},{"className":"java.awt.datatransfer.StringSelection","api":"isDataFlavorSupported","signature":"public boolean isDataFlavorSupported(DataFlavor flavor)","paramTypes":["DataFlavor"],"notNullIndices":[0]},{"className":"java.awt.datatransfer.StringSelection","api":"getTransferData","signature":"public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException, IOException","paramTypes":["DataFlavor"],"notNullIndices":[0]},{"className":"java.awt.datatransfer.SystemFlavorMap","api":"addUnencodedNativeForFlavor","signature":"public void addUnencodedNativeForFlavor(DataFlavor flav, String nat)","paramTypes":["DataFlavor","String"],"notNullIndices":[0,1]},{"className":"java.awt.datatransfer.SystemFlavorMap","api":"addFlavorForUnencodedNative","signature":"public void addFlavorForUnencodedNative(String nat, DataFlavor flav)","paramTypes":["String","DataFlavor"],"notNullIndices":[0,1]},{"className":"java.awt.desktop.QuitStrategy","api":"valueOf","signature":"public static QuitStrategy valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.desktop.UserSessionEvent.Reason","api":"valueOf","signature":"public static UserSessionEvent.Reason valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.dnd.DragGestureRecognizer","api":"DragGestureRecognizer","signature":"protected DragGestureRecognizer(DragSource ds, Component c, int sa, DragGestureListener dgl)","paramTypes":["DragSource","Component","int","DragGestureListener"],"notNullIndices":[0]},{"className":"java.awt.dnd.DragGestureRecognizer","api":"DragGestureRecognizer","signature":"protected DragGestureRecognizer(DragSource ds, Component c, int sa)","paramTypes":["DragSource","Component","int"],"notNullIndices":[0]},{"className":"java.awt.dnd.DragGestureRecognizer","api":"DragGestureRecognizer","signature":"protected DragGestureRecognizer(DragSource ds, Component c)","paramTypes":["DragSource","Component"],"notNullIndices":[0]},{"className":"java.awt.dnd.DragGestureRecognizer","api":"DragGestureRecognizer","signature":"protected DragGestureRecognizer(DragSource ds)","paramTypes":["DragSource"],"notNullIndices":[0]},{"className":"java.awt.dnd.DragSource","api":"createDragSourceContext","signature":"protected DragSourceContext createDragSourceContext(DragGestureEvent dgl, Cursor dragCursor, Image dragImage, Point imageOffset, Transferable t, DragSourceListener dsl)","paramTypes":["DragGestureEvent","Cursor","Image","Point","Transferable","DragSourceListener"],"notNullIndices":[0]},{"className":"java.awt.dnd.DragSource","api":"createDragSourceContext","signature":"protected DragSourceContext createDragSourceContext(DragGestureEvent dgl, Cursor dragCursor, Image dragImage, Point imageOffset, Transferable t, DragSourceListener dsl)","paramTypes":["DragGestureEvent","Cursor","Image","Point","Transferable","DragSourceListener"],"notNullIndices":[4]},{"className":"java.awt.dnd.DragSourceContext","api":"DragSourceContext","signature":"public DragSourceContext(DragGestureEvent trigger, Cursor dragCursor, Image dragImage, Point offset, Transferable t, DragSourceListener dsl)","paramTypes":["DragGestureEvent","Cursor","Image","Point","Transferable","DragSourceListener"],"notNullIndices":[0]},{"className":"java.awt.dnd.DragSourceContext","api":"DragSourceContext","signature":"public DragSourceContext(DragGestureEvent trigger, Cursor dragCursor, Image dragImage, Point offset, Transferable t, DragSourceListener dsl)","paramTypes":["DragGestureEvent","Cursor","Image","Point","Transferable","DragSourceListener"],"notNullIndices":[0]},{"className":"java.awt.dnd.DragSourceDragEvent","api":"DragSourceDragEvent","signature":"public DragSourceDragEvent(DragSourceContext dsc, int dropAction, int action, int modifiers)","paramTypes":["DragSourceContext","int","int","int"],"notNullIndices":[0]},{"className":"java.awt.dnd.DragSourceDragEvent","api":"DragSourceDragEvent","signature":"public DragSourceDragEvent(DragSourceContext dsc, int dropAction, int action, int modifiers, int x, int y)","paramTypes":["DragSourceContext","int","int","int","int","int"],"notNullIndices":[0]},{"className":"java.awt.dnd.DragSourceDropEvent","api":"DragSourceDropEvent","signature":"public DragSourceDropEvent(DragSourceContext dsc, int action, boolean success)","paramTypes":["DragSourceContext","int","boolean"],"notNullIndices":[0]},{"className":"java.awt.dnd.DragSourceDropEvent","api":"DragSourceDropEvent","signature":"public DragSourceDropEvent(DragSourceContext dsc, int action, boolean success, int x, int y)","paramTypes":["DragSourceContext","int","boolean","int","int"],"notNullIndices":[0]},{"className":"java.awt.dnd.DragSourceDropEvent","api":"DragSourceDropEvent","signature":"public DragSourceDropEvent(DragSourceContext dsc)","paramTypes":["DragSourceContext"],"notNullIndices":[0]},{"className":"java.awt.dnd.DragSourceEvent","api":"DragSourceEvent","signature":"public DragSourceEvent(DragSourceContext dsc)","paramTypes":["DragSourceContext"],"notNullIndices":[0]},{"className":"java.awt.dnd.DragSourceEvent","api":"DragSourceEvent","signature":"public DragSourceEvent(DragSourceContext dsc, int x, int y)","paramTypes":["DragSourceContext","int","int"],"notNullIndices":[0]},{"className":"java.awt.dnd.DropTargetDragEvent","api":"DropTargetDragEvent","signature":"public DropTargetDragEvent(DropTargetContext dtc, Point cursorLocn, int dropAction, int srcActions)","paramTypes":["DropTargetContext","Point","int","int"],"notNullIndices":[1]},{"className":"java.awt.dnd.DropTargetDragEvent","api":"DropTargetDragEvent","signature":"public DropTargetDragEvent(DropTargetContext dtc, Point cursorLocn, int dropAction, int srcActions)","paramTypes":["DropTargetContext","Point","int","int"],"notNullIndices":[0]},{"className":"java.awt.dnd.DropTargetDropEvent","api":"DropTargetDropEvent","signature":"public DropTargetDropEvent(DropTargetContext dtc, Point cursorLocn, int dropAction, int srcActions)","paramTypes":["DropTargetContext","Point","int","int"],"notNullIndices":[1]},{"className":"java.awt.dnd.DropTargetDropEvent","api":"DropTargetDropEvent","signature":"public DropTargetDropEvent(DropTargetContext dtc, Point cursorLocn, int dropAction, int srcActions)","paramTypes":["DropTargetContext","Point","int","int"],"notNullIndices":[0]},{"className":"java.awt.dnd.DropTargetDropEvent","api":"DropTargetDropEvent","signature":"public DropTargetDropEvent(DropTargetContext dtc, Point cursorLocn, int dropAction, int srcActions, boolean isLocal)","paramTypes":["DropTargetContext","Point","int","int","boolean"],"notNullIndices":[1]},{"className":"java.awt.dnd.DropTargetDropEvent","api":"DropTargetDropEvent","signature":"public DropTargetDropEvent(DropTargetContext dtc, Point cursorLocn, int dropAction, int srcActions, boolean isLocal)","paramTypes":["DropTargetContext","Point","int","int","boolean"],"notNullIndices":[0]},{"className":"java.awt.dnd.DropTargetEvent","api":"DropTargetEvent","signature":"public DropTargetEvent(DropTargetContext dtc)","paramTypes":["DropTargetContext"],"notNullIndices":[0]},{"className":"java.awt.event.ActionEvent","api":"ActionEvent","signature":"public ActionEvent(Object source, int id, String command)","paramTypes":["Object","int","String"],"notNullIndices":[0]},{"className":"java.awt.event.ActionEvent","api":"ActionEvent","signature":"public ActionEvent(Object source, int id, String command, int modifiers)","paramTypes":["Object","int","String","int"],"notNullIndices":[0]},{"className":"java.awt.event.ActionEvent","api":"ActionEvent","signature":"public ActionEvent(Object source, int id, String command, long when, int modifiers)","paramTypes":["Object","int","String","long","int"],"notNullIndices":[0]},{"className":"java.awt.event.AdjustmentEvent","api":"AdjustmentEvent","signature":"public AdjustmentEvent(Adjustable source, int id, int type, int value)","paramTypes":["Adjustable","int","int","int"],"notNullIndices":[0]},{"className":"java.awt.event.AdjustmentEvent","api":"AdjustmentEvent","signature":"public AdjustmentEvent(Adjustable source, int id, int type, int value, boolean isAdjusting)","paramTypes":["Adjustable","int","int","int","boolean"],"notNullIndices":[0]},{"className":"java.awt.event.ComponentEvent","api":"ComponentEvent","signature":"public ComponentEvent(Component source, int id)","paramTypes":["Component","int"],"notNullIndices":[0]},{"className":"java.awt.event.ContainerEvent","api":"ContainerEvent","signature":"public ContainerEvent(Component source, int id, Component child)","paramTypes":["Component","int","Component"],"notNullIndices":[0]},{"className":"java.awt.event.FocusEvent.Cause","api":"valueOf","signature":"public static FocusEvent.Cause valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.event.FocusEvent","api":"FocusEvent","signature":"public FocusEvent(Component source, int id, boolean temporary, Component opposite)","paramTypes":["Component","int","boolean","Component"],"notNullIndices":[0]},{"className":"java.awt.event.FocusEvent","api":"FocusEvent","signature":"public FocusEvent(Component source, int id, boolean temporary, Component opposite, FocusEvent.Cause cause)","paramTypes":["Component","int","boolean","Component","FocusEvent.Cause"],"notNullIndices":[0,4]},{"className":"java.awt.event.FocusEvent","api":"FocusEvent","signature":"public FocusEvent(Component source, int id, boolean temporary)","paramTypes":["Component","int","boolean"],"notNullIndices":[0]},{"className":"java.awt.event.FocusEvent","api":"FocusEvent","signature":"public FocusEvent(Component source, int id)","paramTypes":["Component","int"],"notNullIndices":[0]},{"className":"java.awt.event.HierarchyEvent","api":"HierarchyEvent","signature":"public HierarchyEvent(Component source, int id, Component changed, Container changedParent)","paramTypes":["Component","int","Component","Container"],"notNullIndices":[0]},{"className":"java.awt.event.HierarchyEvent","api":"HierarchyEvent","signature":"public HierarchyEvent(Component source, int id, Component changed, Container changedParent, long changeFlags)","paramTypes":["Component","int","Component","Container","long"],"notNullIndices":[0]},{"className":"java.awt.event.InputMethodEvent","api":"InputMethodEvent","signature":"public InputMethodEvent(Component source, int id, long when, AttributedCharacterIterator text, int committedCharacterCount, TextHitInfo caret, TextHitInfo visiblePosition)","paramTypes":["Component","int","long","AttributedCharacterIterator","int","TextHitInfo","TextHitInfo"],"notNullIndices":[1,3]},{"className":"java.awt.event.InputMethodEvent","api":"InputMethodEvent","signature":"public InputMethodEvent(Component source, int id, long when, AttributedCharacterIterator text, int committedCharacterCount, TextHitInfo caret, TextHitInfo visiblePosition)","paramTypes":["Component","int","long","AttributedCharacterIterator","int","TextHitInfo","TextHitInfo"],"notNullIndices":[0]},{"className":"java.awt.event.InputMethodEvent","api":"InputMethodEvent","signature":"public InputMethodEvent(Component source, int id, AttributedCharacterIterator text, int committedCharacterCount, TextHitInfo caret, TextHitInfo visiblePosition)","paramTypes":["Component","int","AttributedCharacterIterator","int","TextHitInfo","TextHitInfo"],"notNullIndices":[1,2]},{"className":"java.awt.event.InputMethodEvent","api":"InputMethodEvent","signature":"public InputMethodEvent(Component source, int id, AttributedCharacterIterator text, int committedCharacterCount, TextHitInfo caret, TextHitInfo visiblePosition)","paramTypes":["Component","int","AttributedCharacterIterator","int","TextHitInfo","TextHitInfo"],"notNullIndices":[0]},{"className":"java.awt.event.InputMethodEvent","api":"InputMethodEvent","signature":"public InputMethodEvent(Component source, int id, TextHitInfo caret, TextHitInfo visiblePosition)","paramTypes":["Component","int","TextHitInfo","TextHitInfo"],"notNullIndices":[0]},{"className":"java.awt.event.InvocationEvent","api":"InvocationEvent","signature":"public InvocationEvent(Object source, Runnable runnable)","paramTypes":["Object","Runnable"],"notNullIndices":[0]},{"className":"java.awt.event.InvocationEvent","api":"InvocationEvent","signature":"public InvocationEvent(Object source, Runnable runnable, Object notifier, boolean catchThrowables)","paramTypes":["Object","Runnable","Object","boolean"],"notNullIndices":[0]},{"className":"java.awt.event.InvocationEvent","api":"InvocationEvent","signature":"public InvocationEvent(Object source, Runnable runnable, Runnable listener, boolean catchThrowables)","paramTypes":["Object","Runnable","Runnable","boolean"],"notNullIndices":[0]},{"className":"java.awt.event.InvocationEvent","api":"InvocationEvent","signature":"protected InvocationEvent(Object source, int id, Runnable runnable, Object notifier, boolean catchThrowables)","paramTypes":["Object","int","Runnable","Object","boolean"],"notNullIndices":[0]},{"className":"java.awt.event.ItemEvent","api":"ItemEvent","signature":"public ItemEvent(ItemSelectable source, int id, Object item, int stateChange)","paramTypes":["ItemSelectable","int","Object","int"],"notNullIndices":[0]},{"className":"java.awt.event.KeyEvent","api":"KeyEvent","signature":"public KeyEvent(Component source, int id, long when, int modifiers, int keyCode, char keyChar, int keyLocation)","paramTypes":["Component","int","long","int","int","char","int"],"notNullIndices":[0]},{"className":"java.awt.event.KeyEvent","api":"KeyEvent","signature":"public KeyEvent(Component source, int id, long when, int modifiers, int keyCode, char keyChar)","paramTypes":["Component","int","long","int","int","char"],"notNullIndices":[0]},{"className":"java.awt.event.MouseEvent","api":"MouseEvent","signature":"public MouseEvent(Component source, int id, long when, int modifiers, int x, int y, int clickCount, boolean popupTrigger, int button)","paramTypes":["Component","int","long","int","int","int","int","boolean","int"],"notNullIndices":[0]},{"className":"java.awt.event.MouseEvent","api":"MouseEvent","signature":"public MouseEvent(Component source, int id, long when, int modifiers, int x, int y, int clickCount, boolean popupTrigger, int button)","paramTypes":["Component","int","long","int","int","int","int","boolean","int"],"notNullIndices":[0]},{"className":"java.awt.event.MouseEvent","api":"MouseEvent","signature":"public MouseEvent(Component source, int id, long when, int modifiers, int x, int y, int clickCount, boolean popupTrigger)","paramTypes":["Component","int","long","int","int","int","int","boolean"],"notNullIndices":[0]},{"className":"java.awt.event.MouseEvent","api":"MouseEvent","signature":"public MouseEvent(Component source, int id, long when, int modifiers, int x, int y, int xAbs, int yAbs, int clickCount, boolean popupTrigger, int button)","paramTypes":["Component","int","long","int","int","int","int","int","int","boolean","int"],"notNullIndices":[0]},{"className":"java.awt.event.MouseEvent","api":"MouseEvent","signature":"public MouseEvent(Component source, int id, long when, int modifiers, int x, int y, int xAbs, int yAbs, int clickCount, boolean popupTrigger, int button)","paramTypes":["Component","int","long","int","int","int","int","int","int","boolean","int"],"notNullIndices":[0]},{"className":"java.awt.event.MouseWheelEvent","api":"MouseWheelEvent","signature":"public MouseWheelEvent(Component source, int id, long when, int modifiers, int x, int y, int clickCount, boolean popupTrigger, int scrollType, int scrollAmount, int wheelRotation)","paramTypes":["Component","int","long","int","int","int","int","boolean","int","int","int"],"notNullIndices":[0]},{"className":"java.awt.event.MouseWheelEvent","api":"MouseWheelEvent","signature":"public MouseWheelEvent(Component source, int id, long when, int modifiers, int x, int y, int xAbs, int yAbs, int clickCount, boolean popupTrigger, int scrollType, int scrollAmount, int wheelRotation)","paramTypes":["Component","int","long","int","int","int","int","int","int","boolean","int","int","int"],"notNullIndices":[0]},{"className":"java.awt.event.MouseWheelEvent","api":"MouseWheelEvent","signature":"public MouseWheelEvent(Component source, int id, long when, int modifiers, int x, int y, int xAbs, int yAbs, int clickCount, boolean popupTrigger, int scrollType, int scrollAmount, int wheelRotation, double preciseWheelRotation)","paramTypes":["Component","int","long","int","int","int","int","int","int","boolean","int","int","int","double"],"notNullIndices":[0]},{"className":"java.awt.event.PaintEvent","api":"PaintEvent","signature":"public PaintEvent(Component source, int id, Rectangle updateRect)","paramTypes":["Component","int","Rectangle"],"notNullIndices":[0]},{"className":"java.awt.event.TextEvent","api":"TextEvent","signature":"public TextEvent(Object source, int id)","paramTypes":["Object","int"],"notNullIndices":[0]},{"className":"java.awt.event.WindowEvent","api":"WindowEvent","signature":"public WindowEvent(Window source, int id, Window opposite, int oldState, int newState)","paramTypes":["Window","int","Window","int","int"],"notNullIndices":[0]},{"className":"java.awt.event.WindowEvent","api":"WindowEvent","signature":"public WindowEvent(Window source, int id, Window opposite)","paramTypes":["Window","int","Window"],"notNullIndices":[0]},{"className":"java.awt.event.WindowEvent","api":"WindowEvent","signature":"public WindowEvent(Window source, int id, int oldState, int newState)","paramTypes":["Window","int","int","int"],"notNullIndices":[0]},{"className":"java.awt.event.WindowEvent","api":"WindowEvent","signature":"public WindowEvent(Window source, int id)","paramTypes":["Window","int"],"notNullIndices":[0]},{"className":"java.awt.font.LayoutPath","api":"pointToPath","signature":"public abstract boolean pointToPath(Point2D point, Point2D location)","paramTypes":["Point2D","Point2D"],"notNullIndices":[0,1]},{"className":"java.awt.font.LayoutPath","api":"pathToPoint","signature":"public abstract void pathToPoint(Point2D location, boolean preceding, Point2D point)","paramTypes":["Point2D","boolean","Point2D"],"notNullIndices":[0,2]},{"className":"java.awt.font.LineBreakMeasurer","api":"insertChar","signature":"public void insertChar(AttributedCharacterIterator newParagraph, int insertPos)","paramTypes":["AttributedCharacterIterator","int"],"notNullIndices":[0]},{"className":"java.awt.font.LineBreakMeasurer","api":"deleteChar","signature":"public void deleteChar(AttributedCharacterIterator newParagraph, int deletePos)","paramTypes":["AttributedCharacterIterator","int"],"notNullIndices":[0]},{"className":"java.awt.font.NumericShaper.Range","api":"valueOf","signature":"public static NumericShaper.Range valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.font.NumericShaper","api":"getShaper","signature":"public static NumericShaper getShaper(NumericShaper.Range singleRange)","paramTypes":["NumericShaper.Range"],"notNullIndices":[0]},{"className":"java.awt.font.NumericShaper","api":"getContextualShaper","signature":"public static NumericShaper getContextualShaper(Set<NumericShaper.Range> ranges)","paramTypes":["Set"],"notNullIndices":[0]},{"className":"java.awt.font.NumericShaper","api":"getContextualShaper","signature":"public static NumericShaper getContextualShaper(Set<NumericShaper.Range> ranges, NumericShaper.Range defaultContext)","paramTypes":["Set","NumericShaper.Range"],"notNullIndices":[0,1]},{"className":"java.awt.font.NumericShaper","api":"shape","signature":"public void shape(char[] text, int start, int count)","paramTypes":["char[]","int","int"],"notNullIndices":[0]},{"className":"java.awt.font.NumericShaper","api":"shape","signature":"public void shape(char[] text, int start, int count, int context)","paramTypes":["char[]","int","int","int"],"notNullIndices":[0]},{"className":"java.awt.font.NumericShaper","api":"shape","signature":"public void shape(char[] text, int start, int count, NumericShaper.Range context)","paramTypes":["char[]","int","int","NumericShaper.Range"],"notNullIndices":[0,3]},{"className":"java.awt.font.TextLayout","api":"hitToPoint","signature":"public void hitToPoint(TextHitInfo hit, Point2D point)","paramTypes":["TextHitInfo","Point2D"],"notNullIndices":[0,1]},{"className":"java.awt.font.TextMeasurer","api":"insertChar","signature":"public void insertChar(AttributedCharacterIterator newParagraph, int insertPos)","paramTypes":["AttributedCharacterIterator","int"],"notNullIndices":[0]},{"className":"java.awt.font.TextMeasurer","api":"deleteChar","signature":"public void deleteChar(AttributedCharacterIterator newParagraph, int deletePos)","paramTypes":["AttributedCharacterIterator","int"],"notNullIndices":[0]},{"className":"java.awt.geom.Area","api":"Area","signature":"public Area(Shape s)","paramTypes":["Shape"],"notNullIndices":[0]},{"className":"java.awt.geom.Area","api":"add","signature":"public void add(Area rhs)","paramTypes":["Area"],"notNullIndices":[0]},{"className":"java.awt.geom.Area","api":"subtract","signature":"public void subtract(Area rhs)","paramTypes":["Area"],"notNullIndices":[0]},{"className":"java.awt.geom.Area","api":"intersect","signature":"public void intersect(Area rhs)","paramTypes":["Area"],"notNullIndices":[0]},{"className":"java.awt.geom.Area","api":"exclusiveOr","signature":"public void exclusiveOr(Area rhs)","paramTypes":["Area"],"notNullIndices":[0]},{"className":"java.awt.geom.Area","api":"transform","signature":"public void transform(AffineTransform t)","paramTypes":["AffineTransform"],"notNullIndices":[0]},{"className":"java.awt.geom.Area","api":"createTransformedArea","signature":"public Area createTransformedArea(AffineTransform t)","paramTypes":["AffineTransform"],"notNullIndices":[0]},{"className":"java.awt.im.InputContext","api":"selectInputMethod","signature":"public boolean selectInputMethod(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.awt.im.InputContext","api":"dispatchEvent","signature":"public void dispatchEvent(AWTEvent event)","paramTypes":["AWTEvent"],"notNullIndices":[0]},{"className":"java.awt.im.InputContext","api":"removeNotify","signature":"public void removeNotify(Component client)","paramTypes":["Component"],"notNullIndices":[0]},{"className":"java.awt.im.spi.InputMethod","api":"setInputMethodContext","signature":"void setInputMethodContext(InputMethodContext context)","paramTypes":["InputMethodContext"],"notNullIndices":[0]},{"className":"java.awt.im.spi.InputMethod","api":"setLocale","signature":"boolean setLocale(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.awt.im.spi.InputMethod","api":"dispatchEvent","signature":"void dispatchEvent(AWTEvent event)","paramTypes":["AWTEvent"],"notNullIndices":[0]},{"className":"java.awt.image.BaseMultiResolutionImage","api":"BaseMultiResolutionImage","signature":"public BaseMultiResolutionImage(Image... resolutionVariants)","paramTypes":["Image..."],"notNullIndices":[0]},{"className":"java.awt.image.BaseMultiResolutionImage","api":"BaseMultiResolutionImage","signature":"public BaseMultiResolutionImage(Image... resolutionVariants)","paramTypes":["Image..."],"notNullIndices":[0]},{"className":"java.awt.image.BaseMultiResolutionImage","api":"BaseMultiResolutionImage","signature":"public BaseMultiResolutionImage(int baseImageIndex, Image... resolutionVariants)","paramTypes":["int","Image..."],"notNullIndices":[1]},{"className":"java.awt.image.BufferedImage","api":"getProperty","signature":"public Object getProperty(String name, ImageObserver observer)","paramTypes":["String","ImageObserver"],"notNullIndices":[0]},{"className":"java.awt.image.BufferedImage","api":"getProperty","signature":"public Object getProperty(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.awt.image.BufferedImageFilter","api":"BufferedImageFilter","signature":"public BufferedImageFilter(BufferedImageOp op)","paramTypes":["BufferedImageOp"],"notNullIndices":[0]},{"className":"java.awt.image.ColorConvertOp","api":"ColorConvertOp","signature":"public ColorConvertOp(ColorSpace cspace, RenderingHints hints)","paramTypes":["ColorSpace","RenderingHints"],"notNullIndices":[0]},{"className":"java.awt.image.ColorConvertOp","api":"ColorConvertOp","signature":"public ColorConvertOp(ColorSpace srcCspace, ColorSpace dstCspace, RenderingHints hints)","paramTypes":["ColorSpace","ColorSpace","RenderingHints"],"notNullIndices":[0,1]},{"className":"java.awt.image.ColorConvertOp","api":"ColorConvertOp","signature":"public ColorConvertOp(ICC_Profile[] profiles, RenderingHints hints)","paramTypes":["ICC_Profile[]","RenderingHints"],"notNullIndices":[0]},{"className":"java.awt.image.ColorModel","api":"getComponentSize","signature":"public int getComponentSize(int componentIdx)","paramTypes":["int"],"notNullIndices":[0]},{"className":"java.awt.image.ComponentColorModel","api":"ComponentColorModel","signature":"public ComponentColorModel(ColorSpace colorSpace, int[] bits, boolean hasAlpha, boolean isAlphaPremultiplied, int transparency, int transferType)","paramTypes":["ColorSpace","int[]","boolean","boolean","int","int"],"notNullIndices":[1]},{"className":"java.awt.image.ComponentColorModel","api":"getDataElements","signature":"public Object getDataElements(int rgb, Object pixel)","paramTypes":["int","Object"],"notNullIndices":[1]},{"className":"java.awt.image.ComponentColorModel","api":"getComponents","signature":"public int[] getComponents(int pixel, int[] components, int offset)","paramTypes":["int","int[]","int"],"notNullIndices":[1]},{"className":"java.awt.image.ComponentColorModel","api":"getComponents","signature":"public int[] getComponents(Object pixel, int[] components, int offset)","paramTypes":["Object","int[]","int"],"notNullIndices":[1]},{"className":"java.awt.image.ComponentColorModel","api":"getDataElements","signature":"public Object getDataElements(int[] components, int offset, Object obj)","paramTypes":["int[]","int","Object"],"notNullIndices":[2]},{"className":"java.awt.image.ComponentSampleModel","api":"getDataElements","signature":"public Object getDataElements(int x, int y, Object obj, DataBuffer data)","paramTypes":["int","int","Object","DataBuffer"],"notNullIndices":[3]},{"className":"java.awt.image.ComponentSampleModel","api":"getPixel","signature":"public int[] getPixel(int x, int y, int[] iArray, DataBuffer data)","paramTypes":["int","int","int[]","DataBuffer"],"notNullIndices":[3]},{"className":"java.awt.image.ConvolveOp","api":"filter","signature":"public final BufferedImage filter(BufferedImage src, BufferedImage dst)","paramTypes":["BufferedImage","BufferedImage"],"notNullIndices":[0]},{"className":"java.awt.image.ConvolveOp","api":"filter","signature":"public final WritableRaster filter(Raster src, WritableRaster dst)","paramTypes":["Raster","WritableRaster"],"notNullIndices":[0]},{"className":"java.awt.image.DirectColorModel","api":"getComponents","signature":"public final int[] getComponents(Object pixel, int[] components, int offset)","paramTypes":["Object","int[]","int"],"notNullIndices":[0,1]},{"className":"java.awt.image.ImageFilter","api":"setProperties","signature":"public void setProperties(Hashtable<?,?> props)","paramTypes":["Hashtable"],"notNullIndices":[0]},{"className":"java.awt.image.ImageFilter","api":"resendTopDownLeftRight","signature":"public void resendTopDownLeftRight(ImageProducer ip)","paramTypes":["ImageProducer"],"notNullIndices":[0]},{"className":"java.awt.image.IndexColorModel","api":"getComponents","signature":"public int[] getComponents(Object pixel, int[] components, int offset)","paramTypes":["Object","int[]","int"],"notNullIndices":[0,1]},{"className":"java.awt.image.MemoryImageSource","api":"addConsumer","signature":"public void addConsumer(ImageConsumer ic)","paramTypes":["ImageConsumer"],"notNullIndices":[0]},{"className":"java.awt.image.MultiPixelPackedSampleModel","api":"getDataElements","signature":"public Object getDataElements(int x, int y, Object obj, DataBuffer data)","paramTypes":["int","int","Object","DataBuffer"],"notNullIndices":[2]},{"className":"java.awt.image.MultiPixelPackedSampleModel","api":"getDataElements","signature":"public Object getDataElements(int x, int y, Object obj, DataBuffer data)","paramTypes":["int","int","Object","DataBuffer"],"notNullIndices":[2]},{"className":"java.awt.image.RGBImageFilter","api":"filterIndexColorModel","signature":"public IndexColorModel filterIndexColorModel(IndexColorModel icm)","paramTypes":["IndexColorModel"],"notNullIndices":[0]},{"className":"java.awt.image.Raster","api":"Raster","signature":"protected Raster(SampleModel sampleModel, DataBuffer dataBuffer, Rectangle aRegion, Point sampleModelTranslate, Raster parent)","paramTypes":["SampleModel","DataBuffer","Rectangle","Point","Raster"],"notNullIndices":[0,1,2,3]},{"className":"java.awt.image.Raster","api":"createBandedRaster","signature":"public static WritableRaster createBandedRaster(int dataType, int w, int h, int scanlineStride, int[] bankIndices, int[] bandOffsets, Point location)","paramTypes":["int","int","int","int","int[]","int[]","Point"],"notNullIndices":[4,5]},{"className":"java.awt.image.Raster","api":"createInterleavedRaster","signature":"public static WritableRaster createInterleavedRaster(DataBuffer dataBuffer, int w, int h, int scanlineStride, int pixelStride, int[] bandOffsets, Point location)","paramTypes":["DataBuffer","int","int","int","int","int[]","Point"],"notNullIndices":[0]},{"className":"java.awt.image.Raster","api":"createBandedRaster","signature":"public static WritableRaster createBandedRaster(DataBuffer dataBuffer, int w, int h, int scanlineStride, int[] bankIndices, int[] bandOffsets, Point location)","paramTypes":["DataBuffer","int","int","int","int[]","int[]","Point"],"notNullIndices":[0]},{"className":"java.awt.image.Raster","api":"createPackedRaster","signature":"public static WritableRaster createPackedRaster(DataBuffer dataBuffer, int w, int h, int scanlineStride, int[] bandMasks, Point location)","paramTypes":["DataBuffer","int","int","int","int[]","Point"],"notNullIndices":[0]},{"className":"java.awt.image.Raster","api":"createPackedRaster","signature":"public static WritableRaster createPackedRaster(DataBuffer dataBuffer, int w, int h, int bitsPerPixel, Point location)","paramTypes":["DataBuffer","int","int","int","Point"],"notNullIndices":[0]},{"className":"java.awt.image.Raster","api":"createCompatibleWritableRaster","signature":"public WritableRaster createCompatibleWritableRaster(Rectangle rect)","paramTypes":["Rectangle"],"notNullIndices":[0]},{"className":"java.awt.image.SampleModel","api":"getPixel","signature":"public int[] getPixel(int x, int y, int[] iArray, DataBuffer data)","paramTypes":["int","int","int[]","DataBuffer"],"notNullIndices":[3]},{"className":"java.awt.image.SampleModel","api":"getDataElements","signature":"public abstract Object getDataElements(int x, int y, Object obj, DataBuffer data)","paramTypes":["int","int","Object","DataBuffer"],"notNullIndices":[3]},{"className":"java.awt.image.SampleModel","api":"getDataElements","signature":"public Object getDataElements(int x, int y, int w, int h, Object obj, DataBuffer data)","paramTypes":["int","int","int","int","Object","DataBuffer"],"notNullIndices":[5]},{"className":"java.awt.image.SampleModel","api":"setDataElements","signature":"public abstract void setDataElements(int x, int y, Object obj, DataBuffer data)","paramTypes":["int","int","Object","DataBuffer"],"notNullIndices":[3]},{"className":"java.awt.image.SampleModel","api":"setDataElements","signature":"public void setDataElements(int x, int y, int w, int h, Object obj, DataBuffer data)","paramTypes":["int","int","int","int","Object","DataBuffer"],"notNullIndices":[5]},{"className":"java.awt.image.SampleModel","api":"getPixel","signature":"public float[] getPixel(int x, int y, float[] fArray, DataBuffer data)","paramTypes":["int","int","float[]","DataBuffer"],"notNullIndices":[3]},{"className":"java.awt.image.SampleModel","api":"getPixel","signature":"public double[] getPixel(int x, int y, double[] dArray, DataBuffer data)","paramTypes":["int","int","double[]","DataBuffer"],"notNullIndices":[3]},{"className":"java.awt.image.SampleModel","api":"getPixels","signature":"public int[] getPixels(int x, int y, int w, int h, int[] iArray, DataBuffer data)","paramTypes":["int","int","int","int","int[]","DataBuffer"],"notNullIndices":[5]},{"className":"java.awt.image.SampleModel","api":"getPixels","signature":"public float[] getPixels(int x, int y, int w, int h, float[] fArray, DataBuffer data)","paramTypes":["int","int","int","int","float[]","DataBuffer"],"notNullIndices":[5]},{"className":"java.awt.image.SampleModel","api":"getPixels","signature":"public double[] getPixels(int x, int y, int w, int h, double[] dArray, DataBuffer data)","paramTypes":["int","int","int","int","double[]","DataBuffer"],"notNullIndices":[5]},{"className":"java.awt.image.SampleModel","api":"getSample","signature":"public abstract int getSample(int x, int y, int b, DataBuffer data)","paramTypes":["int","int","int","DataBuffer"],"notNullIndices":[3]},{"className":"java.awt.image.SampleModel","api":"getSampleFloat","signature":"public float getSampleFloat(int x, int y, int b, DataBuffer data)","paramTypes":["int","int","int","DataBuffer"],"notNullIndices":[3]},{"className":"java.awt.image.SampleModel","api":"getSampleDouble","signature":"public double getSampleDouble(int x, int y, int b, DataBuffer data)","paramTypes":["int","int","int","DataBuffer"],"notNullIndices":[3]},{"className":"java.awt.image.SampleModel","api":"getSamples","signature":"public int[] getSamples(int x, int y, int w, int h, int b, int[] iArray, DataBuffer data)","paramTypes":["int","int","int","int","int","int[]","DataBuffer"],"notNullIndices":[6]},{"className":"java.awt.image.SampleModel","api":"getSamples","signature":"public float[] getSamples(int x, int y, int w, int h, int b, float[] fArray, DataBuffer data)","paramTypes":["int","int","int","int","int","float[]","DataBuffer"],"notNullIndices":[6]},{"className":"java.awt.image.SampleModel","api":"getSamples","signature":"public double[] getSamples(int x, int y, int w, int h, int b, double[] dArray, DataBuffer data)","paramTypes":["int","int","int","int","int","double[]","DataBuffer"],"notNullIndices":[6]},{"className":"java.awt.image.SampleModel","api":"setPixel","signature":"public void setPixel(int x, int y, int[] iArray, DataBuffer data)","paramTypes":["int","int","int[]","DataBuffer"],"notNullIndices":[2,3]},{"className":"java.awt.image.SampleModel","api":"setPixel","signature":"public void setPixel(int x, int y, float[] fArray, DataBuffer data)","paramTypes":["int","int","float[]","DataBuffer"],"notNullIndices":[2,3]},{"className":"java.awt.image.SampleModel","api":"setPixel","signature":"public void setPixel(int x, int y, double[] dArray, DataBuffer data)","paramTypes":["int","int","double[]","DataBuffer"],"notNullIndices":[2,3]},{"className":"java.awt.image.SampleModel","api":"setPixels","signature":"public void setPixels(int x, int y, int w, int h, int[] iArray, DataBuffer data)","paramTypes":["int","int","int","int","int[]","DataBuffer"],"notNullIndices":[4,5]},{"className":"java.awt.image.SampleModel","api":"setPixels","signature":"public void setPixels(int x, int y, int w, int h, float[] fArray, DataBuffer data)","paramTypes":["int","int","int","int","float[]","DataBuffer"],"notNullIndices":[4,5]},{"className":"java.awt.image.SampleModel","api":"setPixels","signature":"public void setPixels(int x, int y, int w, int h, double[] dArray, DataBuffer data)","paramTypes":["int","int","int","int","double[]","DataBuffer"],"notNullIndices":[4,5]},{"className":"java.awt.image.SampleModel","api":"setSample","signature":"public abstract void setSample(int x, int y, int b, int s, DataBuffer data)","paramTypes":["int","int","int","int","DataBuffer"],"notNullIndices":[4]},{"className":"java.awt.image.SampleModel","api":"setSample","signature":"public void setSample(int x, int y, int b, float s, DataBuffer data)","paramTypes":["int","int","int","float","DataBuffer"],"notNullIndices":[4]},{"className":"java.awt.image.SampleModel","api":"setSample","signature":"public void setSample(int x, int y, int b, double s, DataBuffer data)","paramTypes":["int","int","int","double","DataBuffer"],"notNullIndices":[4]},{"className":"java.awt.image.SampleModel","api":"setSamples","signature":"public void setSamples(int x, int y, int w, int h, int b, int[] iArray, DataBuffer data)","paramTypes":["int","int","int","int","int","int[]","DataBuffer"],"notNullIndices":[5,6]},{"className":"java.awt.image.SampleModel","api":"setSamples","signature":"public void setSamples(int x, int y, int w, int h, int b, float[] fArray, DataBuffer data)","paramTypes":["int","int","int","int","int","float[]","DataBuffer"],"notNullIndices":[5,6]},{"className":"java.awt.image.SampleModel","api":"setSamples","signature":"public void setSamples(int x, int y, int w, int h, int b, double[] dArray, DataBuffer data)","paramTypes":["int","int","int","int","int","double[]","DataBuffer"],"notNullIndices":[5,6]},{"className":"java.awt.image.WritableRaster","api":"setDataElements","signature":"public void setDataElements(int x, int y, Raster inRaster)","paramTypes":["int","int","Raster"],"notNullIndices":[2]},{"className":"java.awt.image.WritableRaster","api":"setDataElements","signature":"public void setDataElements(int x, int y, int w, int h, Object inData)","paramTypes":["int","int","int","int","Object"],"notNullIndices":[4]},{"className":"java.awt.image.WritableRaster","api":"setRect","signature":"public void setRect(Raster srcRaster)","paramTypes":["Raster"],"notNullIndices":[0]},{"className":"java.awt.image.WritableRaster","api":"setRect","signature":"public void setRect(int dx, int dy, Raster srcRaster)","paramTypes":["int","int","Raster"],"notNullIndices":[2]},{"className":"java.awt.image.WritableRaster","api":"setPixel","signature":"public void setPixel(int x, int y, int[] iArray)","paramTypes":["int","int","int[]"],"notNullIndices":[2]},{"className":"java.awt.image.WritableRaster","api":"setPixel","signature":"public void setPixel(int x, int y, float[] fArray)","paramTypes":["int","int","float[]"],"notNullIndices":[2]},{"className":"java.awt.image.WritableRaster","api":"setPixel","signature":"public void setPixel(int x, int y, double[] dArray)","paramTypes":["int","int","double[]"],"notNullIndices":[2]},{"className":"java.awt.image.WritableRaster","api":"setPixels","signature":"public void setPixels(int x, int y, int w, int h, int[] iArray)","paramTypes":["int","int","int","int","int[]"],"notNullIndices":[4]},{"className":"java.awt.image.WritableRaster","api":"setPixels","signature":"public void setPixels(int x, int y, int w, int h, float[] fArray)","paramTypes":["int","int","int","int","float[]"],"notNullIndices":[4]},{"className":"java.awt.image.WritableRaster","api":"setPixels","signature":"public void setPixels(int x, int y, int w, int h, double[] dArray)","paramTypes":["int","int","int","int","double[]"],"notNullIndices":[4]},{"className":"java.awt.image.WritableRaster","api":"setSamples","signature":"public void setSamples(int x, int y, int w, int h, int b, int[] iArray)","paramTypes":["int","int","int","int","int","int[]"],"notNullIndices":[5]},{"className":"java.awt.image.WritableRaster","api":"setSamples","signature":"public void setSamples(int x, int y, int w, int h, int b, float[] fArray)","paramTypes":["int","int","int","int","int","float[]"],"notNullIndices":[5]},{"className":"java.awt.image.WritableRaster","api":"setSamples","signature":"public void setSamples(int x, int y, int w, int h, int b, double[] dArray)","paramTypes":["int","int","int","int","int","double[]"],"notNullIndices":[5]},{"className":"java.awt.image.renderable.ParameterBlock","api":"getByteParameter","signature":"public byte getByteParameter(int index)","paramTypes":["int"],"notNullIndices":[0]},{"className":"java.awt.image.renderable.ParameterBlock","api":"getCharParameter","signature":"public char getCharParameter(int index)","paramTypes":["int"],"notNullIndices":[0]},{"className":"java.awt.image.renderable.ParameterBlock","api":"getShortParameter","signature":"public short getShortParameter(int index)","paramTypes":["int"],"notNullIndices":[0]},{"className":"java.awt.image.renderable.ParameterBlock","api":"getIntParameter","signature":"public int getIntParameter(int index)","paramTypes":["int"],"notNullIndices":[0]},{"className":"java.awt.image.renderable.ParameterBlock","api":"getLongParameter","signature":"public long getLongParameter(int index)","paramTypes":["int"],"notNullIndices":[0]},{"className":"java.awt.image.renderable.ParameterBlock","api":"getFloatParameter","signature":"public float getFloatParameter(int index)","paramTypes":["int"],"notNullIndices":[0]},{"className":"java.awt.image.renderable.ParameterBlock","api":"getDoubleParameter","signature":"public double getDoubleParameter(int index)","paramTypes":["int"],"notNullIndices":[0]},{"className":"java.awt.print.Book","api":"setPage","signature":"public void setPage(int pageIndex, Printable painter, PageFormat page) throws IndexOutOfBoundsException","paramTypes":["int","Printable","PageFormat"],"notNullIndices":[1,2]},{"className":"java.awt.print.Book","api":"append","signature":"public void append(Printable painter, PageFormat page)","paramTypes":["Printable","PageFormat"],"notNullIndices":[0,1]},{"className":"java.awt.print.Book","api":"append","signature":"public void append(Printable painter, PageFormat page, int numPages)","paramTypes":["Printable","PageFormat","int"],"notNullIndices":[0,1]},{"className":"java.awt.print.PageFormat","api":"setPaper","signature":"public void setPaper(Paper paper)","paramTypes":["Paper"],"notNullIndices":[0]},{"className":"java.awt.print.PrinterJob","api":"setPageable","signature":"public abstract void setPageable(Pageable document) throws NullPointerException","paramTypes":["Pageable"],"notNullIndices":[0]},{"className":"java.awt.print.PrinterJob","api":"printDialog","signature":"public boolean printDialog(PrintRequestAttributeSet attributes) throws HeadlessException","paramTypes":["PrintRequestAttributeSet"],"notNullIndices":[0]},{"className":"java.awt.print.PrinterJob","api":"pageDialog","signature":"public PageFormat pageDialog(PrintRequestAttributeSet attributes) throws HeadlessException","paramTypes":["PrintRequestAttributeSet"],"notNullIndices":[0]},{"className":"java.beans.DefaultPersistenceDelegate","api":"initialize","signature":"protected void initialize(Class<?> type, Object oldInstance, Object newInstance, Encoder out)","paramTypes":["Class","Object","Object","Encoder"],"notNullIndices":[3]},{"className":"java.beans.EventHandler","api":"EventHandler","signature":"@ConstructorProperties({\"target\",\"action\",\"eventPropertyName\",\"listenerMethodName\"}) public EventHandler(Object target, String action, String eventPropertyName, String listenerMethodName)","paramTypes":["Object","String","String","String"],"notNullIndices":[0]},{"className":"java.beans.EventHandler","api":"EventHandler","signature":"@ConstructorProperties({\"target\",\"action\",\"eventPropertyName\",\"listenerMethodName\"}) public EventHandler(Object target, String action, String eventPropertyName, String listenerMethodName)","paramTypes":["Object","String","String","String"],"notNullIndices":[1]},{"className":"java.beans.EventHandler","api":"create","signature":"public static <T> T create(Class<T> listenerInterface, Object target, String action)","paramTypes":["Class","Object","String"],"notNullIndices":[0]},{"className":"java.beans.EventHandler","api":"create","signature":"public static <T> T create(Class<T> listenerInterface, Object target, String action)","paramTypes":["Class","Object","String"],"notNullIndices":[1]},{"className":"java.beans.EventHandler","api":"create","signature":"public static <T> T create(Class<T> listenerInterface, Object target, String action)","paramTypes":["Class","Object","String"],"notNullIndices":[2]},{"className":"java.beans.EventHandler","api":"create","signature":"public static <T> T create(Class<T> listenerInterface, Object target, String action, String eventPropertyName)","paramTypes":["Class","Object","String","String"],"notNullIndices":[0]},{"className":"java.beans.EventHandler","api":"create","signature":"public static <T> T create(Class<T> listenerInterface, Object target, String action, String eventPropertyName)","paramTypes":["Class","Object","String","String"],"notNullIndices":[1]},{"className":"java.beans.EventHandler","api":"create","signature":"public static <T> T create(Class<T> listenerInterface, Object target, String action, String eventPropertyName)","paramTypes":["Class","Object","String","String"],"notNullIndices":[2]},{"className":"java.beans.EventHandler","api":"create","signature":"public static <T> T create(Class<T> listenerInterface, Object target, String action, String eventPropertyName, String listenerMethodName)","paramTypes":["Class","Object","String","String","String"],"notNullIndices":[0]},{"className":"java.beans.EventHandler","api":"create","signature":"public static <T> T create(Class<T> listenerInterface, Object target, String action, String eventPropertyName, String listenerMethodName)","paramTypes":["Class","Object","String","String","String"],"notNullIndices":[1]},{"className":"java.beans.EventHandler","api":"create","signature":"public static <T> T create(Class<T> listenerInterface, Object target, String action, String eventPropertyName, String listenerMethodName)","paramTypes":["Class","Object","String","String","String"],"notNullIndices":[2]},{"className":"java.beans.Introspector","api":"flushFromCaches","signature":"public static void flushFromCaches(Class<?> clz)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.beans.PersistenceDelegate","api":"writeObject","signature":"public void writeObject(Object oldInstance, Encoder out)","paramTypes":["Object","Encoder"],"notNullIndices":[1]},{"className":"java.beans.PersistenceDelegate","api":"initialize","signature":"protected void initialize(Class<?> type, Object oldInstance, Object newInstance, Encoder out)","paramTypes":["Class","Object","Object","Encoder"],"notNullIndices":[3]},{"className":"java.beans.PropertyChangeEvent","api":"PropertyChangeEvent","signature":"public PropertyChangeEvent(Object source, String propertyName, Object oldValue, Object newValue)","paramTypes":["Object","String","Object","Object"],"notNullIndices":[0]},{"className":"java.beans.XMLEncoder","api":"XMLEncoder","signature":"public XMLEncoder(OutputStream out)","paramTypes":["OutputStream"],"notNullIndices":[0]},{"className":"java.beans.XMLEncoder","api":"XMLEncoder","signature":"public XMLEncoder(OutputStream out, String charset, boolean declaration, int indentation)","paramTypes":["OutputStream","String","boolean","int"],"notNullIndices":[0,1]},{"className":"java.beans.beancontext.BeanContextMembershipEvent","api":"BeanContextMembershipEvent","signature":"public BeanContextMembershipEvent(BeanContext bc, Collection changes)","paramTypes":["BeanContext","Collection"],"notNullIndices":[1]},{"className":"java.beans.beancontext.BeanContextMembershipEvent","api":"BeanContextMembershipEvent","signature":"public BeanContextMembershipEvent(BeanContext bc, Object[] changes)","paramTypes":["BeanContext","Object[]"],"notNullIndices":[1]},{"className":"java.beans.beancontext.BeanContextServicesSupport","api":"addBeanContextServicesListener","signature":"public void addBeanContextServicesListener(BeanContextServicesListener bcsl)","paramTypes":["BeanContextServicesListener"],"notNullIndices":[0]},{"className":"java.beans.beancontext.BeanContextSupport","api":"addBeanContextMembershipListener","signature":"public void addBeanContextMembershipListener(BeanContextMembershipListener bcml)","paramTypes":["BeanContextMembershipListener"],"notNullIndices":[0]},{"className":"java.beans.beancontext.BeanContextSupport","api":"removeBeanContextMembershipListener","signature":"public void removeBeanContextMembershipListener(BeanContextMembershipListener bcml)","paramTypes":["BeanContextMembershipListener"],"notNullIndices":[0]},{"className":"java.io.ByteArrayInputStream","api":"read","signature":"public int read(byte[] b, int off, int len)","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.ByteArrayOutputStream","api":"write","signature":"public void write(byte[] b, int off, int len)","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.ByteArrayOutputStream","api":"writeBytes","signature":"public void writeBytes(byte[] b)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.io.ByteArrayOutputStream","api":"writeTo","signature":"public void writeTo(OutputStream out) throws IOException","paramTypes":["OutputStream"],"notNullIndices":[0]},{"className":"java.io.DataInput","api":"readFully","signature":"void readFully(byte[] b) throws IOException","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.io.DataInput","api":"readFully","signature":"void readFully(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.DataInputStream","api":"read","signature":"public final int read(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.DataInputStream","api":"readFully","signature":"public final void readFully(byte[] b) throws IOException","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.io.DataInputStream","api":"readFully","signature":"public final void readFully(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.File","api":"File","signature":"public File(String pathname)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.io.File","api":"File","signature":"public File(String parent, String child)","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"java.io.File","api":"File","signature":"public File(File parent, String child)","paramTypes":["File","String"],"notNullIndices":[1]},{"className":"java.io.File","api":"File","signature":"public File(URI uri)","paramTypes":["URI"],"notNullIndices":[0]},{"className":"java.io.File","api":"renameTo","signature":"public boolean renameTo(File dest)","paramTypes":["File"],"notNullIndices":[0]},{"className":"java.io.FileInputStream","api":"read","signature":"public int read(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.FilePermission","api":"FilePermission","signature":"public FilePermission(String path, String actions)","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"java.io.FilterInputStream","api":"read","signature":"public int read(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.FilterReader","api":"FilterReader","signature":"protected FilterReader(Reader in)","paramTypes":["Reader"],"notNullIndices":[0]},{"className":"java.io.FilterWriter","api":"FilterWriter","signature":"protected FilterWriter(Writer out)","paramTypes":["Writer"],"notNullIndices":[0]},{"className":"java.io.InputStream","api":"read","signature":"public int read(byte[] b) throws IOException","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.io.InputStream","api":"read","signature":"public int read(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.InputStream","api":"readNBytes","signature":"public int readNBytes(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.InputStream","api":"transferTo","signature":"public long transferTo(OutputStream out) throws IOException","paramTypes":["OutputStream"],"notNullIndices":[0]},{"className":"java.io.ObjectInputFilter.Status","api":"valueOf","signature":"public static ObjectInputFilter.Status valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.io.ObjectInputStream","api":"ObjectInputStream","signature":"public ObjectInputStream(InputStream in) throws IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"java.io.ObjectInputStream","api":"read","signature":"public int read(byte[] buf, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.ObjectInputStream","api":"readFully","signature":"public void readFully(byte[] buf) throws IOException","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.io.ObjectInputStream","api":"readFully","signature":"public void readFully(byte[] buf, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.ObjectInputStream","api":"setObjectInputFilter","signature":"public final void setObjectInputFilter(ObjectInputFilter filter)","paramTypes":["ObjectInputFilter"],"notNullIndices":[0]},{"className":"java.io.ObjectOutputStream","api":"ObjectOutputStream","signature":"public ObjectOutputStream(OutputStream out) throws IOException","paramTypes":["OutputStream"],"notNullIndices":[0]},{"className":"java.io.PipedInputStream","api":"read","signature":"public int read(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.PrintStream","api":"print","signature":"public void print(char[] s)","paramTypes":["char[]"],"notNullIndices":[0]},{"className":"java.io.PrintStream","api":"printf","signature":"public PrintStream printf(String format, Object... args)","paramTypes":["String","Object..."],"notNullIndices":[0]},{"className":"java.io.PrintStream","api":"printf","signature":"public PrintStream printf(Locale l, String format, Object... args)","paramTypes":["Locale","String","Object..."],"notNullIndices":[1]},{"className":"java.io.PrintStream","api":"format","signature":"public PrintStream format(String format, Object... args)","paramTypes":["String","Object..."],"notNullIndices":[0]},{"className":"java.io.PrintStream","api":"format","signature":"public PrintStream format(Locale l, String format, Object... args)","paramTypes":["Locale","String","Object..."],"notNullIndices":[1]},{"className":"java.io.PrintWriter","api":"print","signature":"public void print(char[] s)","paramTypes":["char[]"],"notNullIndices":[0]},{"className":"java.io.PrintWriter","api":"printf","signature":"public PrintWriter printf(String format, Object... args)","paramTypes":["String","Object..."],"notNullIndices":[0]},{"className":"java.io.PrintWriter","api":"printf","signature":"public PrintWriter printf(Locale l, String format, Object... args)","paramTypes":["Locale","String","Object..."],"notNullIndices":[1]},{"className":"java.io.PrintWriter","api":"format","signature":"public PrintWriter format(String format, Object... args)","paramTypes":["String","Object..."],"notNullIndices":[0]},{"className":"java.io.PrintWriter","api":"format","signature":"public PrintWriter format(Locale l, String format, Object... args)","paramTypes":["Locale","String","Object..."],"notNullIndices":[1]},{"className":"java.io.PushbackInputStream","api":"read","signature":"public int read(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.RandomAccessFile","api":"read","signature":"public int read(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.RandomAccessFile","api":"read","signature":"public int read(byte[] b) throws IOException","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.io.RandomAccessFile","api":"readFully","signature":"public final void readFully(byte[] b) throws IOException","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.io.RandomAccessFile","api":"readFully","signature":"public final void readFully(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.Reader","api":"read","signature":"public int read(CharBuffer target) throws IOException","paramTypes":["CharBuffer"],"notNullIndices":[0]},{"className":"java.io.Reader","api":"transferTo","signature":"public long transferTo(Writer out) throws IOException","paramTypes":["Writer"],"notNullIndices":[0]},{"className":"java.io.SequenceInputStream","api":"read","signature":"public int read(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.io.SerializablePermission","api":"SerializablePermission","signature":"public SerializablePermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.io.SerializablePermission","api":"SerializablePermission","signature":"public SerializablePermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.io.UncheckedIOException","api":"UncheckedIOException","signature":"public UncheckedIOException(String message, IOException cause)","paramTypes":["String","IOException"],"notNullIndices":[1]},{"className":"java.io.UncheckedIOException","api":"UncheckedIOException","signature":"public UncheckedIOException(IOException cause)","paramTypes":["IOException"],"notNullIndices":[0]},{"className":"java.lang.Boolean","api":"compareTo","signature":"public int compareTo(Boolean b)","paramTypes":["Boolean"],"notNullIndices":[0]},{"className":"java.lang.Character.Subset","api":"Subset","signature":"protected Subset(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Character.UnicodeBlock","api":"forName","signature":"public static final Character.UnicodeBlock forName(String blockName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Character.UnicodeScript","api":"valueOf","signature":"public static Character.UnicodeScript valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Character.UnicodeScript","api":"forName","signature":"public static final Character.UnicodeScript forName(String scriptName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Character","api":"codePointAt","signature":"public static int codePointAt(CharSequence seq, int index)","paramTypes":["CharSequence","int"],"notNullIndices":[0]},{"className":"java.lang.Character","api":"codePointAt","signature":"public static int codePointAt(char[] a, int index)","paramTypes":["char[]","int"],"notNullIndices":[0]},{"className":"java.lang.Character","api":"codePointAt","signature":"public static int codePointAt(char[] a, int index, int limit)","paramTypes":["char[]","int","int"],"notNullIndices":[0]},{"className":"java.lang.Character","api":"codePointBefore","signature":"public static int codePointBefore(CharSequence seq, int index)","paramTypes":["CharSequence","int"],"notNullIndices":[0]},{"className":"java.lang.Character","api":"codePointBefore","signature":"public static int codePointBefore(char[] a, int index)","paramTypes":["char[]","int"],"notNullIndices":[0]},{"className":"java.lang.Character","api":"codePointBefore","signature":"public static int codePointBefore(char[] a, int index, int start)","paramTypes":["char[]","int","int"],"notNullIndices":[0]},{"className":"java.lang.Character","api":"toChars","signature":"public static int toChars(int codePoint, char[] dst, int dstIndex)","paramTypes":["int","char[]","int"],"notNullIndices":[1]},{"className":"java.lang.Character","api":"codePointCount","signature":"public static int codePointCount(CharSequence seq, int beginIndex, int endIndex)","paramTypes":["CharSequence","int","int"],"notNullIndices":[0]},{"className":"java.lang.Character","api":"codePointCount","signature":"public static int codePointCount(char[] a, int offset, int count)","paramTypes":["char[]","int","int"],"notNullIndices":[0]},{"className":"java.lang.Character","api":"offsetByCodePoints","signature":"public static int offsetByCodePoints(CharSequence seq, int index, int codePointOffset)","paramTypes":["CharSequence","int","int"],"notNullIndices":[0]},{"className":"java.lang.Character","api":"offsetByCodePoints","signature":"public static int offsetByCodePoints(char[] a, int start, int count, int index, int codePointOffset)","paramTypes":["char[]","int","int","int","int"],"notNullIndices":[0]},{"className":"java.lang.Character","api":"codePointOf","signature":"public static int codePointOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Class<T>","api":"forName","signature":"public static Class<?> forName(Module module, String name)","paramTypes":["Module","String"],"notNullIndices":[0,1]},{"className":"java.lang.Class<T>","api":"isAssignableFrom","signature":"public boolean isAssignableFrom(Class<?> cls)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.Class<T>","api":"getField","signature":"public Field getField(String name) throws NoSuchFieldException, SecurityException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Class<T>","api":"getMethod","signature":"public Method getMethod(String name, Class<?>... parameterTypes) throws NoSuchMethodException, SecurityException","paramTypes":["String","Class..."],"notNullIndices":[0]},{"className":"java.lang.Class<T>","api":"getDeclaredField","signature":"public Field getDeclaredField(String name) throws NoSuchFieldException, SecurityException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Class<T>","api":"getDeclaredMethod","signature":"public Method getDeclaredMethod(String name, Class<?>... parameterTypes) throws NoSuchMethodException, SecurityException","paramTypes":["String","Class..."],"notNullIndices":[0]},{"className":"java.lang.Class<T>","api":"getResourceAsStream","signature":"public InputStream getResourceAsStream(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Class<T>","api":"getResource","signature":"public URL getResource(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Class<T>","api":"cast","signature":"public T cast(Object obj)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.lang.Class<T>","api":"getAnnotation","signature":"public <A extends Annotation> A getAnnotation(Class<A> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.Class<T>","api":"isAnnotationPresent","signature":"public boolean isAnnotationPresent(Class<? extends Annotation> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.Class<T>","api":"getAnnotationsByType","signature":"public <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.Class<T>","api":"getDeclaredAnnotation","signature":"public <A extends Annotation> A getDeclaredAnnotation(Class<A> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.Class<T>","api":"getDeclaredAnnotationsByType","signature":"public <A extends Annotation> A[] getDeclaredAnnotationsByType(Class<A> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.ClassLoader","api":"defineClass","signature":"protected final Class<?> defineClass(String name, byte[] b, int off, int len, ProtectionDomain protectionDomain) throws ClassFormatError","paramTypes":["String","byte[]","int","int","ProtectionDomain"],"notNullIndices":[0]},{"className":"java.lang.ClassLoader","api":"defineClass","signature":"protected final Class<?> defineClass(String name, ByteBuffer b, ProtectionDomain protectionDomain) throws ClassFormatError","paramTypes":["String","ByteBuffer","ProtectionDomain"],"notNullIndices":[0]},{"className":"java.lang.ClassLoader","api":"resolveClass","signature":"protected final void resolveClass(Class<?> c)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.ClassLoader","api":"getResource","signature":"public URL getResource(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.ClassLoader","api":"getResources","signature":"public Enumeration<URL> getResources(String name) throws IOException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.ClassLoader","api":"resources","signature":"public Stream<URL> resources(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.ClassLoader","api":"getResourceAsStream","signature":"public InputStream getResourceAsStream(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.ClassLoader","api":"definePackage","signature":"protected Package definePackage(String name, String specTitle, String specVersion, String specVendor, String implTitle, String implVersion, String implVendor, URL sealBase)","paramTypes":["String","String","String","String","String","String","String","URL"],"notNullIndices":[0]},{"className":"java.lang.ClassLoader","api":"getDefinedPackage","signature":"public final Package getDefinedPackage(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.ClassValue<T>","api":"get","signature":"public T get(Class<?> type)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.ClassValue<T>","api":"remove","signature":"public void remove(Class<?> type)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.Comparable<T>","api":"compareTo","signature":"int compareTo(T o)","paramTypes":["T"],"notNullIndices":[0]},{"className":"java.lang.Double","api":"parseDouble","signature":"public static double parseDouble(String s) throws NumberFormatException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Enum<E>","api":"valueOf","signature":"public static <T extends Enum<T>> T valueOf(Class<T> enumType, String name)","paramTypes":["Class","String"],"notNullIndices":[0,1]},{"className":"java.lang.Float","api":"parseFloat","signature":"public static float parseFloat(String s) throws NumberFormatException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Integer","api":"parseInt","signature":"public static int parseInt(CharSequence s, int beginIndex, int endIndex, int radix) throws NumberFormatException","paramTypes":["CharSequence","int","int","int"],"notNullIndices":[0]},{"className":"java.lang.Integer","api":"parseUnsignedInt","signature":"public static int parseUnsignedInt(CharSequence s, int beginIndex, int endIndex, int radix) throws NumberFormatException","paramTypes":["CharSequence","int","int","int"],"notNullIndices":[0]},{"className":"java.lang.Iterable<T>","api":"forEach","signature":"default void forEach(Consumer<? super T> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.lang.Long","api":"parseLong","signature":"public static long parseLong(CharSequence s, int beginIndex, int endIndex, int radix) throws NumberFormatException","paramTypes":["CharSequence","int","int","int"],"notNullIndices":[0]},{"className":"java.lang.Long","api":"parseUnsignedLong","signature":"public static long parseUnsignedLong(CharSequence s, int beginIndex, int endIndex, int radix) throws NumberFormatException","paramTypes":["CharSequence","int","int","int"],"notNullIndices":[0]},{"className":"java.lang.Module","api":"addExports","signature":"public Module addExports(String pn, Module other)","paramTypes":["String","Module"],"notNullIndices":[0]},{"className":"java.lang.Module","api":"addOpens","signature":"public Module addOpens(String pn, Module other)","paramTypes":["String","Module"],"notNullIndices":[0]},{"className":"java.lang.Package","api":"getAnnotation","signature":"public <A extends Annotation> A getAnnotation(Class<A> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.Package","api":"isAnnotationPresent","signature":"public boolean isAnnotationPresent(Class<? extends Annotation> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.Package","api":"getAnnotationsByType","signature":"public <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.Package","api":"getDeclaredAnnotation","signature":"public <A extends Annotation> A getDeclaredAnnotation(Class<A> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.Package","api":"getDeclaredAnnotationsByType","signature":"public <A extends Annotation> A[] getDeclaredAnnotationsByType(Class<A> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.Process","api":"waitFor","signature":"public boolean waitFor(long timeout, TimeUnit unit) throws InterruptedException","paramTypes":["long","TimeUnit"],"notNullIndices":[1]},{"className":"java.lang.ProcessBuilder.Redirect.Type","api":"valueOf","signature":"public static ProcessBuilder.Redirect.Type valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.ProcessBuilder","api":"startPipeline","signature":"public static List<Process> startPipeline(List<ProcessBuilder> builders) throws IOException","paramTypes":["List"],"notNullIndices":[0]},{"className":"java.lang.ProcessHandle","api":"compareTo","signature":"int compareTo(ProcessHandle other)","paramTypes":["ProcessHandle"],"notNullIndices":[0]},{"className":"java.lang.Readable","api":"read","signature":"int read(CharBuffer cb) throws IOException","paramTypes":["CharBuffer"],"notNullIndices":[0]},{"className":"java.lang.Runtime.Version","api":"parse","signature":"public static Runtime.Version parse(String s)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Runtime.Version","api":"compareTo","signature":"public int compareTo(Runtime.Version obj)","paramTypes":["Runtime.Version"],"notNullIndices":[0]},{"className":"java.lang.Runtime.Version","api":"compareToIgnoreOptional","signature":"public int compareToIgnoreOptional(Runtime.Version obj)","paramTypes":["Runtime.Version"],"notNullIndices":[0]},{"className":"java.lang.Runtime","api":"exec","signature":"public Process exec(String command) throws IOException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Runtime","api":"exec","signature":"public Process exec(String command, String[] envp) throws IOException","paramTypes":["String","String[]"],"notNullIndices":[0,1]},{"className":"java.lang.Runtime","api":"exec","signature":"public Process exec(String command, String[] envp, File dir) throws IOException","paramTypes":["String","String[]","File"],"notNullIndices":[0,1]},{"className":"java.lang.Runtime","api":"exec","signature":"public Process exec(String[] cmdarray) throws IOException","paramTypes":["String[]"],"notNullIndices":[0]},{"className":"java.lang.Runtime","api":"exec","signature":"public Process exec(String[] cmdarray, String[] envp) throws IOException","paramTypes":["String[]","String[]"],"notNullIndices":[0,1]},{"className":"java.lang.Runtime","api":"exec","signature":"public Process exec(String[] cmdarray, String[] envp, File dir) throws IOException","paramTypes":["String[]","String[]","File"],"notNullIndices":[0,1]},{"className":"java.lang.Runtime","api":"load","signature":"public void load(String filename)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Runtime","api":"loadLibrary","signature":"public void loadLibrary(String libname)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.RuntimePermission","api":"RuntimePermission","signature":"public RuntimePermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.RuntimePermission","api":"RuntimePermission","signature":"public RuntimePermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkPermission","signature":"public void checkPermission(Permission perm)","paramTypes":["Permission"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkPermission","signature":"public void checkPermission(Permission perm, Object context)","paramTypes":["Permission","Object"],"notNullIndices":[1]},{"className":"java.lang.SecurityManager","api":"checkAccess","signature":"public void checkAccess(Thread t)","paramTypes":["Thread"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkAccess","signature":"public void checkAccess(ThreadGroup g)","paramTypes":["ThreadGroup"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkExec","signature":"public void checkExec(String cmd)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkLink","signature":"public void checkLink(String lib)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkRead","signature":"public void checkRead(FileDescriptor fd)","paramTypes":["FileDescriptor"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkRead","signature":"public void checkRead(String file)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkRead","signature":"public void checkRead(String file, Object context)","paramTypes":["String","Object"],"notNullIndices":[1]},{"className":"java.lang.SecurityManager","api":"checkRead","signature":"public void checkRead(String file, Object context)","paramTypes":["String","Object"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkWrite","signature":"public void checkWrite(FileDescriptor fd)","paramTypes":["FileDescriptor"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkWrite","signature":"public void checkWrite(String file)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkDelete","signature":"public void checkDelete(String file)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkConnect","signature":"public void checkConnect(String host, int port)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkConnect","signature":"public void checkConnect(String host, int port, Object context)","paramTypes":["String","int","Object"],"notNullIndices":[2]},{"className":"java.lang.SecurityManager","api":"checkConnect","signature":"public void checkConnect(String host, int port, Object context)","paramTypes":["String","int","Object"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkAccept","signature":"public void checkAccept(String host, int port)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkMulticast","signature":"public void checkMulticast(InetAddress maddr)","paramTypes":["InetAddress"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkPropertyAccess","signature":"public void checkPropertyAccess(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkPackageAccess","signature":"public void checkPackageAccess(String pkg)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkPackageDefinition","signature":"public void checkPackageDefinition(String pkg)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.SecurityManager","api":"checkSecurityAccess","signature":"public void checkSecurityAccess(String target)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.StackTraceElement","api":"StackTraceElement","signature":"public StackTraceElement(String declaringClass, String methodName, String fileName, int lineNumber)","paramTypes":["String","String","String","int"],"notNullIndices":[0,1]},{"className":"java.lang.StackTraceElement","api":"StackTraceElement","signature":"public StackTraceElement(String classLoaderName, String moduleName, String moduleVersion, String declaringClass, String methodName, String fileName, int lineNumber)","paramTypes":["String","String","String","String","String","String","int"],"notNullIndices":[3,4]},{"className":"java.lang.StackWalker.Option","api":"valueOf","signature":"public static StackWalker.Option valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.String","api":"join","signature":"public static String join(CharSequence delimiter, CharSequence... elements)","paramTypes":["CharSequence","CharSequence..."],"notNullIndices":[0,1]},{"className":"java.lang.String","api":"join","signature":"public static String join(CharSequence delimiter, Iterable<? extends CharSequence> elements)","paramTypes":["CharSequence","Iterable"],"notNullIndices":[0,1]},{"className":"java.lang.System.Logger.Level","api":"valueOf","signature":"public static System.Logger.Level valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.System.Logger","api":"isLoggable","signature":"boolean isLoggable(System.Logger.Level level)","paramTypes":["System.Logger.Level"],"notNullIndices":[0]},{"className":"java.lang.System.Logger","api":"log","signature":"default void log(System.Logger.Level level, String msg)","paramTypes":["System.Logger.Level","String"],"notNullIndices":[0]},{"className":"java.lang.System.Logger","api":"log","signature":"default void log(System.Logger.Level level, Supplier<String> msgSupplier)","paramTypes":["System.Logger.Level","Supplier"],"notNullIndices":[0,1]},{"className":"java.lang.System.Logger","api":"log","signature":"default void log(System.Logger.Level level, Object obj)","paramTypes":["System.Logger.Level","Object"],"notNullIndices":[0,1]},{"className":"java.lang.System.Logger","api":"log","signature":"default void log(System.Logger.Level level, String msg, Throwable thrown)","paramTypes":["System.Logger.Level","String","Throwable"],"notNullIndices":[0]},{"className":"java.lang.System.Logger","api":"log","signature":"default void log(System.Logger.Level level, Supplier<String> msgSupplier, Throwable thrown)","paramTypes":["System.Logger.Level","Supplier","Throwable"],"notNullIndices":[0,1]},{"className":"java.lang.System.Logger","api":"log","signature":"default void log(System.Logger.Level level, String format, Object... params)","paramTypes":["System.Logger.Level","String","Object..."],"notNullIndices":[0]},{"className":"java.lang.System.Logger","api":"log","signature":"void log(System.Logger.Level level, ResourceBundle bundle, String msg, Throwable thrown)","paramTypes":["System.Logger.Level","ResourceBundle","String","Throwable"],"notNullIndices":[0]},{"className":"java.lang.System.Logger","api":"log","signature":"void log(System.Logger.Level level, ResourceBundle bundle, String format, Object... params)","paramTypes":["System.Logger.Level","ResourceBundle","String","Object..."],"notNullIndices":[0]},{"className":"java.lang.System.LoggerFinder","api":"getLogger","signature":"public abstract System.Logger getLogger(String name, Module module)","paramTypes":["String","Module"],"notNullIndices":[0,1]},{"className":"java.lang.System.LoggerFinder","api":"getLocalizedLogger","signature":"public System.Logger getLocalizedLogger(String name, ResourceBundle bundle, Module module)","paramTypes":["String","ResourceBundle","Module"],"notNullIndices":[0,2]},{"className":"java.lang.System","api":"arraycopy","signature":"public static void arraycopy(Object src, int srcPos, Object dest, int destPos, int length)","paramTypes":["Object","int","Object","int","int"],"notNullIndices":[0,2]},{"className":"java.lang.System","api":"getProperty","signature":"public static String getProperty(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.System","api":"getProperty","signature":"public static String getProperty(String key, String def)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.lang.System","api":"setProperty","signature":"public static String setProperty(String key, String value)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"java.lang.System","api":"clearProperty","signature":"public static String clearProperty(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.System","api":"getenv","signature":"public static String getenv(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.System","api":"getLogger","signature":"public static System.Logger getLogger(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.System","api":"getLogger","signature":"public static System.Logger getLogger(String name, ResourceBundle bundle)","paramTypes":["String","ResourceBundle"],"notNullIndices":[0,1]},{"className":"java.lang.System","api":"load","signature":"public static void load(String filename)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.System","api":"loadLibrary","signature":"public static void loadLibrary(String libname)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.System","api":"mapLibraryName","signature":"public static String mapLibraryName(String libname)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Thread.State","api":"valueOf","signature":"public static Thread.State valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.Thread","api":"holdsLock","signature":"public static boolean holdsLock(Object obj)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.lang.ThreadLocal<T>","api":"withInitial","signature":"public static <S> ThreadLocal<S> withInitial(Supplier<? extends S> supplier)","paramTypes":["Supplier"],"notNullIndices":[0]},{"className":"java.lang.Throwable","api":"setStackTrace","signature":"public void setStackTrace(StackTraceElement[] stackTrace)","paramTypes":["StackTraceElement[]"],"notNullIndices":[0]},{"className":"java.lang.Throwable","api":"addSuppressed","signature":"public final void addSuppressed(Throwable exception)","paramTypes":["Throwable"],"notNullIndices":[0]},{"className":"java.lang.annotation.ElementType","api":"valueOf","signature":"public static ElementType valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.annotation.RetentionPolicy","api":"valueOf","signature":"public static RetentionPolicy valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.constant.ClassDesc","api":"of","signature":"static ClassDesc of(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.constant.ClassDesc","api":"ofDescriptor","signature":"static ClassDesc ofDescriptor(String descriptor)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.constant.ClassDesc","api":"nested","signature":"default ClassDesc nested(String nestedName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.constant.DirectMethodHandleDesc.Kind","api":"valueOf","signature":"public static DirectMethodHandleDesc.Kind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.constant.DynamicCallSiteDesc","api":"withArgs","signature":"public DynamicCallSiteDesc withArgs(ConstantDesc... bootstrapArgs)","paramTypes":["ConstantDesc..."],"notNullIndices":[0]},{"className":"java.lang.constant.DynamicConstantDesc<T>","api":"of","signature":"public static <T> DynamicConstantDesc<T> of(DirectMethodHandleDesc bootstrapMethod)","paramTypes":["DirectMethodHandleDesc"],"notNullIndices":[0]},{"className":"java.lang.constant.MethodTypeDesc","api":"ofDescriptor","signature":"static MethodTypeDesc ofDescriptor(String descriptor)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.constant.MethodTypeDesc","api":"changeReturnType","signature":"MethodTypeDesc changeReturnType(ClassDesc returnType)","paramTypes":["ClassDesc"],"notNullIndices":[0]},{"className":"java.lang.instrument.Instrumentation","api":"addTransformer","signature":"void addTransformer(ClassFileTransformer transformer)","paramTypes":["ClassFileTransformer"],"notNullIndices":[0]},{"className":"java.lang.instrument.Instrumentation","api":"removeTransformer","signature":"boolean removeTransformer(ClassFileTransformer transformer)","paramTypes":["ClassFileTransformer"],"notNullIndices":[0]},{"className":"java.lang.instrument.Instrumentation","api":"retransformClasses","signature":"void retransformClasses(Class<?>... classes) throws UnmodifiableClassException","paramTypes":["Class..."],"notNullIndices":[0]},{"className":"java.lang.instrument.Instrumentation","api":"redefineClasses","signature":"void redefineClasses(ClassDefinition... definitions) throws ClassNotFoundException, UnmodifiableClassException","paramTypes":["ClassDefinition..."],"notNullIndices":[0]},{"className":"java.lang.instrument.Instrumentation","api":"isModifiableClass","signature":"boolean isModifiableClass(Class<?> theClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.instrument.Instrumentation","api":"getObjectSize","signature":"long getObjectSize(Object objectToSize)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.lang.instrument.Instrumentation","api":"appendToBootstrapClassLoaderSearch","signature":"void appendToBootstrapClassLoaderSearch(JarFile jarfile)","paramTypes":["JarFile"],"notNullIndices":[0]},{"className":"java.lang.instrument.Instrumentation","api":"appendToSystemClassLoaderSearch","signature":"void appendToSystemClassLoaderSearch(JarFile jarfile)","paramTypes":["JarFile"],"notNullIndices":[0]},{"className":"java.lang.instrument.Instrumentation","api":"isModifiableModule","signature":"boolean isModifiableModule(Module module)","paramTypes":["Module"],"notNullIndices":[0]},{"className":"java.lang.invoke.CallSite","api":"setTarget","signature":"public abstract void setTarget(MethodHandle newTarget)","paramTypes":["MethodHandle"],"notNullIndices":[0]},{"className":"java.lang.invoke.ConstantCallSite","api":"ConstantCallSite","signature":"public ConstantCallSite(MethodHandle target)","paramTypes":["MethodHandle"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandle","api":"invokeWithArguments","signature":"public Object invokeWithArguments(List<?> arguments) throws Throwable","paramTypes":["List"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandle","api":"asType","signature":"public MethodHandle asType(MethodType newType)","paramTypes":["MethodType"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandle","api":"asSpreader","signature":"public MethodHandle asSpreader(Class<?> arrayType, int arrayLength)","paramTypes":["Class","int"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandle","api":"asSpreader","signature":"public MethodHandle asSpreader(int spreadArgPos, Class<?> arrayType, int arrayLength)","paramTypes":["int","Class","int"],"notNullIndices":[1]},{"className":"java.lang.invoke.MethodHandle","api":"asCollector","signature":"public MethodHandle asCollector(Class<?> arrayType, int arrayLength)","paramTypes":["Class","int"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandle","api":"asCollector","signature":"public MethodHandle asCollector(int collectArgPos, Class<?> arrayType, int arrayLength)","paramTypes":["int","Class","int"],"notNullIndices":[1]},{"className":"java.lang.invoke.MethodHandle","api":"asVarargsCollector","signature":"public MethodHandle asVarargsCollector(Class<?> arrayType)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles.Lookup","api":"in","signature":"public MethodHandles.Lookup in(Class<?> requestedLookupClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles.Lookup","api":"defineClass","signature":"public Class<?> defineClass(byte[] bytes) throws IllegalAccessException","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles.Lookup","api":"unreflect","signature":"public MethodHandle unreflect(Method m) throws IllegalAccessException","paramTypes":["Method"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles.Lookup","api":"unreflectConstructor","signature":"public MethodHandle unreflectConstructor(Constructor<?> c) throws IllegalAccessException","paramTypes":["Constructor"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles.Lookup","api":"unreflectGetter","signature":"public MethodHandle unreflectGetter(Field f) throws IllegalAccessException","paramTypes":["Field"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles.Lookup","api":"unreflectSetter","signature":"public MethodHandle unreflectSetter(Field f) throws IllegalAccessException","paramTypes":["Field"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles.Lookup","api":"unreflectVarHandle","signature":"public VarHandle unreflectVarHandle(Field f) throws IllegalAccessException","paramTypes":["Field"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles.Lookup","api":"revealDirect","signature":"public MethodHandleInfo revealDirect(MethodHandle target)","paramTypes":["MethodHandle"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles","api":"privateLookupIn","signature":"public static MethodHandles.Lookup privateLookupIn(Class<?> targetClass, MethodHandles.Lookup lookup) throws IllegalAccessException","paramTypes":["Class","MethodHandles.Lookup"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles","api":"arrayConstructor","signature":"public static MethodHandle arrayConstructor(Class<?> arrayClass) throws IllegalArgumentException","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles","api":"arrayLength","signature":"public static MethodHandle arrayLength(Class<?> arrayClass) throws IllegalArgumentException","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles","api":"arrayElementGetter","signature":"public static MethodHandle arrayElementGetter(Class<?> arrayClass) throws IllegalArgumentException","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles","api":"arrayElementSetter","signature":"public static MethodHandle arrayElementSetter(Class<?> arrayClass) throws IllegalArgumentException","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles","api":"arrayElementVarHandle","signature":"public static VarHandle arrayElementVarHandle(Class<?> arrayClass) throws IllegalArgumentException","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles","api":"byteArrayViewVarHandle","signature":"public static VarHandle byteArrayViewVarHandle(Class<?> viewArrayClass, ByteOrder byteOrder) throws IllegalArgumentException","paramTypes":["Class","ByteOrder"],"notNullIndices":[0,1]},{"className":"java.lang.invoke.MethodHandles","api":"byteBufferViewVarHandle","signature":"public static VarHandle byteBufferViewVarHandle(Class<?> viewArrayClass, ByteOrder byteOrder) throws IllegalArgumentException","paramTypes":["Class","ByteOrder"],"notNullIndices":[0,1]},{"className":"java.lang.invoke.MethodHandles","api":"spreadInvoker","signature":"public static MethodHandle spreadInvoker(MethodType type, int leadingArgCount)","paramTypes":["MethodType","int"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles","api":"constant","signature":"public static MethodHandle constant(Class<?> type, Object value)","paramTypes":["Class","Object"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles","api":"identity","signature":"public static MethodHandle identity(Class<?> type)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles","api":"zero","signature":"public static MethodHandle zero(Class<?> type)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles","api":"empty","signature":"public static MethodHandle empty(MethodType type)","paramTypes":["MethodType"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodHandles","api":"insertArguments","signature":"public static MethodHandle insertArguments(MethodHandle target, int pos, Object... values)","paramTypes":["MethodHandle","int","Object..."],"notNullIndices":[0,2]},{"className":"java.lang.invoke.MethodHandles","api":"dropArguments","signature":"public static MethodHandle dropArguments(MethodHandle target, int pos, List<Class<?>> valueTypes)","paramTypes":["MethodHandle","int","List>"],"notNullIndices":[0,2]},{"className":"java.lang.invoke.MethodHandles","api":"dropArguments","signature":"public static MethodHandle dropArguments(MethodHandle target, int pos, Class<?>... valueTypes)","paramTypes":["MethodHandle","int","Class..."],"notNullIndices":[0,2]},{"className":"java.lang.invoke.MethodHandles","api":"filterArguments","signature":"public static MethodHandle filterArguments(MethodHandle target, int pos, MethodHandle... filters)","paramTypes":["MethodHandle","int","MethodHandle..."],"notNullIndices":[0,2]},{"className":"java.lang.invoke.MethodHandles","api":"whileLoop","signature":"public static MethodHandle whileLoop(MethodHandle init, MethodHandle pred, MethodHandle body)","paramTypes":["MethodHandle","MethodHandle","MethodHandle"],"notNullIndices":[1,2]},{"className":"java.lang.invoke.MethodHandles","api":"doWhileLoop","signature":"public static MethodHandle doWhileLoop(MethodHandle init, MethodHandle body, MethodHandle pred)","paramTypes":["MethodHandle","MethodHandle","MethodHandle"],"notNullIndices":[1,2]},{"className":"java.lang.invoke.MethodHandles","api":"countedLoop","signature":"public static MethodHandle countedLoop(MethodHandle iterations, MethodHandle init, MethodHandle body)","paramTypes":["MethodHandle","MethodHandle","MethodHandle"],"notNullIndices":[0,2]},{"className":"java.lang.invoke.MethodHandles","api":"countedLoop","signature":"public static MethodHandle countedLoop(MethodHandle start, MethodHandle end, MethodHandle init, MethodHandle body)","paramTypes":["MethodHandle","MethodHandle","MethodHandle","MethodHandle"],"notNullIndices":[0,1,3]},{"className":"java.lang.invoke.MethodHandles","api":"iteratedLoop","signature":"public static MethodHandle iteratedLoop(MethodHandle iterator, MethodHandle init, MethodHandle body)","paramTypes":["MethodHandle","MethodHandle","MethodHandle"],"notNullIndices":[2]},{"className":"java.lang.invoke.MethodType","api":"methodType","signature":"public static MethodType methodType(Class<?> rtype, Class<?>[] ptypes)","paramTypes":["Class","Class[]"],"notNullIndices":[0,1]},{"className":"java.lang.invoke.MethodType","api":"methodType","signature":"public static MethodType methodType(Class<?> rtype, List<Class<?>> ptypes)","paramTypes":["Class","List>"],"notNullIndices":[0,1]},{"className":"java.lang.invoke.MethodType","api":"methodType","signature":"public static MethodType methodType(Class<?> rtype, Class<?> ptype0, Class<?>... ptypes)","paramTypes":["Class","Class","Class..."],"notNullIndices":[0,1,2]},{"className":"java.lang.invoke.MethodType","api":"methodType","signature":"public static MethodType methodType(Class<?> rtype)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodType","api":"methodType","signature":"public static MethodType methodType(Class<?> rtype, Class<?> ptype0)","paramTypes":["Class","Class"],"notNullIndices":[0,1]},{"className":"java.lang.invoke.MethodType","api":"methodType","signature":"public static MethodType methodType(Class<?> rtype, MethodType ptypes)","paramTypes":["Class","MethodType"],"notNullIndices":[0,1]},{"className":"java.lang.invoke.MethodType","api":"changeParameterType","signature":"public MethodType changeParameterType(int num, Class<?> nptype)","paramTypes":["int","Class"],"notNullIndices":[1]},{"className":"java.lang.invoke.MethodType","api":"insertParameterTypes","signature":"public MethodType insertParameterTypes(int num, Class<?>... ptypesToInsert)","paramTypes":["int","Class..."],"notNullIndices":[1]},{"className":"java.lang.invoke.MethodType","api":"appendParameterTypes","signature":"public MethodType appendParameterTypes(Class<?>... ptypesToInsert)","paramTypes":["Class..."],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodType","api":"insertParameterTypes","signature":"public MethodType insertParameterTypes(int num, List<Class<?>> ptypesToInsert)","paramTypes":["int","List>"],"notNullIndices":[1]},{"className":"java.lang.invoke.MethodType","api":"appendParameterTypes","signature":"public MethodType appendParameterTypes(List<Class<?>> ptypesToInsert)","paramTypes":["List>"],"notNullIndices":[0]},{"className":"java.lang.invoke.MethodType","api":"changeReturnType","signature":"public MethodType changeReturnType(Class<?> nrtype)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.invoke.MutableCallSite","api":"MutableCallSite","signature":"public MutableCallSite(MethodType type)","paramTypes":["MethodType"],"notNullIndices":[0]},{"className":"java.lang.invoke.MutableCallSite","api":"MutableCallSite","signature":"public MutableCallSite(MethodHandle target)","paramTypes":["MethodHandle"],"notNullIndices":[0]},{"className":"java.lang.invoke.MutableCallSite","api":"setTarget","signature":"public void setTarget(MethodHandle newTarget)","paramTypes":["MethodHandle"],"notNullIndices":[0]},{"className":"java.lang.invoke.MutableCallSite","api":"syncAll","signature":"public static void syncAll(MutableCallSite[] sites)","paramTypes":["MutableCallSite[]"],"notNullIndices":[0]},{"className":"java.lang.invoke.StringConcatFactory","api":"makeConcatWithConstants","signature":"public static CallSite makeConcatWithConstants(MethodHandles.Lookup lookup, String name, MethodType concatType, String recipe, Object... constants) throws StringConcatException","paramTypes":["MethodHandles.Lookup","String","MethodType","String","Object..."],"notNullIndices":[3]},{"className":"java.lang.invoke.SwitchPoint","api":"invalidateAll","signature":"public static void invalidateAll(SwitchPoint[] switchPoints)","paramTypes":["SwitchPoint[]"],"notNullIndices":[0]},{"className":"java.lang.invoke.VarHandle.AccessMode","api":"valueOf","signature":"public static VarHandle.AccessMode valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.invoke.VolatileCallSite","api":"VolatileCallSite","signature":"public VolatileCallSite(MethodType type)","paramTypes":["MethodType"],"notNullIndices":[0]},{"className":"java.lang.invoke.VolatileCallSite","api":"VolatileCallSite","signature":"public VolatileCallSite(MethodHandle target)","paramTypes":["MethodHandle"],"notNullIndices":[0]},{"className":"java.lang.invoke.VolatileCallSite","api":"setTarget","signature":"public void setTarget(MethodHandle newTarget)","paramTypes":["MethodHandle"],"notNullIndices":[0]},{"className":"java.lang.management.ManagementPermission","api":"ManagementPermission","signature":"public ManagementPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.management.ManagementPermission","api":"ManagementPermission","signature":"public ManagementPermission(String name, String actions) throws IllegalArgumentException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.lang.management.MemoryType","api":"valueOf","signature":"public static MemoryType valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.management.MonitorInfo","api":"MonitorInfo","signature":"public MonitorInfo(String className, int identityHashCode, int stackDepth, StackTraceElement stackFrame)","paramTypes":["String","int","int","StackTraceElement"],"notNullIndices":[2,3]},{"className":"java.lang.module.ModuleDescriptor.Builder","api":"requires","signature":"public ModuleDescriptor.Builder requires(String mn)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor.Builder","api":"exports","signature":"public ModuleDescriptor.Builder exports(String pn)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor.Builder","api":"opens","signature":"public ModuleDescriptor.Builder opens(String pn)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor.Builder","api":"uses","signature":"public ModuleDescriptor.Builder uses(String service)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor.Builder","api":"provides","signature":"public ModuleDescriptor.Builder provides(String service, List<String> providers)","paramTypes":["String","List"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor.Builder","api":"packages","signature":"public ModuleDescriptor.Builder packages(Set<String> pns)","paramTypes":["Set"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor.Builder","api":"version","signature":"public ModuleDescriptor.Builder version(String vs)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor.Builder","api":"mainClass","signature":"public ModuleDescriptor.Builder mainClass(String mc)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor.Exports.Modifier","api":"valueOf","signature":"public static ModuleDescriptor.Exports.Modifier valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor.Modifier","api":"valueOf","signature":"public static ModuleDescriptor.Modifier valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor.Opens.Modifier","api":"valueOf","signature":"public static ModuleDescriptor.Opens.Modifier valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor.Requires.Modifier","api":"valueOf","signature":"public static ModuleDescriptor.Requires.Modifier valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor.Version","api":"parse","signature":"public static ModuleDescriptor.Version parse(String v)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor","api":"newModule","signature":"public static ModuleDescriptor.Builder newModule(String name, Set<ModuleDescriptor.Modifier> ms)","paramTypes":["String","Set"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor","api":"newModule","signature":"public static ModuleDescriptor.Builder newModule(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor","api":"newOpenModule","signature":"public static ModuleDescriptor.Builder newOpenModule(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.module.ModuleDescriptor","api":"newAutomaticModule","signature":"public static ModuleDescriptor.Builder newAutomaticModule(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.reflect.AccessibleObject","api":"getAnnotation","signature":"public <T extends Annotation> T getAnnotation(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.AccessibleObject","api":"isAnnotationPresent","signature":"public boolean isAnnotationPresent(Class<? extends Annotation> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.AccessibleObject","api":"getAnnotationsByType","signature":"public <T extends Annotation> T[] getAnnotationsByType(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.AccessibleObject","api":"getDeclaredAnnotation","signature":"public <T extends Annotation> T getDeclaredAnnotation(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.AccessibleObject","api":"getDeclaredAnnotationsByType","signature":"public <T extends Annotation> T[] getDeclaredAnnotationsByType(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.AnnotatedElement","api":"isAnnotationPresent","signature":"default boolean isAnnotationPresent(Class<? extends Annotation> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.AnnotatedElement","api":"getAnnotation","signature":"<T extends Annotation> T getAnnotation(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.AnnotatedElement","api":"getAnnotationsByType","signature":"default <T extends Annotation> T[] getAnnotationsByType(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.AnnotatedElement","api":"getDeclaredAnnotation","signature":"default <T extends Annotation> T getDeclaredAnnotation(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.AnnotatedElement","api":"getDeclaredAnnotationsByType","signature":"default <T extends Annotation> T[] getDeclaredAnnotationsByType(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.Array","api":"newInstance","signature":"public static Object newInstance(Class<?> componentType, int length) throws NegativeArraySizeException","paramTypes":["Class","int"],"notNullIndices":[0]},{"className":"java.lang.reflect.Array","api":"newInstance","signature":"public static Object newInstance(Class<?> componentType, int... dimensions) throws IllegalArgumentException, NegativeArraySizeException","paramTypes":["Class","int..."],"notNullIndices":[0]},{"className":"java.lang.reflect.Constructor<T>","api":"getAnnotation","signature":"public <T extends Annotation> T getAnnotation(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.Executable","api":"getAnnotation","signature":"public <T extends Annotation> T getAnnotation(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.Executable","api":"getAnnotationsByType","signature":"public <T extends Annotation> T[] getAnnotationsByType(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.Field","api":"getAnnotation","signature":"public <T extends Annotation> T getAnnotation(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.Field","api":"getAnnotationsByType","signature":"public <T extends Annotation> T[] getAnnotationsByType(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.Method","api":"getAnnotation","signature":"public <T extends Annotation> T getAnnotation(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.Parameter","api":"getAnnotation","signature":"public <T extends Annotation> T getAnnotation(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.Parameter","api":"getAnnotationsByType","signature":"public <T extends Annotation> T[] getAnnotationsByType(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.Parameter","api":"getDeclaredAnnotation","signature":"public <T extends Annotation> T getDeclaredAnnotation(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.Parameter","api":"getDeclaredAnnotationsByType","signature":"public <T extends Annotation> T[] getDeclaredAnnotationsByType(Class<T> annotationClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.Proxy","api":"Proxy","signature":"protected Proxy(InvocationHandler h)","paramTypes":["InvocationHandler"],"notNullIndices":[0]},{"className":"java.lang.reflect.Proxy","api":"newProxyInstance","signature":"public static Object newProxyInstance(ClassLoader loader, Class<?>[] interfaces, InvocationHandler h)","paramTypes":["ClassLoader","Class[]","InvocationHandler"],"notNullIndices":[1,2]},{"className":"java.lang.reflect.Proxy","api":"isProxyClass","signature":"public static boolean isProxyClass(Class<?> cl)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.lang.reflect.ReflectPermission","api":"ReflectPermission","signature":"public ReflectPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.lang.reflect.ReflectPermission","api":"ReflectPermission","signature":"public ReflectPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.math.MathContext","api":"MathContext","signature":"public MathContext(String val)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.math.RoundingMode","api":"valueOf","signature":"public static RoundingMode valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.net.Authenticator.RequestorType","api":"valueOf","signature":"public static Authenticator.RequestorType valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.net.CookieStore","api":"add","signature":"void add(URI uri, HttpCookie cookie)","paramTypes":["URI","HttpCookie"],"notNullIndices":[1]},{"className":"java.net.CookieStore","api":"get","signature":"List<HttpCookie> get(URI uri)","paramTypes":["URI"],"notNullIndices":[0]},{"className":"java.net.CookieStore","api":"remove","signature":"boolean remove(URI uri, HttpCookie cookie)","paramTypes":["URI","HttpCookie"],"notNullIndices":[1]},{"className":"java.net.DatagramPacket","api":"setSocketAddress","signature":"public void setSocketAddress(SocketAddress address)","paramTypes":["SocketAddress"],"notNullIndices":[0]},{"className":"java.net.DatagramPacket","api":"setData","signature":"public void setData(byte[] buf)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.net.DatagramSocket","api":"connect","signature":"public void connect(InetAddress address, int port)","paramTypes":["InetAddress","int"],"notNullIndices":[0]},{"className":"java.net.DatagramSocket","api":"connect","signature":"public void connect(SocketAddress addr) throws SocketException","paramTypes":["SocketAddress"],"notNullIndices":[0]},{"className":"java.net.DatagramSocket","api":"setOption","signature":"public <T> DatagramSocket setOption(SocketOption<T> name, T value) throws IOException","paramTypes":["SocketOption","T"],"notNullIndices":[0]},{"className":"java.net.DatagramSocket","api":"getOption","signature":"public <T> T getOption(SocketOption<T> name) throws IOException","paramTypes":["SocketOption"],"notNullIndices":[0]},{"className":"java.net.DatagramSocketImpl","api":"setOption","signature":"protected <T> void setOption(SocketOption<T> name, T value) throws IOException","paramTypes":["SocketOption","T"],"notNullIndices":[0]},{"className":"java.net.DatagramSocketImpl","api":"getOption","signature":"protected <T> T getOption(SocketOption<T> name) throws IOException","paramTypes":["SocketOption"],"notNullIndices":[0]},{"className":"java.net.HttpCookie","api":"HttpCookie","signature":"public HttpCookie(String name, String value)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.net.HttpCookie","api":"parse","signature":"public static List<HttpCookie> parse(String header)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.net.HttpURLConnection","api":"setAuthenticator","signature":"public void setAuthenticator(Authenticator auth)","paramTypes":["Authenticator"],"notNullIndices":[0]},{"className":"java.net.InetSocketAddress","api":"InetSocketAddress","signature":"public InetSocketAddress(String hostname, int port)","paramTypes":["String","int"],"notNullIndices":[0,1]},{"className":"java.net.InetSocketAddress","api":"createUnresolved","signature":"public static InetSocketAddress createUnresolved(String host, int port)","paramTypes":["String","int"],"notNullIndices":[1]},{"className":"java.net.MulticastSocket","api":"joinGroup","signature":"public void joinGroup(SocketAddress mcastaddr, NetworkInterface netIf) throws IOException","paramTypes":["SocketAddress","NetworkInterface"],"notNullIndices":[0]},{"className":"java.net.MulticastSocket","api":"leaveGroup","signature":"public void leaveGroup(SocketAddress mcastaddr, NetworkInterface netIf) throws IOException","paramTypes":["SocketAddress","NetworkInterface"],"notNullIndices":[0]},{"className":"java.net.NetPermission","api":"NetPermission","signature":"public NetPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.net.NetPermission","api":"NetPermission","signature":"public NetPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.net.NetworkInterface","api":"getByName","signature":"public static NetworkInterface getByName(String name) throws SocketException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.net.NetworkInterface","api":"getByInetAddress","signature":"public static NetworkInterface getByInetAddress(InetAddress addr) throws SocketException","paramTypes":["InetAddress"],"notNullIndices":[0]},{"className":"java.net.Proxy.Type","api":"valueOf","signature":"public static Proxy.Type valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.net.ProxySelector","api":"select","signature":"public abstract List<Proxy> select(URI uri)","paramTypes":["URI"],"notNullIndices":[0]},{"className":"java.net.ServerSocket","api":"ServerSocket","signature":"protected ServerSocket(SocketImpl impl)","paramTypes":["SocketImpl"],"notNullIndices":[0]},{"className":"java.net.ServerSocket","api":"setOption","signature":"public <T> ServerSocket setOption(SocketOption<T> name, T value) throws IOException","paramTypes":["SocketOption","T"],"notNullIndices":[0]},{"className":"java.net.ServerSocket","api":"getOption","signature":"public <T> T getOption(SocketOption<T> name) throws IOException","paramTypes":["SocketOption"],"notNullIndices":[0]},{"className":"java.net.Socket","api":"Socket","signature":"public Socket(Proxy proxy)","paramTypes":["Proxy"],"notNullIndices":[0]},{"className":"java.net.Socket","api":"Socket","signature":"public Socket(InetAddress address, int port) throws IOException","paramTypes":["InetAddress","int"],"notNullIndices":[0]},{"className":"java.net.Socket","api":"Socket","signature":"public Socket(InetAddress address, int port, InetAddress localAddr, int localPort) throws IOException","paramTypes":["InetAddress","int","InetAddress","int"],"notNullIndices":[0]},{"className":"java.net.Socket","api":"connect","signature":"public void connect(SocketAddress endpoint) throws IOException","paramTypes":["SocketAddress"],"notNullIndices":[0]},{"className":"java.net.Socket","api":"connect","signature":"public void connect(SocketAddress endpoint, int timeout) throws IOException","paramTypes":["SocketAddress","int"],"notNullIndices":[0]},{"className":"java.net.Socket","api":"setOption","signature":"public <T> Socket setOption(SocketOption<T> name, T value) throws IOException","paramTypes":["SocketOption","T"],"notNullIndices":[0]},{"className":"java.net.Socket","api":"getOption","signature":"public <T> T getOption(SocketOption<T> name) throws IOException","paramTypes":["SocketOption"],"notNullIndices":[0]},{"className":"java.net.StandardProtocolFamily","api":"valueOf","signature":"public static StandardProtocolFamily valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.net.URI","api":"URI","signature":"public URI(String str) throws URISyntaxException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.net.URI","api":"create","signature":"public static URI create(String str)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.net.URI","api":"resolve","signature":"public URI resolve(URI uri)","paramTypes":["URI"],"notNullIndices":[0]},{"className":"java.net.URI","api":"resolve","signature":"public URI resolve(String str)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.net.URI","api":"relativize","signature":"public URI relativize(URI uri)","paramTypes":["URI"],"notNullIndices":[0]},{"className":"java.net.URISyntaxException","api":"URISyntaxException","signature":"public URISyntaxException(String input, String reason, int index)","paramTypes":["String","String","int"],"notNullIndices":[0,1]},{"className":"java.net.URISyntaxException","api":"URISyntaxException","signature":"public URISyntaxException(String input, String reason)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"java.net.URL","api":"URL","signature":"public URL(String spec) throws MalformedURLException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.net.URL","api":"URL","signature":"public URL(URL context, String spec) throws MalformedURLException","paramTypes":["URL","String"],"notNullIndices":[1]},{"className":"java.net.URL","api":"URL","signature":"public URL(URL context, String spec, URLStreamHandler handler) throws MalformedURLException","paramTypes":["URL","String","URLStreamHandler"],"notNullIndices":[1]},{"className":"java.net.URL","api":"openConnection","signature":"public URLConnection openConnection(Proxy proxy) throws IOException","paramTypes":["Proxy"],"notNullIndices":[0]},{"className":"java.net.URLClassLoader","api":"URLClassLoader","signature":"public URLClassLoader(URL[] urls, ClassLoader parent)","paramTypes":["URL[]","ClassLoader"],"notNullIndices":[0]},{"className":"java.net.URLClassLoader","api":"URLClassLoader","signature":"public URLClassLoader(URL[] urls)","paramTypes":["URL[]"],"notNullIndices":[0]},{"className":"java.net.URLClassLoader","api":"URLClassLoader","signature":"public URLClassLoader(URL[] urls, ClassLoader parent, URLStreamHandlerFactory factory)","paramTypes":["URL[]","ClassLoader","URLStreamHandlerFactory"],"notNullIndices":[0]},{"className":"java.net.URLClassLoader","api":"URLClassLoader","signature":"public URLClassLoader(String name, URL[] urls, ClassLoader parent)","paramTypes":["String","URL[]","ClassLoader"],"notNullIndices":[1]},{"className":"java.net.URLClassLoader","api":"URLClassLoader","signature":"public URLClassLoader(String name, URL[] urls, ClassLoader parent, URLStreamHandlerFactory factory)","paramTypes":["String","URL[]","ClassLoader","URLStreamHandlerFactory"],"notNullIndices":[1]},{"className":"java.net.URLClassLoader","api":"getResourceAsStream","signature":"public InputStream getResourceAsStream(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.net.URLClassLoader","api":"findClass","signature":"protected Class<?> findClass(String name) throws ClassNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.net.URLClassLoader","api":"getPermissions","signature":"protected PermissionCollection getPermissions(CodeSource codesource)","paramTypes":["CodeSource"],"notNullIndices":[0]},{"className":"java.net.URLClassLoader","api":"newInstance","signature":"public static URLClassLoader newInstance(URL[] urls, ClassLoader parent)","paramTypes":["URL[]","ClassLoader"],"notNullIndices":[0]},{"className":"java.net.URLClassLoader","api":"newInstance","signature":"public static URLClassLoader newInstance(URL[] urls)","paramTypes":["URL[]"],"notNullIndices":[0]},{"className":"java.net.URLConnection","api":"setRequestProperty","signature":"public void setRequestProperty(String key, String value)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.net.URLConnection","api":"addRequestProperty","signature":"public void addRequestProperty(String key, String value)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.net.URLDecoder","api":"decode","signature":"public static String decode(String s, Charset charset)","paramTypes":["String","Charset"],"notNullIndices":[0,1]},{"className":"java.net.URLEncoder","api":"encode","signature":"public static String encode(String s, Charset charset)","paramTypes":["String","Charset"],"notNullIndices":[0,1]},{"className":"java.net.URLStreamHandler","api":"openConnection","signature":"protected URLConnection openConnection(URL u, Proxy p) throws IOException","paramTypes":["URL","Proxy"],"notNullIndices":[0,1]},{"className":"java.net.http.HttpClient.Redirect","api":"valueOf","signature":"public static HttpClient.Redirect valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.net.http.HttpClient.Version","api":"valueOf","signature":"public static HttpClient.Version valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.net.http.HttpHeaders","api":"of","signature":"public static HttpHeaders of(Map<String,List<String>> headerMap, BiPredicate<String,String> filter)","paramTypes":["Map>","BiPredicate"],"notNullIndices":[0,1]},{"className":"java.nio.CharBuffer","api":"read","signature":"public int read(CharBuffer target) throws IOException","paramTypes":["CharBuffer"],"notNullIndices":[0]},{"className":"java.nio.charset.Charset","api":"isSupported","signature":"public static boolean isSupported(String charsetName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.nio.charset.Charset","api":"forName","signature":"public static Charset forName(String charsetName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.nio.file.AccessMode","api":"valueOf","signature":"public static AccessMode valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.nio.file.DirectoryIteratorException","api":"DirectoryIteratorException","signature":"public DirectoryIteratorException(IOException cause)","paramTypes":["IOException"],"notNullIndices":[0]},{"className":"java.nio.file.FileVisitOption","api":"valueOf","signature":"public static FileVisitOption valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.nio.file.FileVisitResult","api":"valueOf","signature":"public static FileVisitResult valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.nio.file.InvalidPathException","api":"InvalidPathException","signature":"public InvalidPathException(String input, String reason, int index)","paramTypes":["String","String","int"],"notNullIndices":[0,1]},{"className":"java.nio.file.InvalidPathException","api":"InvalidPathException","signature":"public InvalidPathException(String input, String reason)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"java.nio.file.LinkOption","api":"valueOf","signature":"public static LinkOption valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.nio.file.StandardCopyOption","api":"valueOf","signature":"public static StandardCopyOption valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.nio.file.StandardOpenOption","api":"valueOf","signature":"public static StandardOpenOption valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.nio.file.attribute.AclEntryFlag","api":"valueOf","signature":"public static AclEntryFlag valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.nio.file.attribute.AclEntryPermission","api":"valueOf","signature":"public static AclEntryPermission valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.nio.file.attribute.AclEntryType","api":"valueOf","signature":"public static AclEntryType valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.nio.file.attribute.PosixFilePermission","api":"valueOf","signature":"public static PosixFilePermission valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.rmi.activation.ActivationDesc","api":"ActivationDesc","signature":"public ActivationDesc(ActivationGroupID groupID, String className, String location, MarshalledObject<?> data)","paramTypes":["ActivationGroupID","String","String","MarshalledObject"],"notNullIndices":[0]},{"className":"java.rmi.activation.ActivationDesc","api":"ActivationDesc","signature":"public ActivationDesc(ActivationGroupID groupID, String className, String location, MarshalledObject<?> data, boolean restart)","paramTypes":["ActivationGroupID","String","String","MarshalledObject","boolean"],"notNullIndices":[0]},{"className":"java.rmi.registry.Registry","api":"lookup","signature":"Remote lookup(String name) throws RemoteException, NotBoundException, AccessException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.rmi.registry.Registry","api":"bind","signature":"void bind(String name, Remote obj) throws RemoteException, AlreadyBoundException, AccessException","paramTypes":["String","Remote"],"notNullIndices":[0,1]},{"className":"java.rmi.registry.Registry","api":"unbind","signature":"void unbind(String name) throws RemoteException, NotBoundException, AccessException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.rmi.registry.Registry","api":"rebind","signature":"void rebind(String name, Remote obj) throws RemoteException, AccessException","paramTypes":["String","Remote"],"notNullIndices":[0,1]},{"className":"java.rmi.server.RMIClassLoader","api":"getClassAnnotation","signature":"public static String getClassAnnotation(Class<?> cl)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.rmi.server.RMIClassLoaderSpi","api":"getClassAnnotation","signature":"public abstract String getClassAnnotation(Class<?> cl)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.rmi.server.RemoteObjectInvocationHandler","api":"RemoteObjectInvocationHandler","signature":"public RemoteObjectInvocationHandler(RemoteRef ref)","paramTypes":["RemoteRef"],"notNullIndices":[0]},{"className":"java.security.AccessControlContext","api":"AccessControlContext","signature":"public AccessControlContext(ProtectionDomain[] context)","paramTypes":["ProtectionDomain[]"],"notNullIndices":[0]},{"className":"java.security.AccessControlContext","api":"checkPermission","signature":"public void checkPermission(Permission perm) throws AccessControlException","paramTypes":["Permission"],"notNullIndices":[0]},{"className":"java.security.AccessController","api":"doPrivileged","signature":"public static <T> T doPrivileged(PrivilegedAction<T> action)","paramTypes":["PrivilegedAction"],"notNullIndices":[0]},{"className":"java.security.AccessController","api":"doPrivilegedWithCombiner","signature":"public static <T> T doPrivilegedWithCombiner(PrivilegedAction<T> action)","paramTypes":["PrivilegedAction"],"notNullIndices":[0]},{"className":"java.security.AccessController","api":"doPrivileged","signature":"public static <T> T doPrivileged(PrivilegedAction<T> action, AccessControlContext context)","paramTypes":["PrivilegedAction","AccessControlContext"],"notNullIndices":[0]},{"className":"java.security.AccessController","api":"doPrivileged","signature":"public static <T> T doPrivileged(PrivilegedAction<T> action, AccessControlContext context, Permission... perms)","paramTypes":["PrivilegedAction","AccessControlContext","Permission..."],"notNullIndices":[0,2]},{"className":"java.security.AccessController","api":"doPrivilegedWithCombiner","signature":"public static <T> T doPrivilegedWithCombiner(PrivilegedAction<T> action, AccessControlContext context, Permission... perms)","paramTypes":["PrivilegedAction","AccessControlContext","Permission..."],"notNullIndices":[0,2]},{"className":"java.security.AccessController","api":"doPrivileged","signature":"public static <T> T doPrivileged(PrivilegedExceptionAction<T> action) throws PrivilegedActionException","paramTypes":["PrivilegedExceptionAction"],"notNullIndices":[0]},{"className":"java.security.AccessController","api":"doPrivilegedWithCombiner","signature":"public static <T> T doPrivilegedWithCombiner(PrivilegedExceptionAction<T> action) throws PrivilegedActionException","paramTypes":["PrivilegedExceptionAction"],"notNullIndices":[0]},{"className":"java.security.AccessController","api":"doPrivileged","signature":"public static <T> T doPrivileged(PrivilegedExceptionAction<T> action, AccessControlContext context) throws PrivilegedActionException","paramTypes":["PrivilegedExceptionAction","AccessControlContext"],"notNullIndices":[0]},{"className":"java.security.AccessController","api":"doPrivileged","signature":"public static <T> T doPrivileged(PrivilegedExceptionAction<T> action, AccessControlContext context, Permission... perms) throws PrivilegedActionException","paramTypes":["PrivilegedExceptionAction","AccessControlContext","Permission..."],"notNullIndices":[0,2]},{"className":"java.security.AccessController","api":"doPrivilegedWithCombiner","signature":"public static <T> T doPrivilegedWithCombiner(PrivilegedExceptionAction<T> action, AccessControlContext context, Permission... perms) throws PrivilegedActionException","paramTypes":["PrivilegedExceptionAction","AccessControlContext","Permission..."],"notNullIndices":[0,2]},{"className":"java.security.AlgorithmConstraints","api":"permits","signature":"boolean permits(Set<CryptoPrimitive> primitives, String algorithm, AlgorithmParameters parameters)","paramTypes":["Set","String","AlgorithmParameters"],"notNullIndices":[0,1]},{"className":"java.security.AlgorithmConstraints","api":"permits","signature":"boolean permits(Set<CryptoPrimitive> primitives, Key key)","paramTypes":["Set","Key"],"notNullIndices":[0,1]},{"className":"java.security.AlgorithmConstraints","api":"permits","signature":"boolean permits(Set<CryptoPrimitive> primitives, String algorithm, Key key, AlgorithmParameters parameters)","paramTypes":["Set","String","Key","AlgorithmParameters"],"notNullIndices":[0,1,2]},{"className":"java.security.AlgorithmParameterGenerator","api":"getInstance","signature":"public static AlgorithmParameterGenerator getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.AlgorithmParameterGenerator","api":"getInstance","signature":"public static AlgorithmParameterGenerator getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"java.security.AlgorithmParameterGenerator","api":"getInstance","signature":"public static AlgorithmParameterGenerator getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.security.AlgorithmParameterGenerator","api":"getInstance","signature":"public static AlgorithmParameterGenerator getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"java.security.AlgorithmParameterGenerator","api":"getInstance","signature":"public static AlgorithmParameterGenerator getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"java.security.AlgorithmParameters","api":"getInstance","signature":"public static AlgorithmParameters getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.AlgorithmParameters","api":"getInstance","signature":"public static AlgorithmParameters getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"java.security.AlgorithmParameters","api":"getInstance","signature":"public static AlgorithmParameters getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.security.AlgorithmParameters","api":"getInstance","signature":"public static AlgorithmParameters getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"java.security.AlgorithmParameters","api":"getInstance","signature":"public static AlgorithmParameters getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"java.security.BasicPermission","api":"BasicPermission","signature":"public BasicPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.BasicPermission","api":"BasicPermission","signature":"public BasicPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.security.CodeSigner","api":"CodeSigner","signature":"public CodeSigner(CertPath signerCertPath, Timestamp timestamp)","paramTypes":["CertPath","Timestamp"],"notNullIndices":[0]},{"className":"java.security.CryptoPrimitive","api":"valueOf","signature":"public static CryptoPrimitive valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.DomainLoadStoreParameter","api":"DomainLoadStoreParameter","signature":"public DomainLoadStoreParameter(URI configuration, Map<String,KeyStore.ProtectionParameter> protectionParams)","paramTypes":["URI","Map"],"notNullIndices":[0,1]},{"className":"java.security.DrbgParameters.Capability","api":"valueOf","signature":"public static DrbgParameters.Capability valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.DrbgParameters","api":"instantiation","signature":"public static DrbgParameters.Instantiation instantiation(int strength, DrbgParameters.Capability capability, byte[] personalizationString)","paramTypes":["int","DrbgParameters.Capability","byte[]"],"notNullIndices":[1]},{"className":"java.security.KeyFactory","api":"getInstance","signature":"public static KeyFactory getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.KeyFactory","api":"getInstance","signature":"public static KeyFactory getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"java.security.KeyFactory","api":"getInstance","signature":"public static KeyFactory getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.security.KeyFactory","api":"getInstance","signature":"public static KeyFactory getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"java.security.KeyFactory","api":"getInstance","signature":"public static KeyFactory getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"java.security.KeyPairGenerator","api":"getInstance","signature":"public static KeyPairGenerator getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.KeyPairGenerator","api":"getInstance","signature":"public static KeyPairGenerator getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"java.security.KeyPairGenerator","api":"getInstance","signature":"public static KeyPairGenerator getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.security.KeyPairGenerator","api":"getInstance","signature":"public static KeyPairGenerator getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"java.security.KeyPairGenerator","api":"getInstance","signature":"public static KeyPairGenerator getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"java.security.KeyRep.Type","api":"valueOf","signature":"public static KeyRep.Type valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.KeyRep","api":"KeyRep","signature":"public KeyRep(KeyRep.Type type, String algorithm, String format, byte[] encoded)","paramTypes":["KeyRep.Type","String","String","byte[]"],"notNullIndices":[0,1,2,3]},{"className":"java.security.KeyStore.Builder","api":"getProtectionParameter","signature":"public abstract KeyStore.ProtectionParameter getProtectionParameter(String alias) throws KeyStoreException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.KeyStore.Builder","api":"newInstance","signature":"public static KeyStore.Builder newInstance(KeyStore keyStore, KeyStore.ProtectionParameter protectionParameter)","paramTypes":["KeyStore","KeyStore.ProtectionParameter"],"notNullIndices":[0]},{"className":"java.security.KeyStore.Builder","api":"newInstance","signature":"public static KeyStore.Builder newInstance(String type, Provider provider, File file, KeyStore.ProtectionParameter protection)","paramTypes":["String","Provider","File","KeyStore.ProtectionParameter"],"notNullIndices":[0,2,3]},{"className":"java.security.KeyStore.Builder","api":"newInstance","signature":"public static KeyStore.Builder newInstance(File file, KeyStore.ProtectionParameter protection)","paramTypes":["File","KeyStore.ProtectionParameter"],"notNullIndices":[0,1]},{"className":"java.security.KeyStore.Builder","api":"newInstance","signature":"public static KeyStore.Builder newInstance(String type, Provider provider, KeyStore.ProtectionParameter protection)","paramTypes":["String","Provider","KeyStore.ProtectionParameter"],"notNullIndices":[0,2]},{"className":"java.security.KeyStore.CallbackHandlerProtection","api":"CallbackHandlerProtection","signature":"public CallbackHandlerProtection(CallbackHandler handler)","paramTypes":["CallbackHandler"],"notNullIndices":[0]},{"className":"java.security.KeyStore.PasswordProtection","api":"PasswordProtection","signature":"public PasswordProtection(char[] password, String protectionAlgorithm, AlgorithmParameterSpec protectionParameters)","paramTypes":["char[]","String","AlgorithmParameterSpec"],"notNullIndices":[1]},{"className":"java.security.KeyStore.PrivateKeyEntry","api":"PrivateKeyEntry","signature":"public PrivateKeyEntry(PrivateKey privateKey, Certificate[] chain)","paramTypes":["PrivateKey","Certificate[]"],"notNullIndices":[0,1]},{"className":"java.security.KeyStore.PrivateKeyEntry","api":"PrivateKeyEntry","signature":"public PrivateKeyEntry(PrivateKey privateKey, Certificate[] chain, Set<KeyStore.Entry.Attribute> attributes)","paramTypes":["PrivateKey","Certificate[]","Set"],"notNullIndices":[0,1,2]},{"className":"java.security.KeyStore.SecretKeyEntry","api":"SecretKeyEntry","signature":"public SecretKeyEntry(SecretKey secretKey)","paramTypes":["SecretKey"],"notNullIndices":[0]},{"className":"java.security.KeyStore.SecretKeyEntry","api":"SecretKeyEntry","signature":"public SecretKeyEntry(SecretKey secretKey, Set<KeyStore.Entry.Attribute> attributes)","paramTypes":["SecretKey","Set"],"notNullIndices":[0,1]},{"className":"java.security.KeyStore.TrustedCertificateEntry","api":"TrustedCertificateEntry","signature":"public TrustedCertificateEntry(Certificate trustedCert)","paramTypes":["Certificate"],"notNullIndices":[0]},{"className":"java.security.KeyStore.TrustedCertificateEntry","api":"TrustedCertificateEntry","signature":"public TrustedCertificateEntry(Certificate trustedCert, Set<KeyStore.Entry.Attribute> attributes)","paramTypes":["Certificate","Set"],"notNullIndices":[0,1]},{"className":"java.security.KeyStore","api":"getInstance","signature":"public static KeyStore getInstance(String type) throws KeyStoreException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.KeyStore","api":"getInstance","signature":"public static KeyStore getInstance(String type, String provider) throws KeyStoreException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"java.security.KeyStore","api":"getInstance","signature":"public static KeyStore getInstance(String type, String provider) throws KeyStoreException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.security.KeyStore","api":"getInstance","signature":"public static KeyStore getInstance(String type, Provider provider) throws KeyStoreException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"java.security.KeyStore","api":"getInstance","signature":"public static KeyStore getInstance(String type, Provider provider) throws KeyStoreException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"java.security.KeyStore","api":"getEntry","signature":"public final KeyStore.Entry getEntry(String alias, KeyStore.ProtectionParameter protParam) throws NoSuchAlgorithmException, UnrecoverableEntryException, KeyStoreException","paramTypes":["String","KeyStore.ProtectionParameter"],"notNullIndices":[0]},{"className":"java.security.KeyStore","api":"setEntry","signature":"public final void setEntry(String alias, KeyStore.Entry entry, KeyStore.ProtectionParameter protParam) throws KeyStoreException","paramTypes":["String","KeyStore.Entry","KeyStore.ProtectionParameter"],"notNullIndices":[0,1]},{"className":"java.security.KeyStore","api":"entryInstanceOf","signature":"public final boolean entryInstanceOf(String alias, Class<? extends KeyStore.Entry> entryClass) throws KeyStoreException","paramTypes":["String","Class"],"notNullIndices":[0,1]},{"className":"java.security.KeyStore","api":"getInstance","signature":"public static final KeyStore getInstance(File file, char[] password) throws KeyStoreException, IOException, NoSuchAlgorithmException, CertificateException","paramTypes":["File","char[]"],"notNullIndices":[0]},{"className":"java.security.KeyStore","api":"getInstance","signature":"public static final KeyStore getInstance(File file, KeyStore.LoadStoreParameter param) throws KeyStoreException, IOException, NoSuchAlgorithmException, CertificateException","paramTypes":["File","KeyStore.LoadStoreParameter"],"notNullIndices":[0]},{"className":"java.security.KeyStoreSpi","api":"engineProbe","signature":"public boolean engineProbe(InputStream stream) throws IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"java.security.MessageDigest","api":"getInstance","signature":"public static MessageDigest getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.MessageDigest","api":"getInstance","signature":"public static MessageDigest getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"java.security.MessageDigest","api":"getInstance","signature":"public static MessageDigest getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.security.MessageDigest","api":"getInstance","signature":"public static MessageDigest getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"java.security.MessageDigest","api":"getInstance","signature":"public static MessageDigest getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"java.security.PKCS12Attribute","api":"PKCS12Attribute","signature":"public PKCS12Attribute(String name, String value)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"java.security.PKCS12Attribute","api":"PKCS12Attribute","signature":"public PKCS12Attribute(byte[] encoded)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.security.Policy","api":"getInstance","signature":"public static Policy getInstance(String type, Policy.Parameters params) throws NoSuchAlgorithmException","paramTypes":["String","Policy.Parameters"],"notNullIndices":[0]},{"className":"java.security.Policy","api":"getInstance","signature":"public static Policy getInstance(String type, Policy.Parameters params, String provider) throws NoSuchProviderException, NoSuchAlgorithmException","paramTypes":["String","Policy.Parameters","String"],"notNullIndices":[2]},{"className":"java.security.Policy","api":"getInstance","signature":"public static Policy getInstance(String type, Policy.Parameters params, String provider) throws NoSuchProviderException, NoSuchAlgorithmException","paramTypes":["String","Policy.Parameters","String"],"notNullIndices":[0]},{"className":"java.security.Policy","api":"getInstance","signature":"public static Policy getInstance(String type, Policy.Parameters params, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Policy.Parameters","Provider"],"notNullIndices":[0]},{"className":"java.security.Provider.Service","api":"Service","signature":"public Service(Provider provider, String type, String algorithm, String className, List<String> aliases, Map<String,String> attributes)","paramTypes":["Provider","String","String","String","List","Map"],"notNullIndices":[0,1,2,3]},{"className":"java.security.Provider.Service","api":"getAttribute","signature":"public final String getAttribute(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.Provider","api":"configure","signature":"public Provider configure(String configArg)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.Provider","api":"getService","signature":"public Provider.Service getService(String type, String algorithm)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"java.security.Provider","api":"putService","signature":"protected void putService(Provider.Service s)","paramTypes":["Provider.Service"],"notNullIndices":[0]},{"className":"java.security.Provider","api":"removeService","signature":"protected void removeService(Provider.Service s)","paramTypes":["Provider.Service"],"notNullIndices":[0]},{"className":"java.security.SecureRandom","api":"getInstance","signature":"public static SecureRandom getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.SecureRandom","api":"getInstance","signature":"public static SecureRandom getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"java.security.SecureRandom","api":"getInstance","signature":"public static SecureRandom getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.security.SecureRandom","api":"getInstance","signature":"public static SecureRandom getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"java.security.SecureRandom","api":"getInstance","signature":"public static SecureRandom getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"java.security.SecureRandom","api":"getInstance","signature":"public static SecureRandom getInstance(String algorithm, SecureRandomParameters params) throws NoSuchAlgorithmException","paramTypes":["String","SecureRandomParameters"],"notNullIndices":[1]},{"className":"java.security.SecureRandom","api":"getInstance","signature":"public static SecureRandom getInstance(String algorithm, SecureRandomParameters params) throws NoSuchAlgorithmException","paramTypes":["String","SecureRandomParameters"],"notNullIndices":[0]},{"className":"java.security.SecureRandom","api":"getInstance","signature":"public static SecureRandom getInstance(String algorithm, SecureRandomParameters params, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","SecureRandomParameters","String"],"notNullIndices":[1,2]},{"className":"java.security.SecureRandom","api":"getInstance","signature":"public static SecureRandom getInstance(String algorithm, SecureRandomParameters params, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","SecureRandomParameters","String"],"notNullIndices":[0]},{"className":"java.security.SecureRandom","api":"getInstance","signature":"public static SecureRandom getInstance(String algorithm, SecureRandomParameters params, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","SecureRandomParameters","Provider"],"notNullIndices":[1,2]},{"className":"java.security.SecureRandom","api":"getInstance","signature":"public static SecureRandom getInstance(String algorithm, SecureRandomParameters params, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","SecureRandomParameters","Provider"],"notNullIndices":[0]},{"className":"java.security.SecureRandom","api":"nextBytes","signature":"public void nextBytes(byte[] bytes, SecureRandomParameters params)","paramTypes":["byte[]","SecureRandomParameters"],"notNullIndices":[0]},{"className":"java.security.SecureRandom","api":"nextBytes","signature":"public void nextBytes(byte[] bytes, SecureRandomParameters params)","paramTypes":["byte[]","SecureRandomParameters"],"notNullIndices":[1]},{"className":"java.security.SecureRandom","api":"reseed","signature":"public void reseed(SecureRandomParameters params)","paramTypes":["SecureRandomParameters"],"notNullIndices":[0]},{"className":"java.security.SecureRandomSpi","api":"engineNextBytes","signature":"protected void engineNextBytes(byte[] bytes, SecureRandomParameters params)","paramTypes":["byte[]","SecureRandomParameters"],"notNullIndices":[1]},{"className":"java.security.Security","api":"insertProviderAt","signature":"public static int insertProviderAt(Provider provider, int position)","paramTypes":["Provider","int"],"notNullIndices":[0]},{"className":"java.security.Security","api":"addProvider","signature":"public static int addProvider(Provider provider)","paramTypes":["Provider"],"notNullIndices":[0]},{"className":"java.security.Security","api":"getProviders","signature":"public static Provider[] getProviders(String filter)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.Security","api":"getProviders","signature":"public static Provider[] getProviders(Map<String,String> filter)","paramTypes":["Map"],"notNullIndices":[0]},{"className":"java.security.Security","api":"getProperty","signature":"public static String getProperty(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.Security","api":"setProperty","signature":"public static void setProperty(String key, String datum)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"java.security.SecurityPermission","api":"SecurityPermission","signature":"public SecurityPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.SecurityPermission","api":"SecurityPermission","signature":"public SecurityPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.security.Signature","api":"getInstance","signature":"public static Signature getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.Signature","api":"getInstance","signature":"public static Signature getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"java.security.Signature","api":"getInstance","signature":"public static Signature getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.security.Signature","api":"getInstance","signature":"public static Signature getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"java.security.Signature","api":"getInstance","signature":"public static Signature getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"java.security.Signature","api":"sign","signature":"public final int sign(byte[] outbuf, int offset, int len) throws SignatureException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.security.Signature","api":"verify","signature":"public final boolean verify(byte[] signature, int offset, int length) throws SignatureException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.security.Signature","api":"update","signature":"public final void update(byte[] data, int off, int len) throws SignatureException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.security.Timestamp","api":"Timestamp","signature":"public Timestamp(Date timestamp, CertPath signerCertPath)","paramTypes":["Date","CertPath"],"notNullIndices":[0,1]},{"className":"java.security.URIParameter","api":"URIParameter","signature":"public URIParameter(URI uri)","paramTypes":["URI"],"notNullIndices":[0]},{"className":"java.security.cert.CRLReason","api":"valueOf","signature":"public static CRLReason valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.cert.CertPathBuilder","api":"getInstance","signature":"public static CertPathBuilder getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.cert.CertPathBuilder","api":"getInstance","signature":"public static CertPathBuilder getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"java.security.cert.CertPathBuilder","api":"getInstance","signature":"public static CertPathBuilder getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.security.cert.CertPathBuilder","api":"getInstance","signature":"public static CertPathBuilder getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"java.security.cert.CertPathBuilder","api":"getInstance","signature":"public static CertPathBuilder getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"java.security.cert.CertPathValidator","api":"getInstance","signature":"public static CertPathValidator getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.cert.CertPathValidator","api":"getInstance","signature":"public static CertPathValidator getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"java.security.cert.CertPathValidator","api":"getInstance","signature":"public static CertPathValidator getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.security.cert.CertPathValidator","api":"getInstance","signature":"public static CertPathValidator getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"java.security.cert.CertPathValidator","api":"getInstance","signature":"public static CertPathValidator getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"java.security.cert.CertPathValidatorException.BasicReason","api":"valueOf","signature":"public static CertPathValidatorException.BasicReason valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.cert.CertPathValidatorException","api":"CertPathValidatorException","signature":"public CertPathValidatorException(String msg, Throwable cause, CertPath certPath, int index)","paramTypes":["String","Throwable","CertPath","int"],"notNullIndices":[3]},{"className":"java.security.cert.CertPathValidatorException","api":"CertPathValidatorException","signature":"public CertPathValidatorException(String msg, Throwable cause, CertPath certPath, int index, CertPathValidatorException.Reason reason)","paramTypes":["String","Throwable","CertPath","int","CertPathValidatorException.Reason"],"notNullIndices":[3]},{"className":"java.security.cert.CertPathValidatorException","api":"CertPathValidatorException","signature":"public CertPathValidatorException(String msg, Throwable cause, CertPath certPath, int index, CertPathValidatorException.Reason reason)","paramTypes":["String","Throwable","CertPath","int","CertPathValidatorException.Reason"],"notNullIndices":[4]},{"className":"java.security.cert.CertStore","api":"getInstance","signature":"public static CertStore getInstance(String type, CertStoreParameters params) throws InvalidAlgorithmParameterException, NoSuchAlgorithmException","paramTypes":["String","CertStoreParameters"],"notNullIndices":[0]},{"className":"java.security.cert.CertStore","api":"getInstance","signature":"public static CertStore getInstance(String type, CertStoreParameters params, String provider) throws InvalidAlgorithmParameterException, NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","CertStoreParameters","String"],"notNullIndices":[2]},{"className":"java.security.cert.CertStore","api":"getInstance","signature":"public static CertStore getInstance(String type, CertStoreParameters params, String provider) throws InvalidAlgorithmParameterException, NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","CertStoreParameters","String"],"notNullIndices":[0]},{"className":"java.security.cert.CertStore","api":"getInstance","signature":"public static CertStore getInstance(String type, CertStoreParameters params, Provider provider) throws NoSuchAlgorithmException, InvalidAlgorithmParameterException","paramTypes":["String","CertStoreParameters","Provider"],"notNullIndices":[2]},{"className":"java.security.cert.CertStore","api":"getInstance","signature":"public static CertStore getInstance(String type, CertStoreParameters params, Provider provider) throws NoSuchAlgorithmException, InvalidAlgorithmParameterException","paramTypes":["String","CertStoreParameters","Provider"],"notNullIndices":[0]},{"className":"java.security.cert.CertificateFactory","api":"getInstance","signature":"public static final CertificateFactory getInstance(String type) throws CertificateException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.cert.CertificateFactory","api":"getInstance","signature":"public static final CertificateFactory getInstance(String type, String provider) throws CertificateException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"java.security.cert.CertificateFactory","api":"getInstance","signature":"public static final CertificateFactory getInstance(String type, String provider) throws CertificateException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.security.cert.CertificateFactory","api":"getInstance","signature":"public static final CertificateFactory getInstance(String type, Provider provider) throws CertificateException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"java.security.cert.CertificateFactory","api":"getInstance","signature":"public static final CertificateFactory getInstance(String type, Provider provider) throws CertificateException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"java.security.cert.CertificateRevokedException","api":"CertificateRevokedException","signature":"public CertificateRevokedException(Date revocationDate, CRLReason reason, X500Principal authority, Map<String,Extension> extensions)","paramTypes":["Date","CRLReason","X500Principal","Map"],"notNullIndices":[0,1,2,3]},{"className":"java.security.cert.CollectionCertStoreParameters","api":"CollectionCertStoreParameters","signature":"public CollectionCertStoreParameters(Collection<?> collection)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.security.cert.Extension","api":"encode","signature":"void encode(OutputStream out) throws IOException","paramTypes":["OutputStream"],"notNullIndices":[0]},{"className":"java.security.cert.LDAPCertStoreParameters","api":"LDAPCertStoreParameters","signature":"public LDAPCertStoreParameters(String serverName, int port)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"java.security.cert.LDAPCertStoreParameters","api":"LDAPCertStoreParameters","signature":"public LDAPCertStoreParameters(String serverName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.cert.PKIXBuilderParameters","api":"PKIXBuilderParameters","signature":"public PKIXBuilderParameters(Set<TrustAnchor> trustAnchors, CertSelector targetConstraints) throws InvalidAlgorithmParameterException","paramTypes":["Set","CertSelector"],"notNullIndices":[0]},{"className":"java.security.cert.PKIXBuilderParameters","api":"PKIXBuilderParameters","signature":"public PKIXBuilderParameters(KeyStore keystore, CertSelector targetConstraints) throws KeyStoreException, InvalidAlgorithmParameterException","paramTypes":["KeyStore","CertSelector"],"notNullIndices":[0]},{"className":"java.security.cert.PKIXCertPathBuilderResult","api":"PKIXCertPathBuilderResult","signature":"public PKIXCertPathBuilderResult(CertPath certPath, TrustAnchor trustAnchor, PolicyNode policyTree, PublicKey subjectPublicKey)","paramTypes":["CertPath","TrustAnchor","PolicyNode","PublicKey"],"notNullIndices":[0,1,3]},{"className":"java.security.cert.PKIXCertPathValidatorResult","api":"PKIXCertPathValidatorResult","signature":"public PKIXCertPathValidatorResult(TrustAnchor trustAnchor, PolicyNode policyTree, PublicKey subjectPublicKey)","paramTypes":["TrustAnchor","PolicyNode","PublicKey"],"notNullIndices":[0,2]},{"className":"java.security.cert.PKIXParameters","api":"PKIXParameters","signature":"public PKIXParameters(Set<TrustAnchor> trustAnchors) throws InvalidAlgorithmParameterException","paramTypes":["Set"],"notNullIndices":[0]},{"className":"java.security.cert.PKIXParameters","api":"PKIXParameters","signature":"public PKIXParameters(KeyStore keystore) throws KeyStoreException, InvalidAlgorithmParameterException","paramTypes":["KeyStore"],"notNullIndices":[0]},{"className":"java.security.cert.PKIXParameters","api":"setTrustAnchors","signature":"public void setTrustAnchors(Set<TrustAnchor> trustAnchors) throws InvalidAlgorithmParameterException","paramTypes":["Set"],"notNullIndices":[0]},{"className":"java.security.cert.PKIXReason","api":"valueOf","signature":"public static PKIXReason valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.cert.PKIXRevocationChecker.Option","api":"valueOf","signature":"public static PKIXRevocationChecker.Option valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.cert.TrustAnchor","api":"TrustAnchor","signature":"public TrustAnchor(X500Principal caPrincipal, PublicKey pubKey, byte[] nameConstraints)","paramTypes":["X500Principal","PublicKey","byte[]"],"notNullIndices":[0,1]},{"className":"java.security.cert.TrustAnchor","api":"TrustAnchor","signature":"public TrustAnchor(String caName, PublicKey pubKey, byte[] nameConstraints)","paramTypes":["String","PublicKey","byte[]"],"notNullIndices":[0,1]},{"className":"java.security.cert.URICertStoreParameters","api":"URICertStoreParameters","signature":"public URICertStoreParameters(URI uri)","paramTypes":["URI"],"notNullIndices":[0]},{"className":"java.security.cert.X509CRL","api":"getRevokedCertificate","signature":"public X509CRLEntry getRevokedCertificate(X509Certificate certificate)","paramTypes":["X509Certificate"],"notNullIndices":[0]},{"className":"java.security.interfaces.DSAKeyPairGenerator","api":"initialize","signature":"void initialize(DSAParams params, SecureRandom random) throws InvalidParameterException","paramTypes":["DSAParams","SecureRandom"],"notNullIndices":[0]},{"className":"java.security.spec.ECFieldF2m","api":"ECFieldF2m","signature":"public ECFieldF2m(int m, BigInteger rp)","paramTypes":["int","BigInteger"],"notNullIndices":[1]},{"className":"java.security.spec.ECFieldF2m","api":"ECFieldF2m","signature":"public ECFieldF2m(int m, int[] ks)","paramTypes":["int","int[]"],"notNullIndices":[1]},{"className":"java.security.spec.ECFieldFp","api":"ECFieldFp","signature":"public ECFieldFp(BigInteger p)","paramTypes":["BigInteger"],"notNullIndices":[0]},{"className":"java.security.spec.ECGenParameterSpec","api":"ECGenParameterSpec","signature":"public ECGenParameterSpec(String stdName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.spec.ECParameterSpec","api":"ECParameterSpec","signature":"public ECParameterSpec(EllipticCurve curve, ECPoint g, BigInteger n, int h)","paramTypes":["EllipticCurve","ECPoint","BigInteger","int"],"notNullIndices":[0,1,2]},{"className":"java.security.spec.ECPoint","api":"ECPoint","signature":"public ECPoint(BigInteger x, BigInteger y)","paramTypes":["BigInteger","BigInteger"],"notNullIndices":[0,1]},{"className":"java.security.spec.ECPrivateKeySpec","api":"ECPrivateKeySpec","signature":"public ECPrivateKeySpec(BigInteger s, ECParameterSpec params)","paramTypes":["BigInteger","ECParameterSpec"],"notNullIndices":[0,1]},{"className":"java.security.spec.ECPublicKeySpec","api":"ECPublicKeySpec","signature":"public ECPublicKeySpec(ECPoint w, ECParameterSpec params)","paramTypes":["ECPoint","ECParameterSpec"],"notNullIndices":[0,1]},{"className":"java.security.spec.EllipticCurve","api":"EllipticCurve","signature":"public EllipticCurve(ECField field, BigInteger a, BigInteger b)","paramTypes":["ECField","BigInteger","BigInteger"],"notNullIndices":[0,1,2]},{"className":"java.security.spec.EllipticCurve","api":"EllipticCurve","signature":"public EllipticCurve(ECField field, BigInteger a, BigInteger b)","paramTypes":["ECField","BigInteger","BigInteger"],"notNullIndices":[1,2]},{"className":"java.security.spec.EllipticCurve","api":"EllipticCurve","signature":"public EllipticCurve(ECField field, BigInteger a, BigInteger b, byte[] seed)","paramTypes":["ECField","BigInteger","BigInteger","byte[]"],"notNullIndices":[0,1,2]},{"className":"java.security.spec.EllipticCurve","api":"EllipticCurve","signature":"public EllipticCurve(ECField field, BigInteger a, BigInteger b, byte[] seed)","paramTypes":["ECField","BigInteger","BigInteger","byte[]"],"notNullIndices":[1,2]},{"className":"java.security.spec.EncodedKeySpec","api":"EncodedKeySpec","signature":"public EncodedKeySpec(byte[] encodedKey)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.security.spec.EncodedKeySpec","api":"EncodedKeySpec","signature":"protected EncodedKeySpec(byte[] encodedKey, String algorithm)","paramTypes":["byte[]","String"],"notNullIndices":[0,1]},{"className":"java.security.spec.MGF1ParameterSpec","api":"MGF1ParameterSpec","signature":"public MGF1ParameterSpec(String mdName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.spec.NamedParameterSpec","api":"NamedParameterSpec","signature":"public NamedParameterSpec(String stdName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.security.spec.PKCS8EncodedKeySpec","api":"PKCS8EncodedKeySpec","signature":"public PKCS8EncodedKeySpec(byte[] encodedKey)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.security.spec.PKCS8EncodedKeySpec","api":"PKCS8EncodedKeySpec","signature":"public PKCS8EncodedKeySpec(byte[] encodedKey, String algorithm)","paramTypes":["byte[]","String"],"notNullIndices":[0,1]},{"className":"java.security.spec.PSSParameterSpec","api":"PSSParameterSpec","signature":"public PSSParameterSpec(String mdName, String mgfName, AlgorithmParameterSpec mgfSpec, int saltLen, int trailerField)","paramTypes":["String","String","AlgorithmParameterSpec","int","int"],"notNullIndices":[0,1]},{"className":"java.security.spec.RSAMultiPrimePrivateCrtKeySpec","api":"RSAMultiPrimePrivateCrtKeySpec","signature":"public RSAMultiPrimePrivateCrtKeySpec(BigInteger modulus, BigInteger publicExponent, BigInteger privateExponent, BigInteger primeP, BigInteger primeQ, BigInteger primeExponentP, BigInteger primeExponentQ, BigInteger crtCoefficient, RSAOtherPrimeInfo[] otherPrimeInfo)","paramTypes":["BigInteger","BigInteger","BigInteger","BigInteger","BigInteger","BigInteger","BigInteger","BigInteger","RSAOtherPrimeInfo[]"],"notNullIndices":[8]},{"className":"java.security.spec.X509EncodedKeySpec","api":"X509EncodedKeySpec","signature":"public X509EncodedKeySpec(byte[] encodedKey)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.security.spec.X509EncodedKeySpec","api":"X509EncodedKeySpec","signature":"public X509EncodedKeySpec(byte[] encodedKey, String algorithm)","paramTypes":["byte[]","String"],"notNullIndices":[0,1]},{"className":"java.security.spec.XECPrivateKeySpec","api":"XECPrivateKeySpec","signature":"public XECPrivateKeySpec(AlgorithmParameterSpec params, byte[] scalar)","paramTypes":["AlgorithmParameterSpec","byte[]"],"notNullIndices":[0,1]},{"className":"java.security.spec.XECPublicKeySpec","api":"XECPublicKeySpec","signature":"public XECPublicKeySpec(AlgorithmParameterSpec params, BigInteger u)","paramTypes":["AlgorithmParameterSpec","BigInteger"],"notNullIndices":[0,1]},{"className":"java.sql.CallableStatement","api":"getObject","signature":"<T> T getObject(int parameterIndex, Class<T> type) throws SQLException","paramTypes":["int","Class"],"notNullIndices":[1]},{"className":"java.sql.CallableStatement","api":"getObject","signature":"<T> T getObject(String parameterName, Class<T> type) throws SQLException","paramTypes":["String","Class"],"notNullIndices":[1]},{"className":"java.sql.ClientInfoStatus","api":"valueOf","signature":"public static ClientInfoStatus valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.sql.Connection","api":"createStruct","signature":"Struct createStruct(String typeName, Object[] attributes) throws SQLException","paramTypes":["String","Object[]"],"notNullIndices":[0]},{"className":"java.sql.Connection","api":"abort","signature":"void abort(Executor executor) throws SQLException","paramTypes":["Executor"],"notNullIndices":[0]},{"className":"java.sql.Connection","api":"setNetworkTimeout","signature":"void setNetworkTimeout(Executor executor, int milliseconds) throws SQLException","paramTypes":["Executor","int"],"notNullIndices":[0]},{"className":"java.sql.Date","api":"valueOf","signature":"public static Date valueOf(LocalDate date)","paramTypes":["LocalDate"],"notNullIndices":[0]},{"className":"java.sql.Driver","api":"connect","signature":"Connection connect(String url, Properties info) throws SQLException","paramTypes":["String","Properties"],"notNullIndices":[0]},{"className":"java.sql.Driver","api":"acceptsURL","signature":"boolean acceptsURL(String url) throws SQLException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.sql.DriverManager","api":"getConnection","signature":"public static Connection getConnection(String url, Properties info) throws SQLException","paramTypes":["String","Properties"],"notNullIndices":[0]},{"className":"java.sql.DriverManager","api":"getConnection","signature":"public static Connection getConnection(String url, String user, String password) throws SQLException","paramTypes":["String","String","String"],"notNullIndices":[0]},{"className":"java.sql.DriverManager","api":"getConnection","signature":"public static Connection getConnection(String url) throws SQLException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.sql.DriverManager","api":"registerDriver","signature":"public static void registerDriver(Driver driver) throws SQLException","paramTypes":["Driver"],"notNullIndices":[0]},{"className":"java.sql.DriverManager","api":"registerDriver","signature":"public static void registerDriver(Driver driver, DriverAction da) throws SQLException","paramTypes":["Driver","DriverAction"],"notNullIndices":[0]},{"className":"java.sql.JDBCType","api":"valueOf","signature":"public static JDBCType valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.sql.PseudoColumnUsage","api":"valueOf","signature":"public static PseudoColumnUsage valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.sql.ResultSet","api":"getObject","signature":"<T> T getObject(int columnIndex, Class<T> type) throws SQLException","paramTypes":["int","Class"],"notNullIndices":[1]},{"className":"java.sql.ResultSet","api":"getObject","signature":"<T> T getObject(String columnLabel, Class<T> type) throws SQLException","paramTypes":["String","Class"],"notNullIndices":[1]},{"className":"java.sql.RowIdLifetime","api":"valueOf","signature":"public static RowIdLifetime valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.sql.SQLPermission","api":"SQLPermission","signature":"public SQLPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.sql.SQLPermission","api":"SQLPermission","signature":"public SQLPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.sql.Statement","api":"enquoteLiteral","signature":"default String enquoteLiteral(String val) throws SQLException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.sql.Statement","api":"enquoteIdentifier","signature":"default String enquoteIdentifier(String identifier, boolean alwaysQuote) throws SQLException","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"java.sql.Statement","api":"isSimpleIdentifier","signature":"default boolean isSimpleIdentifier(String identifier) throws SQLException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.sql.Statement","api":"enquoteNCharLiteral","signature":"default String enquoteNCharLiteral(String val) throws SQLException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.sql.Time","api":"valueOf","signature":"public static Time valueOf(LocalTime time)","paramTypes":["LocalTime"],"notNullIndices":[0]},{"className":"java.sql.Timestamp","api":"valueOf","signature":"public static Timestamp valueOf(LocalDateTime dateTime)","paramTypes":["LocalDateTime"],"notNullIndices":[0]},{"className":"java.sql.Timestamp","api":"from","signature":"public static Timestamp from(Instant instant)","paramTypes":["Instant"],"notNullIndices":[0]},{"className":"java.text.AttributedString","api":"AttributedString","signature":"public AttributedString(String text)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.AttributedString","api":"AttributedString","signature":"public AttributedString(String text, Map<? extends AttributedCharacterIterator.Attribute,?> attributes)","paramTypes":["String","Map"],"notNullIndices":[0,1]},{"className":"java.text.AttributedString","api":"AttributedString","signature":"public AttributedString(AttributedCharacterIterator text)","paramTypes":["AttributedCharacterIterator"],"notNullIndices":[0]},{"className":"java.text.AttributedString","api":"AttributedString","signature":"public AttributedString(AttributedCharacterIterator text, int beginIndex, int endIndex)","paramTypes":["AttributedCharacterIterator","int","int"],"notNullIndices":[0]},{"className":"java.text.AttributedString","api":"AttributedString","signature":"public AttributedString(AttributedCharacterIterator text, int beginIndex, int endIndex, AttributedCharacterIterator.Attribute[] attributes)","paramTypes":["AttributedCharacterIterator","int","int","AttributedCharacterIterator.Attribute[]"],"notNullIndices":[0]},{"className":"java.text.AttributedString","api":"addAttribute","signature":"public void addAttribute(AttributedCharacterIterator.Attribute attribute, Object value)","paramTypes":["AttributedCharacterIterator.Attribute","Object"],"notNullIndices":[0]},{"className":"java.text.AttributedString","api":"addAttribute","signature":"public void addAttribute(AttributedCharacterIterator.Attribute attribute, Object value, int beginIndex, int endIndex)","paramTypes":["AttributedCharacterIterator.Attribute","Object","int","int"],"notNullIndices":[0]},{"className":"java.text.AttributedString","api":"addAttributes","signature":"public void addAttributes(Map<? extends AttributedCharacterIterator.Attribute,?> attributes, int beginIndex, int endIndex)","paramTypes":["Map","int","int"],"notNullIndices":[0]},{"className":"java.text.BreakIterator","api":"getWordInstance","signature":"public static BreakIterator getWordInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.BreakIterator","api":"getLineInstance","signature":"public static BreakIterator getLineInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.BreakIterator","api":"getCharacterInstance","signature":"public static BreakIterator getCharacterInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.BreakIterator","api":"getSentenceInstance","signature":"public static BreakIterator getSentenceInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.ChoiceFormat","api":"ChoiceFormat","signature":"public ChoiceFormat(String newPattern)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.ChoiceFormat","api":"ChoiceFormat","signature":"public ChoiceFormat(double[] limits, String[] formats)","paramTypes":["double[]","String[]"],"notNullIndices":[0,1]},{"className":"java.text.ChoiceFormat","api":"applyPattern","signature":"public void applyPattern(String newPattern)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.ChoiceFormat","api":"setChoices","signature":"public void setChoices(double[] limits, String[] formats)","paramTypes":["double[]","String[]"],"notNullIndices":[0,1]},{"className":"java.text.ChoiceFormat","api":"format","signature":"public StringBuffer format(double number, StringBuffer toAppendTo, FieldPosition status)","paramTypes":["double","StringBuffer","FieldPosition"],"notNullIndices":[1]},{"className":"java.text.CollationKey","api":"CollationKey","signature":"protected CollationKey(String source)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.CompactNumberFormat","api":"CompactNumberFormat","signature":"public CompactNumberFormat(String decimalPattern, DecimalFormatSymbols symbols, String[] compactPatterns)","paramTypes":["String","DecimalFormatSymbols","String[]"],"notNullIndices":[0,2]},{"className":"java.text.CompactNumberFormat","api":"format","signature":"public final StringBuffer format(Object number, StringBuffer toAppendTo, FieldPosition fieldPosition)","paramTypes":["Object","StringBuffer","FieldPosition"],"notNullIndices":[0]},{"className":"java.text.CompactNumberFormat","api":"format","signature":"public final StringBuffer format(Object number, StringBuffer toAppendTo, FieldPosition fieldPosition)","paramTypes":["Object","StringBuffer","FieldPosition"],"notNullIndices":[1,2]},{"className":"java.text.CompactNumberFormat","api":"format","signature":"public StringBuffer format(double number, StringBuffer result, FieldPosition fieldPosition)","paramTypes":["double","StringBuffer","FieldPosition"],"notNullIndices":[1,2]},{"className":"java.text.CompactNumberFormat","api":"format","signature":"public StringBuffer format(long number, StringBuffer result, FieldPosition fieldPosition)","paramTypes":["long","StringBuffer","FieldPosition"],"notNullIndices":[1,2]},{"className":"java.text.CompactNumberFormat","api":"formatToCharacterIterator","signature":"public AttributedCharacterIterator formatToCharacterIterator(Object obj)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.text.CompactNumberFormat","api":"parse","signature":"public Number parse(String text, ParsePosition pos)","paramTypes":["String","ParsePosition"],"notNullIndices":[0,1]},{"className":"java.text.CompactNumberFormat","api":"setRoundingMode","signature":"public void setRoundingMode(RoundingMode roundingMode)","paramTypes":["RoundingMode"],"notNullIndices":[0]},{"className":"java.text.DateFormat","api":"parseObject","signature":"public Object parseObject(String source, ParsePosition pos)","paramTypes":["String","ParsePosition"],"notNullIndices":[0,1]},{"className":"java.text.DateFormatSymbols","api":"getInstance","signature":"public static final DateFormatSymbols getInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.DateFormatSymbols","api":"setZoneStrings","signature":"public void setZoneStrings(String[][] newZoneStrings)","paramTypes":["String[][]"],"notNullIndices":[0]},{"className":"java.text.DecimalFormat","api":"DecimalFormat","signature":"public DecimalFormat(String pattern)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.DecimalFormat","api":"format","signature":"public final StringBuffer format(Object number, StringBuffer toAppendTo, FieldPosition pos)","paramTypes":["Object","StringBuffer","FieldPosition"],"notNullIndices":[0]},{"className":"java.text.DecimalFormat","api":"format","signature":"public final StringBuffer format(Object number, StringBuffer toAppendTo, FieldPosition pos)","paramTypes":["Object","StringBuffer","FieldPosition"],"notNullIndices":[1,2]},{"className":"java.text.DecimalFormat","api":"format","signature":"public StringBuffer format(double number, StringBuffer result, FieldPosition fieldPosition)","paramTypes":["double","StringBuffer","FieldPosition"],"notNullIndices":[1,2]},{"className":"java.text.DecimalFormat","api":"format","signature":"public StringBuffer format(long number, StringBuffer result, FieldPosition fieldPosition)","paramTypes":["long","StringBuffer","FieldPosition"],"notNullIndices":[1,2]},{"className":"java.text.DecimalFormat","api":"formatToCharacterIterator","signature":"public AttributedCharacterIterator formatToCharacterIterator(Object obj)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.text.DecimalFormat","api":"parse","signature":"public Number parse(String text, ParsePosition pos)","paramTypes":["String","ParsePosition"],"notNullIndices":[0,1]},{"className":"java.text.DecimalFormat","api":"applyPattern","signature":"public void applyPattern(String pattern)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.DecimalFormat","api":"applyLocalizedPattern","signature":"public void applyLocalizedPattern(String pattern)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.DecimalFormat","api":"setCurrency","signature":"public void setCurrency(Currency currency)","paramTypes":["Currency"],"notNullIndices":[0]},{"className":"java.text.DecimalFormat","api":"setRoundingMode","signature":"public void setRoundingMode(RoundingMode roundingMode)","paramTypes":["RoundingMode"],"notNullIndices":[0]},{"className":"java.text.DecimalFormatSymbols","api":"DecimalFormatSymbols","signature":"public DecimalFormatSymbols(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.DecimalFormatSymbols","api":"getInstance","signature":"public static final DecimalFormatSymbols getInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.DecimalFormatSymbols","api":"setCurrency","signature":"public void setCurrency(Currency currency)","paramTypes":["Currency"],"notNullIndices":[0]},{"className":"java.text.DecimalFormatSymbols","api":"setExponentSeparator","signature":"public void setExponentSeparator(String exp)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.Format","api":"format","signature":"public abstract StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)","paramTypes":["Object","StringBuffer","FieldPosition"],"notNullIndices":[1,2]},{"className":"java.text.Format","api":"formatToCharacterIterator","signature":"public AttributedCharacterIterator formatToCharacterIterator(Object obj)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.text.Format","api":"parseObject","signature":"public abstract Object parseObject(String source, ParsePosition pos)","paramTypes":["String","ParsePosition"],"notNullIndices":[0,1]},{"className":"java.text.Format","api":"parseObject","signature":"public Object parseObject(String source) throws ParseException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.MessageFormat","api":"MessageFormat","signature":"public MessageFormat(String pattern)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.MessageFormat","api":"MessageFormat","signature":"public MessageFormat(String pattern, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0]},{"className":"java.text.MessageFormat","api":"applyPattern","signature":"public void applyPattern(String pattern)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.MessageFormat","api":"setFormatsByArgumentIndex","signature":"public void setFormatsByArgumentIndex(Format[] newFormats)","paramTypes":["Format[]"],"notNullIndices":[0]},{"className":"java.text.MessageFormat","api":"setFormats","signature":"public void setFormats(Format[] newFormats)","paramTypes":["Format[]"],"notNullIndices":[0]},{"className":"java.text.MessageFormat","api":"format","signature":"public final StringBuffer format(Object[] arguments, StringBuffer result, FieldPosition pos)","paramTypes":["Object[]","StringBuffer","FieldPosition"],"notNullIndices":[1]},{"className":"java.text.MessageFormat","api":"format","signature":"public static String format(String pattern, Object... arguments)","paramTypes":["String","Object..."],"notNullIndices":[0]},{"className":"java.text.MessageFormat","api":"format","signature":"public final StringBuffer format(Object arguments, StringBuffer result, FieldPosition pos)","paramTypes":["Object","StringBuffer","FieldPosition"],"notNullIndices":[1]},{"className":"java.text.MessageFormat","api":"formatToCharacterIterator","signature":"public AttributedCharacterIterator formatToCharacterIterator(Object arguments)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.text.MessageFormat","api":"parse","signature":"public Object[] parse(String source, ParsePosition pos)","paramTypes":["String","ParsePosition"],"notNullIndices":[1]},{"className":"java.text.MessageFormat","api":"parseObject","signature":"public Object parseObject(String source, ParsePosition pos)","paramTypes":["String","ParsePosition"],"notNullIndices":[1]},{"className":"java.text.Normalizer.Form","api":"valueOf","signature":"public static Normalizer.Form valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.Normalizer","api":"normalize","signature":"public static String normalize(CharSequence src, Normalizer.Form form)","paramTypes":["CharSequence","Normalizer.Form"],"notNullIndices":[0,1]},{"className":"java.text.Normalizer","api":"isNormalized","signature":"public static boolean isNormalized(CharSequence src, Normalizer.Form form)","paramTypes":["CharSequence","Normalizer.Form"],"notNullIndices":[0,1]},{"className":"java.text.NumberFormat.Style","api":"valueOf","signature":"public static NumberFormat.Style valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.NumberFormat","api":"format","signature":"public StringBuffer format(Object number, StringBuffer toAppendTo, FieldPosition pos)","paramTypes":["Object","StringBuffer","FieldPosition"],"notNullIndices":[0]},{"className":"java.text.NumberFormat","api":"format","signature":"public StringBuffer format(Object number, StringBuffer toAppendTo, FieldPosition pos)","paramTypes":["Object","StringBuffer","FieldPosition"],"notNullIndices":[1,2]},{"className":"java.text.NumberFormat","api":"parseObject","signature":"public final Object parseObject(String source, ParsePosition pos)","paramTypes":["String","ParsePosition"],"notNullIndices":[0,1]},{"className":"java.text.NumberFormat","api":"getCompactNumberInstance","signature":"public static NumberFormat getCompactNumberInstance(Locale locale, NumberFormat.Style formatStyle)","paramTypes":["Locale","NumberFormat.Style"],"notNullIndices":[0,1]},{"className":"java.text.NumberFormat","api":"setCurrency","signature":"public void setCurrency(Currency currency)","paramTypes":["Currency"],"notNullIndices":[0]},{"className":"java.text.NumberFormat","api":"setRoundingMode","signature":"public void setRoundingMode(RoundingMode roundingMode)","paramTypes":["RoundingMode"],"notNullIndices":[0]},{"className":"java.text.RuleBasedCollator","api":"compare","signature":"public int compare(String source, String target)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"java.text.SimpleDateFormat","api":"SimpleDateFormat","signature":"public SimpleDateFormat(String pattern)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.SimpleDateFormat","api":"SimpleDateFormat","signature":"public SimpleDateFormat(String pattern, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0,1]},{"className":"java.text.SimpleDateFormat","api":"SimpleDateFormat","signature":"public SimpleDateFormat(String pattern, DateFormatSymbols formatSymbols)","paramTypes":["String","DateFormatSymbols"],"notNullIndices":[0,1]},{"className":"java.text.SimpleDateFormat","api":"set2DigitYearStart","signature":"public void set2DigitYearStart(Date startDate)","paramTypes":["Date"],"notNullIndices":[0]},{"className":"java.text.SimpleDateFormat","api":"formatToCharacterIterator","signature":"public AttributedCharacterIterator formatToCharacterIterator(Object obj)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.text.SimpleDateFormat","api":"parse","signature":"public Date parse(String text, ParsePosition pos)","paramTypes":["String","ParsePosition"],"notNullIndices":[0,1]},{"className":"java.text.SimpleDateFormat","api":"applyPattern","signature":"public void applyPattern(String pattern)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.SimpleDateFormat","api":"applyLocalizedPattern","signature":"public void applyLocalizedPattern(String pattern)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.text.SimpleDateFormat","api":"setDateFormatSymbols","signature":"public void setDateFormatSymbols(DateFormatSymbols newFormatSymbols)","paramTypes":["DateFormatSymbols"],"notNullIndices":[0]},{"className":"java.text.spi.BreakIteratorProvider","api":"getWordInstance","signature":"public abstract BreakIterator getWordInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.spi.BreakIteratorProvider","api":"getLineInstance","signature":"public abstract BreakIterator getLineInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.spi.BreakIteratorProvider","api":"getCharacterInstance","signature":"public abstract BreakIterator getCharacterInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.spi.BreakIteratorProvider","api":"getSentenceInstance","signature":"public abstract BreakIterator getSentenceInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.spi.CollatorProvider","api":"getInstance","signature":"public abstract Collator getInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.spi.DateFormatProvider","api":"getTimeInstance","signature":"public abstract DateFormat getTimeInstance(int style, Locale locale)","paramTypes":["int","Locale"],"notNullIndices":[1]},{"className":"java.text.spi.DateFormatProvider","api":"getDateInstance","signature":"public abstract DateFormat getDateInstance(int style, Locale locale)","paramTypes":["int","Locale"],"notNullIndices":[1]},{"className":"java.text.spi.DateFormatProvider","api":"getDateTimeInstance","signature":"public abstract DateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale)","paramTypes":["int","int","Locale"],"notNullIndices":[2]},{"className":"java.text.spi.DateFormatSymbolsProvider","api":"getInstance","signature":"public abstract DateFormatSymbols getInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.spi.DecimalFormatSymbolsProvider","api":"getInstance","signature":"public abstract DecimalFormatSymbols getInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.spi.NumberFormatProvider","api":"getCurrencyInstance","signature":"public abstract NumberFormat getCurrencyInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.spi.NumberFormatProvider","api":"getIntegerInstance","signature":"public abstract NumberFormat getIntegerInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.spi.NumberFormatProvider","api":"getNumberInstance","signature":"public abstract NumberFormat getNumberInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.spi.NumberFormatProvider","api":"getPercentInstance","signature":"public abstract NumberFormat getPercentInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.text.spi.NumberFormatProvider","api":"getCompactNumberInstance","signature":"public NumberFormat getCompactNumberInstance(Locale locale, NumberFormat.Style formatStyle)","paramTypes":["Locale","NumberFormat.Style"],"notNullIndices":[0,1]},{"className":"java.time.DayOfWeek","api":"valueOf","signature":"public static DayOfWeek valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.time.Instant","api":"compareTo","signature":"public int compareTo(Instant otherInstant)","paramTypes":["Instant"],"notNullIndices":[0]},{"className":"java.time.Instant","api":"isAfter","signature":"public boolean isAfter(Instant otherInstant)","paramTypes":["Instant"],"notNullIndices":[0]},{"className":"java.time.Instant","api":"isBefore","signature":"public boolean isBefore(Instant otherInstant)","paramTypes":["Instant"],"notNullIndices":[0]},{"className":"java.time.Month","api":"valueOf","signature":"public static Month valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.time.ZoneOffset","api":"compareTo","signature":"public int compareTo(ZoneOffset other)","paramTypes":["ZoneOffset"],"notNullIndices":[0]},{"className":"java.time.chrono.HijrahEra","api":"valueOf","signature":"public static HijrahEra valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.time.chrono.IsoEra","api":"valueOf","signature":"public static IsoEra valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.time.chrono.MinguoEra","api":"valueOf","signature":"public static MinguoEra valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.time.chrono.ThaiBuddhistEra","api":"valueOf","signature":"public static ThaiBuddhistEra valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.time.format.DateTimeFormatterBuilder","api":"getLocalizedDateTimePattern","signature":"public static String getLocalizedDateTimePattern(FormatStyle dateStyle, FormatStyle timeStyle, Chronology chrono, Locale locale)","paramTypes":["FormatStyle","FormatStyle","Chronology","Locale"],"notNullIndices":[0,1]},{"className":"java.time.format.FormatStyle","api":"valueOf","signature":"public static FormatStyle valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.time.format.ResolverStyle","api":"valueOf","signature":"public static ResolverStyle valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.time.format.SignStyle","api":"valueOf","signature":"public static SignStyle valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.time.format.TextStyle","api":"valueOf","signature":"public static TextStyle valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.time.temporal.ChronoField","api":"valueOf","signature":"public static ChronoField valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.time.temporal.ChronoUnit","api":"valueOf","signature":"public static ChronoUnit valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.time.zone.ZoneOffsetTransitionRule.TimeDefinition","api":"valueOf","signature":"public static ZoneOffsetTransitionRule.TimeDefinition valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.AbstractCollection<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.ArrayDeque<E>","api":"ArrayDeque","signature":"public ArrayDeque(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.ArrayDeque<E>","api":"addFirst","signature":"public void addFirst(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.ArrayDeque<E>","api":"addLast","signature":"public void addLast(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.ArrayDeque<E>","api":"addAll","signature":"public boolean addAll(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.ArrayDeque<E>","api":"offerFirst","signature":"public boolean offerFirst(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.ArrayDeque<E>","api":"offerLast","signature":"public boolean offerLast(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.ArrayDeque<E>","api":"add","signature":"public boolean add(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.ArrayDeque<E>","api":"offer","signature":"public boolean offer(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.ArrayDeque<E>","api":"push","signature":"public void push(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.ArrayDeque<E>","api":"forEach","signature":"public void forEach(Consumer<? super E> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.ArrayDeque<E>","api":"removeIf","signature":"public boolean removeIf(Predicate<? super E> filter)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.ArrayDeque<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.ArrayList<E>","api":"ArrayList","signature":"public ArrayList(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.ArrayList<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.ArrayList<E>","api":"addAll","signature":"public boolean addAll(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.ArrayList<E>","api":"forEach","signature":"public void forEach(Consumer<? super E> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.ArrayList<E>","api":"removeIf","signature":"public boolean removeIf(Predicate<? super E> filter)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"parallelPrefix","signature":"public static <T> void parallelPrefix(T[] array, BinaryOperator<T> op)","paramTypes":["T[]","BinaryOperator"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"parallelPrefix","signature":"public static <T> void parallelPrefix(T[] array, int fromIndex, int toIndex, BinaryOperator<T> op)","paramTypes":["T[]","int","int","BinaryOperator"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"parallelPrefix","signature":"public static void parallelPrefix(long[] array, LongBinaryOperator op)","paramTypes":["long[]","LongBinaryOperator"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"parallelPrefix","signature":"public static void parallelPrefix(long[] array, int fromIndex, int toIndex, LongBinaryOperator op)","paramTypes":["long[]","int","int","LongBinaryOperator"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"parallelPrefix","signature":"public static void parallelPrefix(double[] array, DoubleBinaryOperator op)","paramTypes":["double[]","DoubleBinaryOperator"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"parallelPrefix","signature":"public static void parallelPrefix(double[] array, int fromIndex, int toIndex, DoubleBinaryOperator op)","paramTypes":["double[]","int","int","DoubleBinaryOperator"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"parallelPrefix","signature":"public static void parallelPrefix(int[] array, IntBinaryOperator op)","paramTypes":["int[]","IntBinaryOperator"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"parallelPrefix","signature":"public static void parallelPrefix(int[] array, int fromIndex, int toIndex, IntBinaryOperator op)","paramTypes":["int[]","int","int","IntBinaryOperator"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOf","signature":"public static <T> T[] copyOf(T[] original, int newLength)","paramTypes":["T[]","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOf","signature":"public static <T,U> T[] copyOf(U[] original, int newLength, Class<? extends T[]> newType)","paramTypes":["U[]","int","Class"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOf","signature":"public static byte[] copyOf(byte[] original, int newLength)","paramTypes":["byte[]","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOf","signature":"public static short[] copyOf(short[] original, int newLength)","paramTypes":["short[]","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOf","signature":"public static int[] copyOf(int[] original, int newLength)","paramTypes":["int[]","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOf","signature":"public static long[] copyOf(long[] original, int newLength)","paramTypes":["long[]","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOf","signature":"public static char[] copyOf(char[] original, int newLength)","paramTypes":["char[]","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOf","signature":"public static float[] copyOf(float[] original, int newLength)","paramTypes":["float[]","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOf","signature":"public static double[] copyOf(double[] original, int newLength)","paramTypes":["double[]","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOf","signature":"public static boolean[] copyOf(boolean[] original, int newLength)","paramTypes":["boolean[]","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOfRange","signature":"public static <T> T[] copyOfRange(T[] original, int from, int to)","paramTypes":["T[]","int","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOfRange","signature":"public static <T,U> T[] copyOfRange(U[] original, int from, int to, Class<? extends T[]> newType)","paramTypes":["U[]","int","int","Class"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOfRange","signature":"public static byte[] copyOfRange(byte[] original, int from, int to)","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOfRange","signature":"public static short[] copyOfRange(short[] original, int from, int to)","paramTypes":["short[]","int","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOfRange","signature":"public static int[] copyOfRange(int[] original, int from, int to)","paramTypes":["int[]","int","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOfRange","signature":"public static long[] copyOfRange(long[] original, int from, int to)","paramTypes":["long[]","int","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOfRange","signature":"public static char[] copyOfRange(char[] original, int from, int to)","paramTypes":["char[]","int","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOfRange","signature":"public static float[] copyOfRange(float[] original, int from, int to)","paramTypes":["float[]","int","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOfRange","signature":"public static double[] copyOfRange(double[] original, int from, int to)","paramTypes":["double[]","int","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"copyOfRange","signature":"public static boolean[] copyOfRange(boolean[] original, int from, int to)","paramTypes":["boolean[]","int","int"],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"asList","signature":"@SafeVarargs public static <T> List<T> asList(T... a)","paramTypes":["T..."],"notNullIndices":[0]},{"className":"java.util.Arrays","api":"setAll","signature":"public static <T> void setAll(T[] array, IntFunction<? extends T> generator)","paramTypes":["T[]","IntFunction"],"notNullIndices":[1]},{"className":"java.util.Arrays","api":"parallelSetAll","signature":"public static <T> void parallelSetAll(T[] array, IntFunction<? extends T> generator)","paramTypes":["T[]","IntFunction"],"notNullIndices":[1]},{"className":"java.util.Arrays","api":"setAll","signature":"public static void setAll(int[] array, IntUnaryOperator generator)","paramTypes":["int[]","IntUnaryOperator"],"notNullIndices":[1]},{"className":"java.util.Arrays","api":"parallelSetAll","signature":"public static void parallelSetAll(int[] array, IntUnaryOperator generator)","paramTypes":["int[]","IntUnaryOperator"],"notNullIndices":[1]},{"className":"java.util.Arrays","api":"setAll","signature":"public static void setAll(long[] array, IntToLongFunction generator)","paramTypes":["long[]","IntToLongFunction"],"notNullIndices":[1]},{"className":"java.util.Arrays","api":"parallelSetAll","signature":"public static void parallelSetAll(long[] array, IntToLongFunction generator)","paramTypes":["long[]","IntToLongFunction"],"notNullIndices":[1]},{"className":"java.util.Arrays","api":"setAll","signature":"public static void setAll(double[] array, IntToDoubleFunction generator)","paramTypes":["double[]","IntToDoubleFunction"],"notNullIndices":[1]},{"className":"java.util.Arrays","api":"parallelSetAll","signature":"public static void parallelSetAll(double[] array, IntToDoubleFunction generator)","paramTypes":["double[]","IntToDoubleFunction"],"notNullIndices":[1]},{"className":"java.util.Calendar.Builder","api":"setInstant","signature":"public Calendar.Builder setInstant(Date instant)","paramTypes":["Date"],"notNullIndices":[0]},{"className":"java.util.Calendar.Builder","api":"setFields","signature":"public Calendar.Builder setFields(int... fieldValuePairs)","paramTypes":["int..."],"notNullIndices":[0]},{"className":"java.util.Calendar.Builder","api":"setTimeZone","signature":"public Calendar.Builder setTimeZone(TimeZone zone)","paramTypes":["TimeZone"],"notNullIndices":[0]},{"className":"java.util.Calendar.Builder","api":"setCalendarType","signature":"public Calendar.Builder setCalendarType(String type)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Calendar.Builder","api":"setLocale","signature":"public Calendar.Builder setLocale(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.util.Calendar","api":"getDisplayName","signature":"public String getDisplayName(int field, int style, Locale locale)","paramTypes":["int","int","Locale"],"notNullIndices":[2]},{"className":"java.util.Calendar","api":"getDisplayNames","signature":"public Map<String,Integer> getDisplayNames(int field, int style, Locale locale)","paramTypes":["int","int","Locale"],"notNullIndices":[2]},{"className":"java.util.Calendar","api":"compareTo","signature":"public int compareTo(Calendar anotherCalendar)","paramTypes":["Calendar"],"notNullIndices":[0]},{"className":"java.util.Collection<E>","api":"toArray","signature":"<T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.Collection<E>","api":"toArray","signature":"default <T> T[] toArray(IntFunction<T[]> generator)","paramTypes":["IntFunction"],"notNullIndices":[0]},{"className":"java.util.Collection<E>","api":"removeIf","signature":"default boolean removeIf(Predicate<? super E> filter)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.Collections","api":"frequency","signature":"public static int frequency(Collection<?> c, Object o)","paramTypes":["Collection","Object"],"notNullIndices":[0]},{"className":"java.util.Collections","api":"addAll","signature":"@SafeVarargs public static <T> boolean addAll(Collection<? super T> c, T... elements)","paramTypes":["Collection","T..."],"notNullIndices":[0,1]},{"className":"java.util.Comparator<T>","api":"thenComparing","signature":"default Comparator<T> thenComparing(Comparator<? super T> other)","paramTypes":["Comparator"],"notNullIndices":[0]},{"className":"java.util.Comparator<T>","api":"thenComparing","signature":"default <U extends Comparable<? super U>> Comparator<T> thenComparing(Function<? super T,? extends U> keyExtractor)","paramTypes":["Function"],"notNullIndices":[0]},{"className":"java.util.Comparator<T>","api":"thenComparingInt","signature":"default Comparator<T> thenComparingInt(ToIntFunction<? super T> keyExtractor)","paramTypes":["ToIntFunction"],"notNullIndices":[0]},{"className":"java.util.Comparator<T>","api":"thenComparingLong","signature":"default Comparator<T> thenComparingLong(ToLongFunction<? super T> keyExtractor)","paramTypes":["ToLongFunction"],"notNullIndices":[0]},{"className":"java.util.Comparator<T>","api":"thenComparingDouble","signature":"default Comparator<T> thenComparingDouble(ToDoubleFunction<? super T> keyExtractor)","paramTypes":["ToDoubleFunction"],"notNullIndices":[0]},{"className":"java.util.Comparator<T>","api":"comparing","signature":"static <T,U extends Comparable<? super U>> Comparator<T> comparing(Function<? super T,? extends U> keyExtractor)","paramTypes":["Function"],"notNullIndices":[0]},{"className":"java.util.Comparator<T>","api":"comparingInt","signature":"static <T> Comparator<T> comparingInt(ToIntFunction<? super T> keyExtractor)","paramTypes":["ToIntFunction"],"notNullIndices":[0]},{"className":"java.util.Comparator<T>","api":"comparingLong","signature":"static <T> Comparator<T> comparingLong(ToLongFunction<? super T> keyExtractor)","paramTypes":["ToLongFunction"],"notNullIndices":[0]},{"className":"java.util.Comparator<T>","api":"comparingDouble","signature":"static <T> Comparator<T> comparingDouble(ToDoubleFunction<? super T> keyExtractor)","paramTypes":["ToDoubleFunction"],"notNullIndices":[0]},{"className":"java.util.Currency","api":"getInstance","signature":"public static Currency getInstance(String currencyCode)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Currency","api":"getInstance","signature":"public static Currency getInstance(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.util.Currency","api":"getSymbol","signature":"public String getSymbol(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.util.Currency","api":"getDisplayName","signature":"public String getDisplayName(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.util.Date","api":"before","signature":"public boolean before(Date when)","paramTypes":["Date"],"notNullIndices":[0]},{"className":"java.util.Date","api":"after","signature":"public boolean after(Date when)","paramTypes":["Date"],"notNullIndices":[0]},{"className":"java.util.Date","api":"compareTo","signature":"public int compareTo(Date anotherDate)","paramTypes":["Date"],"notNullIndices":[0]},{"className":"java.util.Date","api":"from","signature":"public static Date from(Instant instant)","paramTypes":["Instant"],"notNullIndices":[0]},{"className":"java.util.DoubleSummaryStatistics","api":"combine","signature":"public void combine(DoubleSummaryStatistics other)","paramTypes":["DoubleSummaryStatistics"],"notNullIndices":[0]},{"className":"java.util.EnumSet<E>","api":"noneOf","signature":"public static <E extends Enum<E>> EnumSet<E> noneOf(Class<E> elementType)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.util.EnumSet<E>","api":"allOf","signature":"public static <E extends Enum<E>> EnumSet<E> allOf(Class<E> elementType)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.util.EnumSet<E>","api":"copyOf","signature":"public static <E extends Enum<E>> EnumSet<E> copyOf(EnumSet<E> s)","paramTypes":["EnumSet"],"notNullIndices":[0]},{"className":"java.util.EnumSet<E>","api":"copyOf","signature":"public static <E extends Enum<E>> EnumSet<E> copyOf(Collection<E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.EnumSet<E>","api":"complementOf","signature":"public static <E extends Enum<E>> EnumSet<E> complementOf(EnumSet<E> s)","paramTypes":["EnumSet"],"notNullIndices":[0]},{"className":"java.util.EnumSet<E>","api":"of","signature":"public static <E extends Enum<E>> EnumSet<E> of(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.EnumSet<E>","api":"of","signature":"@SafeVarargs public static <E extends Enum<E>> EnumSet<E> of(E first, E... rest)","paramTypes":["E","E..."],"notNullIndices":[1]},{"className":"java.util.EnumSet<E>","api":"range","signature":"public static <E extends Enum<E>> EnumSet<E> range(E from, E to)","paramTypes":["E","E"],"notNullIndices":[0,1]},{"className":"java.util.EventObject","api":"EventObject","signature":"public EventObject(Object source)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.util.Formatter.BigDecimalLayoutForm","api":"valueOf","signature":"public static Formatter.BigDecimalLayoutForm valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Formatter","api":"Formatter","signature":"public Formatter(String fileName, Charset charset, Locale l) throws IOException","paramTypes":["String","Charset","Locale"],"notNullIndices":[0,1]},{"className":"java.util.Formatter","api":"Formatter","signature":"public Formatter(File file, Charset charset, Locale l) throws IOException","paramTypes":["File","Charset","Locale"],"notNullIndices":[0,1]},{"className":"java.util.Formatter","api":"Formatter","signature":"public Formatter(OutputStream os, Charset charset, Locale l)","paramTypes":["OutputStream","Charset","Locale"],"notNullIndices":[0,1]},{"className":"java.util.GregorianCalendar","api":"from","signature":"public static GregorianCalendar from(ZonedDateTime zdt)","paramTypes":["ZonedDateTime"],"notNullIndices":[0]},{"className":"java.util.HashSet<E>","api":"HashSet","signature":"public HashSet(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.IntSummaryStatistics","api":"combine","signature":"public void combine(IntSummaryStatistics other)","paramTypes":["IntSummaryStatistics"],"notNullIndices":[0]},{"className":"java.util.Iterator<E>","api":"forEachRemaining","signature":"default void forEachRemaining(Consumer<? super E> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.LinkedHashSet<E>","api":"LinkedHashSet","signature":"public LinkedHashSet(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.LinkedList<E>","api":"LinkedList","signature":"public LinkedList(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.LinkedList<E>","api":"addAll","signature":"public boolean addAll(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.LinkedList<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.List<E>","api":"toArray","signature":"<T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.List<E>","api":"replaceAll","signature":"default void replaceAll(UnaryOperator<E> operator)","paramTypes":["UnaryOperator"],"notNullIndices":[0]},{"className":"java.util.List<E>","api":"of","signature":"static <E> List<E> of(E e1)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.List<E>","api":"of","signature":"@SafeVarargs static <E> List<E> of(E... elements)","paramTypes":["E..."],"notNullIndices":[0]},{"className":"java.util.List<E>","api":"copyOf","signature":"static <E> List<E> copyOf(Collection<? extends E> coll)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.Locale.Builder","api":"setLocale","signature":"public Locale.Builder setLocale(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.util.Locale.Builder","api":"setUnicodeLocaleKeyword","signature":"public Locale.Builder setUnicodeLocaleKeyword(String key, String type)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.util.Locale.Builder","api":"addUnicodeLocaleAttribute","signature":"public Locale.Builder addUnicodeLocaleAttribute(String attribute)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Locale.Builder","api":"removeUnicodeLocaleAttribute","signature":"public Locale.Builder removeUnicodeLocaleAttribute(String attribute)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Locale.Category","api":"valueOf","signature":"public static Locale.Category valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Locale.FilteringMode","api":"valueOf","signature":"public static Locale.FilteringMode valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Locale.IsoCountryCode","api":"valueOf","signature":"public static Locale.IsoCountryCode valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Locale.LanguageRange","api":"LanguageRange","signature":"public LanguageRange(String range)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Locale.LanguageRange","api":"LanguageRange","signature":"public LanguageRange(String range, double weight)","paramTypes":["String","double"],"notNullIndices":[0]},{"className":"java.util.Locale.LanguageRange","api":"parse","signature":"public static List<Locale.LanguageRange> parse(String ranges)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Locale.LanguageRange","api":"parse","signature":"public static List<Locale.LanguageRange> parse(String ranges, Map<String,List<String>> map)","paramTypes":["String","Map>"],"notNullIndices":[0]},{"className":"java.util.Locale.LanguageRange","api":"mapEquivalents","signature":"public static List<Locale.LanguageRange> mapEquivalents(List<Locale.LanguageRange> priorityList, Map<String,List<String>> map)","paramTypes":["List","Map>"],"notNullIndices":[0]},{"className":"java.util.Locale","api":"Locale","signature":"public Locale(String language)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Locale","api":"getDefault","signature":"public static Locale getDefault(Locale.Category category)","paramTypes":["Locale.Category"],"notNullIndices":[0]},{"className":"java.util.Locale","api":"setDefault","signature":"public static void setDefault(Locale newLocale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.util.Locale","api":"setDefault","signature":"public static void setDefault(Locale.Category category, Locale newLocale)","paramTypes":["Locale.Category","Locale"],"notNullIndices":[0,1]},{"className":"java.util.Locale","api":"getISOCountries","signature":"public static Set<String> getISOCountries(Locale.IsoCountryCode type)","paramTypes":["Locale.IsoCountryCode"],"notNullIndices":[0]},{"className":"java.util.Locale","api":"getUnicodeLocaleType","signature":"public String getUnicodeLocaleType(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Locale","api":"forLanguageTag","signature":"public static Locale forLanguageTag(String languageTag)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Locale","api":"getDisplayLanguage","signature":"public String getDisplayLanguage(Locale inLocale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.util.Locale","api":"getDisplayScript","signature":"public String getDisplayScript(Locale inLocale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.util.Locale","api":"getDisplayCountry","signature":"public String getDisplayCountry(Locale inLocale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.util.Locale","api":"getDisplayVariant","signature":"public String getDisplayVariant(Locale inLocale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.util.Locale","api":"getDisplayName","signature":"public String getDisplayName(Locale inLocale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.util.Locale","api":"filter","signature":"public static List<Locale> filter(List<Locale.LanguageRange> priorityList, Collection<Locale> locales, Locale.FilteringMode mode)","paramTypes":["List","Collection","Locale.FilteringMode"],"notNullIndices":[0,1]},{"className":"java.util.Locale","api":"filter","signature":"public static List<Locale> filter(List<Locale.LanguageRange> priorityList, Collection<Locale> locales)","paramTypes":["List","Collection"],"notNullIndices":[0,1]},{"className":"java.util.Locale","api":"filterTags","signature":"public static List<String> filterTags(List<Locale.LanguageRange> priorityList, Collection<String> tags, Locale.FilteringMode mode)","paramTypes":["List","Collection","Locale.FilteringMode"],"notNullIndices":[0,1]},{"className":"java.util.Locale","api":"filterTags","signature":"public static List<String> filterTags(List<Locale.LanguageRange> priorityList, Collection<String> tags)","paramTypes":["List","Collection"],"notNullIndices":[0,1]},{"className":"java.util.Locale","api":"lookup","signature":"public static Locale lookup(List<Locale.LanguageRange> priorityList, Collection<Locale> locales)","paramTypes":["List","Collection"],"notNullIndices":[0]},{"className":"java.util.Locale","api":"lookupTag","signature":"public static String lookupTag(List<Locale.LanguageRange> priorityList, Collection<String> tags)","paramTypes":["List","Collection"],"notNullIndices":[0,1]},{"className":"java.util.LongSummaryStatistics","api":"combine","signature":"public void combine(LongSummaryStatistics other)","paramTypes":["LongSummaryStatistics"],"notNullIndices":[0]},{"className":"java.util.Objects","api":"requireNonNull","signature":"public static <T> T requireNonNull(T obj)","paramTypes":["T"],"notNullIndices":[0]},{"className":"java.util.Objects","api":"requireNonNull","signature":"public static <T> T requireNonNull(T obj, String message)","paramTypes":["T","String"],"notNullIndices":[0]},{"className":"java.util.Objects","api":"requireNonNull","signature":"public static <T> T requireNonNull(T obj, Supplier<String> messageSupplier)","paramTypes":["T","Supplier"],"notNullIndices":[0]},{"className":"java.util.Optional<T>","api":"of","signature":"public static <T> Optional<T> of(T value)","paramTypes":["T"],"notNullIndices":[0]},{"className":"java.util.Optional<T>","api":"filter","signature":"public Optional<T> filter(Predicate<? super T> predicate)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.Optional<T>","api":"map","signature":"public <U> Optional<U> map(Function<? super T,? extends U> mapper)","paramTypes":["Function"],"notNullIndices":[0]},{"className":"java.util.Optional<T>","api":"flatMap","signature":"public <U> Optional<U> flatMap(Function<? super T,? extends Optional<? extends U>> mapper)","paramTypes":["Function>"],"notNullIndices":[0]},{"className":"java.util.Optional<T>","api":"or","signature":"public Optional<T> or(Supplier<? extends Optional<? extends T>> supplier)","paramTypes":["Supplier>"],"notNullIndices":[0]},{"className":"java.util.PrimitiveIterator.OfDouble","api":"forEachRemaining","signature":"default void forEachRemaining(DoubleConsumer action)","paramTypes":["DoubleConsumer"],"notNullIndices":[0]},{"className":"java.util.PrimitiveIterator.OfInt","api":"forEachRemaining","signature":"default void forEachRemaining(IntConsumer action)","paramTypes":["IntConsumer"],"notNullIndices":[0]},{"className":"java.util.PrimitiveIterator.OfLong","api":"forEachRemaining","signature":"default void forEachRemaining(LongConsumer action)","paramTypes":["LongConsumer"],"notNullIndices":[0]},{"className":"java.util.PriorityQueue<E>","api":"PriorityQueue","signature":"public PriorityQueue(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.PriorityQueue<E>","api":"PriorityQueue","signature":"public PriorityQueue(PriorityQueue<? extends E> c)","paramTypes":["PriorityQueue"],"notNullIndices":[0]},{"className":"java.util.PriorityQueue<E>","api":"PriorityQueue","signature":"public PriorityQueue(SortedSet<? extends E> c)","paramTypes":["SortedSet"],"notNullIndices":[0]},{"className":"java.util.PriorityQueue<E>","api":"add","signature":"public boolean add(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.PriorityQueue<E>","api":"offer","signature":"public boolean offer(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.PriorityQueue<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.PriorityQueue<E>","api":"removeIf","signature":"public boolean removeIf(Predicate<? super E> filter)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.PriorityQueue<E>","api":"forEach","signature":"public void forEach(Consumer<? super E> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.Properties","api":"load","signature":"public void load(Reader reader) throws IOException","paramTypes":["Reader"],"notNullIndices":[0]},{"className":"java.util.Properties","api":"load","signature":"public void load(InputStream inStream) throws IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"java.util.Properties","api":"store","signature":"public void store(Writer writer, String comments) throws IOException","paramTypes":["Writer","String"],"notNullIndices":[0]},{"className":"java.util.Properties","api":"store","signature":"public void store(OutputStream out, String comments) throws IOException","paramTypes":["OutputStream","String"],"notNullIndices":[0]},{"className":"java.util.Properties","api":"loadFromXML","signature":"public void loadFromXML(InputStream in) throws IOException, InvalidPropertiesFormatException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"java.util.Properties","api":"storeToXML","signature":"public void storeToXML(OutputStream os, String comment) throws IOException","paramTypes":["OutputStream","String"],"notNullIndices":[0]},{"className":"java.util.Properties","api":"storeToXML","signature":"public void storeToXML(OutputStream os, String comment, String encoding) throws IOException","paramTypes":["OutputStream","String","String"],"notNullIndices":[0,2]},{"className":"java.util.Properties","api":"storeToXML","signature":"public void storeToXML(OutputStream os, String comment, Charset charset) throws IOException","paramTypes":["OutputStream","String","Charset"],"notNullIndices":[0,2]},{"className":"java.util.PropertyPermission","api":"PropertyPermission","signature":"public PropertyPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.util.PropertyResourceBundle","api":"PropertyResourceBundle","signature":"public PropertyResourceBundle(InputStream stream) throws IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"java.util.PropertyResourceBundle","api":"PropertyResourceBundle","signature":"public PropertyResourceBundle(Reader reader) throws IOException","paramTypes":["Reader"],"notNullIndices":[0]},{"className":"java.util.Random","api":"nextBytes","signature":"public void nextBytes(byte[] bytes)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.util.ResourceBundle.Control","api":"getControl","signature":"public static final ResourceBundle.Control getControl(List<String> formats)","paramTypes":["List"],"notNullIndices":[0]},{"className":"java.util.ResourceBundle.Control","api":"getNoFallbackControl","signature":"public static final ResourceBundle.Control getNoFallbackControl(List<String> formats)","paramTypes":["List"],"notNullIndices":[0]},{"className":"java.util.ResourceBundle.Control","api":"getFormats","signature":"public List<String> getFormats(String baseName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.ResourceBundle.Control","api":"getCandidateLocales","signature":"public List<Locale> getCandidateLocales(String baseName, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0,1]},{"className":"java.util.ResourceBundle.Control","api":"getFallbackLocale","signature":"public Locale getFallbackLocale(String baseName, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0,1]},{"className":"java.util.ResourceBundle.Control","api":"newBundle","signature":"public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException","paramTypes":["String","Locale","String","ClassLoader","boolean"],"notNullIndices":[1,2,3]},{"className":"java.util.ResourceBundle.Control","api":"getTimeToLive","signature":"public long getTimeToLive(String baseName, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0,1]},{"className":"java.util.ResourceBundle.Control","api":"needsReload","signature":"public boolean needsReload(String baseName, Locale locale, String format, ClassLoader loader, ResourceBundle bundle, long loadTime)","paramTypes":["String","Locale","String","ClassLoader","ResourceBundle","long"],"notNullIndices":[0,1,2,3,4]},{"className":"java.util.ResourceBundle.Control","api":"toBundleName","signature":"public String toBundleName(String baseName, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0,1]},{"className":"java.util.ResourceBundle.Control","api":"toResourceName","signature":"public final String toResourceName(String bundleName, String suffix)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"java.util.ResourceBundle","api":"getString","signature":"public final String getString(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.ResourceBundle","api":"getStringArray","signature":"public final String[] getStringArray(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.ResourceBundle","api":"getObject","signature":"public final Object getObject(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.ResourceBundle","api":"getBundle","signature":"public static final ResourceBundle getBundle(String baseName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.ResourceBundle","api":"getBundle","signature":"public static final ResourceBundle getBundle(String baseName, ResourceBundle.Control control)","paramTypes":["String","ResourceBundle.Control"],"notNullIndices":[0,1]},{"className":"java.util.ResourceBundle","api":"getBundle","signature":"public static final ResourceBundle getBundle(String baseName, ResourceBundle.Control control)","paramTypes":["String","ResourceBundle.Control"],"notNullIndices":[1]},{"className":"java.util.ResourceBundle","api":"getBundle","signature":"public static final ResourceBundle getBundle(String baseName, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0,1]},{"className":"java.util.ResourceBundle","api":"getBundle","signature":"public static ResourceBundle getBundle(String baseName, Module module)","paramTypes":["String","Module"],"notNullIndices":[0,1]},{"className":"java.util.ResourceBundle","api":"getBundle","signature":"public static ResourceBundle getBundle(String baseName, Locale targetLocale, Module module)","paramTypes":["String","Locale","Module"],"notNullIndices":[0,1,2]},{"className":"java.util.ResourceBundle","api":"getBundle","signature":"public static final ResourceBundle getBundle(String baseName, Locale targetLocale, ResourceBundle.Control control)","paramTypes":["String","Locale","ResourceBundle.Control"],"notNullIndices":[0,2]},{"className":"java.util.ResourceBundle","api":"getBundle","signature":"public static final ResourceBundle getBundle(String baseName, Locale targetLocale, ResourceBundle.Control control)","paramTypes":["String","Locale","ResourceBundle.Control"],"notNullIndices":[2]},{"className":"java.util.ResourceBundle","api":"getBundle","signature":"public static ResourceBundle getBundle(String baseName, Locale locale, ClassLoader loader)","paramTypes":["String","Locale","ClassLoader"],"notNullIndices":[0,1,2]},{"className":"java.util.ResourceBundle","api":"getBundle","signature":"public static ResourceBundle getBundle(String baseName, Locale targetLocale, ClassLoader loader, ResourceBundle.Control control)","paramTypes":["String","Locale","ClassLoader","ResourceBundle.Control"],"notNullIndices":[0,1,2,3]},{"className":"java.util.ResourceBundle","api":"getBundle","signature":"public static ResourceBundle getBundle(String baseName, Locale targetLocale, ClassLoader loader, ResourceBundle.Control control)","paramTypes":["String","Locale","ClassLoader","ResourceBundle.Control"],"notNullIndices":[3]},{"className":"java.util.ResourceBundle","api":"clearCache","signature":"public static final void clearCache(ClassLoader loader)","paramTypes":["ClassLoader"],"notNullIndices":[0]},{"className":"java.util.ResourceBundle","api":"handleGetObject","signature":"protected abstract Object handleGetObject(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.ResourceBundle","api":"containsKey","signature":"public boolean containsKey(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Scanner","api":"findAll","signature":"public Stream<MatchResult> findAll(Pattern pattern)","paramTypes":["Pattern"],"notNullIndices":[0]},{"className":"java.util.Scanner","api":"findAll","signature":"public Stream<MatchResult> findAll(String patString)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Set<E>","api":"toArray","signature":"<T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.Set<E>","api":"of","signature":"static <E> Set<E> of(E e1)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.Set<E>","api":"of","signature":"@SafeVarargs static <E> Set<E> of(E... elements)","paramTypes":["E..."],"notNullIndices":[0]},{"className":"java.util.Set<E>","api":"copyOf","signature":"static <E> Set<E> copyOf(Collection<? extends E> coll)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.Spliterator<T>","api":"tryAdvance","signature":"boolean tryAdvance(Consumer<? super T> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.Spliterator<T>","api":"forEachRemaining","signature":"default void forEachRemaining(Consumer<? super T> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliterator","signature":"public static <T> Spliterator<T> spliterator(Object[] array, int additionalCharacteristics)","paramTypes":["Object[]","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliterator","signature":"public static <T> Spliterator<T> spliterator(Object[] array, int fromIndex, int toIndex, int additionalCharacteristics)","paramTypes":["Object[]","int","int","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliterator","signature":"public static Spliterator.OfInt spliterator(int[] array, int additionalCharacteristics)","paramTypes":["int[]","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliterator","signature":"public static Spliterator.OfInt spliterator(int[] array, int fromIndex, int toIndex, int additionalCharacteristics)","paramTypes":["int[]","int","int","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliterator","signature":"public static Spliterator.OfLong spliterator(long[] array, int additionalCharacteristics)","paramTypes":["long[]","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliterator","signature":"public static Spliterator.OfLong spliterator(long[] array, int fromIndex, int toIndex, int additionalCharacteristics)","paramTypes":["long[]","int","int","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliterator","signature":"public static Spliterator.OfDouble spliterator(double[] array, int additionalCharacteristics)","paramTypes":["double[]","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliterator","signature":"public static Spliterator.OfDouble spliterator(double[] array, int fromIndex, int toIndex, int additionalCharacteristics)","paramTypes":["double[]","int","int","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliterator","signature":"public static <T> Spliterator<T> spliterator(Iterator<? extends T> iterator, long size, int characteristics)","paramTypes":["Iterator","long","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliteratorUnknownSize","signature":"public static <T> Spliterator<T> spliteratorUnknownSize(Iterator<? extends T> iterator, int characteristics)","paramTypes":["Iterator","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliterator","signature":"public static Spliterator.OfInt spliterator(PrimitiveIterator.OfInt iterator, long size, int characteristics)","paramTypes":["PrimitiveIterator.OfInt","long","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliteratorUnknownSize","signature":"public static Spliterator.OfInt spliteratorUnknownSize(PrimitiveIterator.OfInt iterator, int characteristics)","paramTypes":["PrimitiveIterator.OfInt","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliterator","signature":"public static Spliterator.OfLong spliterator(PrimitiveIterator.OfLong iterator, long size, int characteristics)","paramTypes":["PrimitiveIterator.OfLong","long","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliteratorUnknownSize","signature":"public static Spliterator.OfLong spliteratorUnknownSize(PrimitiveIterator.OfLong iterator, int characteristics)","paramTypes":["PrimitiveIterator.OfLong","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliterator","signature":"public static Spliterator.OfDouble spliterator(PrimitiveIterator.OfDouble iterator, long size, int characteristics)","paramTypes":["PrimitiveIterator.OfDouble","long","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"spliteratorUnknownSize","signature":"public static Spliterator.OfDouble spliteratorUnknownSize(PrimitiveIterator.OfDouble iterator, int characteristics)","paramTypes":["PrimitiveIterator.OfDouble","int"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"iterator","signature":"public static <T> Iterator<T> iterator(Spliterator<? extends T> spliterator)","paramTypes":["Spliterator"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"iterator","signature":"public static PrimitiveIterator.OfInt iterator(Spliterator.OfInt spliterator)","paramTypes":["Spliterator.OfInt"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"iterator","signature":"public static PrimitiveIterator.OfLong iterator(Spliterator.OfLong spliterator)","paramTypes":["Spliterator.OfLong"],"notNullIndices":[0]},{"className":"java.util.Spliterators","api":"iterator","signature":"public static PrimitiveIterator.OfDouble iterator(Spliterator.OfDouble spliterator)","paramTypes":["Spliterator.OfDouble"],"notNullIndices":[0]},{"className":"java.util.SplittableRandom","api":"nextBytes","signature":"public void nextBytes(byte[] bytes)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.util.StringJoiner","api":"StringJoiner","signature":"public StringJoiner(CharSequence delimiter)","paramTypes":["CharSequence"],"notNullIndices":[0]},{"className":"java.util.StringJoiner","api":"StringJoiner","signature":"public StringJoiner(CharSequence delimiter, CharSequence prefix, CharSequence suffix)","paramTypes":["CharSequence","CharSequence","CharSequence"],"notNullIndices":[0,1,2]},{"className":"java.util.StringJoiner","api":"setEmptyValue","signature":"public StringJoiner setEmptyValue(CharSequence emptyValue)","paramTypes":["CharSequence"],"notNullIndices":[0]},{"className":"java.util.StringJoiner","api":"merge","signature":"public StringJoiner merge(StringJoiner other)","paramTypes":["StringJoiner"],"notNullIndices":[0]},{"className":"java.util.StringTokenizer","api":"StringTokenizer","signature":"public StringTokenizer(String str, String delim, boolean returnDelims)","paramTypes":["String","String","boolean"],"notNullIndices":[0]},{"className":"java.util.StringTokenizer","api":"StringTokenizer","signature":"public StringTokenizer(String str, String delim)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.util.StringTokenizer","api":"StringTokenizer","signature":"public StringTokenizer(String str)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.StringTokenizer","api":"nextToken","signature":"public String nextToken(String delim)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.TimeZone","api":"getDisplayName","signature":"public final String getDisplayName(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.util.TimeZone","api":"getDisplayName","signature":"public String getDisplayName(boolean daylight, int style, Locale locale)","paramTypes":["boolean","int","Locale"],"notNullIndices":[2]},{"className":"java.util.TimeZone","api":"getTimeZone","signature":"public static TimeZone getTimeZone(ZoneId zoneId)","paramTypes":["ZoneId"],"notNullIndices":[0]},{"className":"java.util.Timer","api":"Timer","signature":"public Timer(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.Timer","api":"Timer","signature":"public Timer(String name, boolean isDaemon)","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"java.util.Timer","api":"schedule","signature":"public void schedule(TimerTask task, long delay)","paramTypes":["TimerTask","long"],"notNullIndices":[0]},{"className":"java.util.Timer","api":"schedule","signature":"public void schedule(TimerTask task, Date time)","paramTypes":["TimerTask","Date"],"notNullIndices":[0,1]},{"className":"java.util.Timer","api":"schedule","signature":"public void schedule(TimerTask task, long delay, long period)","paramTypes":["TimerTask","long","long"],"notNullIndices":[0]},{"className":"java.util.Timer","api":"schedule","signature":"public void schedule(TimerTask task, Date firstTime, long period)","paramTypes":["TimerTask","Date","long"],"notNullIndices":[0,1]},{"className":"java.util.Timer","api":"scheduleAtFixedRate","signature":"public void scheduleAtFixedRate(TimerTask task, long delay, long period)","paramTypes":["TimerTask","long","long"],"notNullIndices":[0]},{"className":"java.util.Timer","api":"scheduleAtFixedRate","signature":"public void scheduleAtFixedRate(TimerTask task, Date firstTime, long period)","paramTypes":["TimerTask","Date","long"],"notNullIndices":[0,1]},{"className":"java.util.TreeSet<E>","api":"TreeSet","signature":"public TreeSet(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.TreeSet<E>","api":"TreeSet","signature":"public TreeSet(SortedSet<E> s)","paramTypes":["SortedSet"],"notNullIndices":[0]},{"className":"java.util.Vector<E>","api":"Vector","signature":"public Vector(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.Vector<E>","api":"copyInto","signature":"public void copyInto(Object[] anArray)","paramTypes":["Object[]"],"notNullIndices":[0]},{"className":"java.util.Vector<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.Vector<E>","api":"containsAll","signature":"public boolean containsAll(Collection<?> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.Vector<E>","api":"addAll","signature":"public boolean addAll(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.Vector<E>","api":"removeIf","signature":"public boolean removeIf(Predicate<? super E> filter)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.Vector<E>","api":"forEach","signature":"public void forEach(Consumer<? super E> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.Vector<E>","api":"replaceAll","signature":"public void replaceAll(UnaryOperator<E> operator)","paramTypes":["UnaryOperator"],"notNullIndices":[0]},{"className":"java.util.concurrent.AbstractExecutorService","api":"submit","signature":"public Future<?> submit(Runnable task)","paramTypes":["Runnable"],"notNullIndices":[0]},{"className":"java.util.concurrent.AbstractExecutorService","api":"submit","signature":"public <T> Future<T> submit(Runnable task, T result)","paramTypes":["Runnable","T"],"notNullIndices":[0]},{"className":"java.util.concurrent.AbstractExecutorService","api":"submit","signature":"public <T> Future<T> submit(Callable<T> task)","paramTypes":["Callable"],"notNullIndices":[0]},{"className":"java.util.concurrent.ArrayBlockingQueue<E>","api":"add","signature":"public boolean add(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ArrayBlockingQueue<E>","api":"offer","signature":"public boolean offer(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ArrayBlockingQueue<E>","api":"put","signature":"public void put(E e) throws InterruptedException","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ArrayBlockingQueue<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.concurrent.ArrayBlockingQueue<E>","api":"drainTo","signature":"public int drainTo(Collection<? super E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.ArrayBlockingQueue<E>","api":"forEach","signature":"public void forEach(Consumer<? super E> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.concurrent.ArrayBlockingQueue<E>","api":"removeIf","signature":"public boolean removeIf(Predicate<? super E> filter)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingDeque<E>","api":"addFirst","signature":"void addFirst(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingDeque<E>","api":"addLast","signature":"void addLast(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingDeque<E>","api":"offerFirst","signature":"boolean offerFirst(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingDeque<E>","api":"offerLast","signature":"boolean offerLast(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingDeque<E>","api":"putFirst","signature":"void putFirst(E e) throws InterruptedException","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingDeque<E>","api":"putLast","signature":"void putLast(E e) throws InterruptedException","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingDeque<E>","api":"removeFirstOccurrence","signature":"boolean removeFirstOccurrence(Object o)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingDeque<E>","api":"removeLastOccurrence","signature":"boolean removeLastOccurrence(Object o)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingDeque<E>","api":"add","signature":"boolean add(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingDeque<E>","api":"offer","signature":"boolean offer(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingDeque<E>","api":"put","signature":"void put(E e) throws InterruptedException","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingDeque<E>","api":"remove","signature":"boolean remove(Object o)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingDeque<E>","api":"contains","signature":"boolean contains(Object o)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingDeque<E>","api":"push","signature":"void push(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingQueue<E>","api":"add","signature":"boolean add(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingQueue<E>","api":"offer","signature":"boolean offer(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingQueue<E>","api":"put","signature":"void put(E e) throws InterruptedException","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingQueue<E>","api":"remove","signature":"boolean remove(Object o)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingQueue<E>","api":"contains","signature":"boolean contains(Object o)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.util.concurrent.BlockingQueue<E>","api":"drainTo","signature":"int drainTo(Collection<? super E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.CompletableFuture<T>","api":"allOf","signature":"public static CompletableFuture<Void> allOf(CompletableFuture<?>... cfs)","paramTypes":["CompletableFuture..."],"notNullIndices":[0]},{"className":"java.util.concurrent.CompletableFuture<T>","api":"anyOf","signature":"public static CompletableFuture<Object> anyOf(CompletableFuture<?>... cfs)","paramTypes":["CompletableFuture..."],"notNullIndices":[0]},{"className":"java.util.concurrent.CompletableFuture<T>","api":"obtrudeException","signature":"public void obtrudeException(Throwable ex)","paramTypes":["Throwable"],"notNullIndices":[0]},{"className":"java.util.concurrent.CompletionService<V>","api":"submit","signature":"Future<V> submit(Callable<V> task)","paramTypes":["Callable"],"notNullIndices":[0]},{"className":"java.util.concurrent.CompletionService<V>","api":"submit","signature":"Future<V> submit(Runnable task, V result)","paramTypes":["Runnable","V"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedDeque<E>","api":"ConcurrentLinkedDeque","signature":"public ConcurrentLinkedDeque(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedDeque<E>","api":"addFirst","signature":"public void addFirst(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedDeque<E>","api":"addLast","signature":"public void addLast(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedDeque<E>","api":"offerFirst","signature":"public boolean offerFirst(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedDeque<E>","api":"offerLast","signature":"public boolean offerLast(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedDeque<E>","api":"offer","signature":"public boolean offer(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedDeque<E>","api":"add","signature":"public boolean add(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedDeque<E>","api":"removeFirstOccurrence","signature":"public boolean removeFirstOccurrence(Object o)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedDeque<E>","api":"removeLastOccurrence","signature":"public boolean removeLastOccurrence(Object o)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedDeque<E>","api":"remove","signature":"public boolean remove(Object o)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedDeque<E>","api":"addAll","signature":"public boolean addAll(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedDeque<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedDeque<E>","api":"removeIf","signature":"public boolean removeIf(Predicate<? super E> filter)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedDeque<E>","api":"forEach","signature":"public void forEach(Consumer<? super E> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedQueue<E>","api":"ConcurrentLinkedQueue","signature":"public ConcurrentLinkedQueue(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedQueue<E>","api":"add","signature":"public boolean add(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedQueue<E>","api":"offer","signature":"public boolean offer(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedQueue<E>","api":"addAll","signature":"public boolean addAll(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedQueue<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedQueue<E>","api":"removeIf","signature":"public boolean removeIf(Predicate<? super E> filter)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentLinkedQueue<E>","api":"forEach","signature":"public void forEach(Consumer<? super E> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"ConcurrentSkipListSet","signature":"public ConcurrentSkipListSet(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"ConcurrentSkipListSet","signature":"public ConcurrentSkipListSet(SortedSet<E> s)","paramTypes":["SortedSet"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"contains","signature":"public boolean contains(Object o)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"add","signature":"public boolean add(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"remove","signature":"public boolean remove(Object o)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"removeAll","signature":"public boolean removeAll(Collection<?> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"lower","signature":"public E lower(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"floor","signature":"public E floor(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"ceiling","signature":"public E ceiling(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"higher","signature":"public E higher(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"subSet","signature":"public NavigableSet<E> subSet(E fromElement, boolean fromInclusive, E toElement, boolean toInclusive)","paramTypes":["E","boolean","E","boolean"],"notNullIndices":[0,2]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"headSet","signature":"public NavigableSet<E> headSet(E toElement, boolean inclusive)","paramTypes":["E","boolean"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"tailSet","signature":"public NavigableSet<E> tailSet(E fromElement, boolean inclusive)","paramTypes":["E","boolean"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"subSet","signature":"public NavigableSet<E> subSet(E fromElement, E toElement)","paramTypes":["E","E"],"notNullIndices":[0,1]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"headSet","signature":"public NavigableSet<E> headSet(E toElement)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.ConcurrentSkipListSet<E>","api":"tailSet","signature":"public NavigableSet<E> tailSet(E fromElement)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.CopyOnWriteArrayList<E>","api":"CopyOnWriteArrayList","signature":"public CopyOnWriteArrayList(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.CopyOnWriteArrayList<E>","api":"CopyOnWriteArrayList","signature":"public CopyOnWriteArrayList(E[] toCopyIn)","paramTypes":["E[]"],"notNullIndices":[0]},{"className":"java.util.concurrent.CopyOnWriteArrayList<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.concurrent.CopyOnWriteArrayList<E>","api":"containsAll","signature":"public boolean containsAll(Collection<?> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.CopyOnWriteArrayList<E>","api":"addAllAbsent","signature":"public int addAllAbsent(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.CopyOnWriteArrayList<E>","api":"addAll","signature":"public boolean addAll(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.CopyOnWriteArrayList<E>","api":"forEach","signature":"public void forEach(Consumer<? super E> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.concurrent.CopyOnWriteArrayList<E>","api":"removeIf","signature":"public boolean removeIf(Predicate<? super E> filter)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.concurrent.CopyOnWriteArraySet<E>","api":"CopyOnWriteArraySet","signature":"public CopyOnWriteArraySet(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.CopyOnWriteArraySet<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.concurrent.CopyOnWriteArraySet<E>","api":"containsAll","signature":"public boolean containsAll(Collection<?> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.CopyOnWriteArraySet<E>","api":"addAll","signature":"public boolean addAll(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.CopyOnWriteArraySet<E>","api":"removeIf","signature":"public boolean removeIf(Predicate<? super E> filter)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.concurrent.CopyOnWriteArraySet<E>","api":"forEach","signature":"public void forEach(Consumer<? super E> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.concurrent.DelayQueue<E>","api":"DelayQueue","signature":"public DelayQueue(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.DelayQueue<E>","api":"add","signature":"public boolean add(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.DelayQueue<E>","api":"offer","signature":"public boolean offer(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.DelayQueue<E>","api":"put","signature":"public void put(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.DelayQueue<E>","api":"drainTo","signature":"public int drainTo(Collection<? super E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.DelayQueue<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.concurrent.Executor","api":"execute","signature":"void execute(Runnable command)","paramTypes":["Runnable"],"notNullIndices":[0]},{"className":"java.util.concurrent.ExecutorCompletionService<V>","api":"ExecutorCompletionService","signature":"public ExecutorCompletionService(Executor executor)","paramTypes":["Executor"],"notNullIndices":[0]},{"className":"java.util.concurrent.ExecutorCompletionService<V>","api":"ExecutorCompletionService","signature":"public ExecutorCompletionService(Executor executor, BlockingQueue<Future<V>> completionQueue)","paramTypes":["Executor","BlockingQueue>"],"notNullIndices":[0,1]},{"className":"java.util.concurrent.ExecutorCompletionService<V>","api":"submit","signature":"public Future<V> submit(Callable<V> task)","paramTypes":["Callable"],"notNullIndices":[0]},{"className":"java.util.concurrent.ExecutorCompletionService<V>","api":"submit","signature":"public Future<V> submit(Runnable task, V result)","paramTypes":["Runnable","V"],"notNullIndices":[0]},{"className":"java.util.concurrent.ExecutorService","api":"submit","signature":"<T> Future<T> submit(Callable<T> task)","paramTypes":["Callable"],"notNullIndices":[0]},{"className":"java.util.concurrent.ExecutorService","api":"submit","signature":"<T> Future<T> submit(Runnable task, T result)","paramTypes":["Runnable","T"],"notNullIndices":[0]},{"className":"java.util.concurrent.ExecutorService","api":"submit","signature":"Future<?> submit(Runnable task)","paramTypes":["Runnable"],"notNullIndices":[0]},{"className":"java.util.concurrent.ExecutorService","api":"invokeAll","signature":"<T> List<Future<T>> invokeAll(Collection<? extends Callable<T>> tasks) throws InterruptedException","paramTypes":["Collection>"],"notNullIndices":[0]},{"className":"java.util.concurrent.ExecutorService","api":"invokeAll","signature":"<T> List<Future<T>> invokeAll(Collection<? extends Callable<T>> tasks, long timeout, TimeUnit unit) throws InterruptedException","paramTypes":["Collection>","long","TimeUnit"],"notNullIndices":[0,2]},{"className":"java.util.concurrent.ExecutorService","api":"invokeAny","signature":"<T> T invokeAny(Collection<? extends Callable<T>> tasks) throws InterruptedException, ExecutionException","paramTypes":["Collection>"],"notNullIndices":[0]},{"className":"java.util.concurrent.ExecutorService","api":"invokeAny","signature":"<T> T invokeAny(Collection<? extends Callable<T>> tasks, long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException","paramTypes":["Collection>","long","TimeUnit"],"notNullIndices":[0,2]},{"className":"java.util.concurrent.Executors","api":"newFixedThreadPool","signature":"public static ExecutorService newFixedThreadPool(int nThreads, ThreadFactory threadFactory)","paramTypes":["int","ThreadFactory"],"notNullIndices":[1]},{"className":"java.util.concurrent.Executors","api":"newSingleThreadExecutor","signature":"public static ExecutorService newSingleThreadExecutor(ThreadFactory threadFactory)","paramTypes":["ThreadFactory"],"notNullIndices":[0]},{"className":"java.util.concurrent.Executors","api":"newCachedThreadPool","signature":"public static ExecutorService newCachedThreadPool(ThreadFactory threadFactory)","paramTypes":["ThreadFactory"],"notNullIndices":[0]},{"className":"java.util.concurrent.Executors","api":"newSingleThreadScheduledExecutor","signature":"public static ScheduledExecutorService newSingleThreadScheduledExecutor(ThreadFactory threadFactory)","paramTypes":["ThreadFactory"],"notNullIndices":[0]},{"className":"java.util.concurrent.Executors","api":"newScheduledThreadPool","signature":"public static ScheduledExecutorService newScheduledThreadPool(int corePoolSize, ThreadFactory threadFactory)","paramTypes":["int","ThreadFactory"],"notNullIndices":[1]},{"className":"java.util.concurrent.Executors","api":"unconfigurableExecutorService","signature":"public static ExecutorService unconfigurableExecutorService(ExecutorService executor)","paramTypes":["ExecutorService"],"notNullIndices":[0]},{"className":"java.util.concurrent.Executors","api":"unconfigurableScheduledExecutorService","signature":"public static ScheduledExecutorService unconfigurableScheduledExecutorService(ScheduledExecutorService executor)","paramTypes":["ScheduledExecutorService"],"notNullIndices":[0]},{"className":"java.util.concurrent.Executors","api":"callable","signature":"public static <T> Callable<T> callable(Runnable task, T result)","paramTypes":["Runnable","T"],"notNullIndices":[0]},{"className":"java.util.concurrent.Executors","api":"callable","signature":"public static Callable<Object> callable(Runnable task)","paramTypes":["Runnable"],"notNullIndices":[0]},{"className":"java.util.concurrent.Executors","api":"callable","signature":"public static Callable<Object> callable(PrivilegedAction<?> action)","paramTypes":["PrivilegedAction"],"notNullIndices":[0]},{"className":"java.util.concurrent.Executors","api":"callable","signature":"public static Callable<Object> callable(PrivilegedExceptionAction<?> action)","paramTypes":["PrivilegedExceptionAction"],"notNullIndices":[0]},{"className":"java.util.concurrent.Executors","api":"privilegedCallable","signature":"public static <T> Callable<T> privilegedCallable(Callable<T> callable)","paramTypes":["Callable"],"notNullIndices":[0]},{"className":"java.util.concurrent.Executors","api":"privilegedCallableUsingCurrentClassLoader","signature":"public static <T> Callable<T> privilegedCallableUsingCurrentClassLoader(Callable<T> callable)","paramTypes":["Callable"],"notNullIndices":[0]},{"className":"java.util.concurrent.Flow.Publisher<T>","api":"subscribe","signature":"void subscribe(Flow.Subscriber<? super T> subscriber)","paramTypes":["Flow.Subscriber"],"notNullIndices":[0]},{"className":"java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory","api":"newThread","signature":"ForkJoinWorkerThread newThread(ForkJoinPool pool)","paramTypes":["ForkJoinPool"],"notNullIndices":[0]},{"className":"java.util.concurrent.ForkJoinPool","api":"ForkJoinPool","signature":"public ForkJoinPool(int parallelism, ForkJoinPool.ForkJoinWorkerThreadFactory factory, Thread.UncaughtExceptionHandler handler, boolean asyncMode)","paramTypes":["int","ForkJoinPool.ForkJoinWorkerThreadFactory","Thread.UncaughtExceptionHandler","boolean"],"notNullIndices":[1]},{"className":"java.util.concurrent.ForkJoinPool","api":"ForkJoinPool","signature":"public ForkJoinPool(int parallelism, ForkJoinPool.ForkJoinWorkerThreadFactory factory, Thread.UncaughtExceptionHandler handler, boolean asyncMode, int corePoolSize, int maximumPoolSize, int minimumRunnable, Predicate<? super ForkJoinPool> saturate, long keepAliveTime, TimeUnit unit)","paramTypes":["int","ForkJoinPool.ForkJoinWorkerThreadFactory","Thread.UncaughtExceptionHandler","boolean","int","int","int","Predicate","long","TimeUnit"],"notNullIndices":[1]},{"className":"java.util.concurrent.ForkJoinPool","api":"invoke","signature":"public <T> T invoke(ForkJoinTask<T> task)","paramTypes":["ForkJoinTask"],"notNullIndices":[0]},{"className":"java.util.concurrent.ForkJoinPool","api":"execute","signature":"public void execute(ForkJoinTask<?> task)","paramTypes":["ForkJoinTask"],"notNullIndices":[0]},{"className":"java.util.concurrent.ForkJoinPool","api":"execute","signature":"public void execute(Runnable task)","paramTypes":["Runnable"],"notNullIndices":[0]},{"className":"java.util.concurrent.ForkJoinPool","api":"submit","signature":"public <T> ForkJoinTask<T> submit(ForkJoinTask<T> task)","paramTypes":["ForkJoinTask"],"notNullIndices":[0]},{"className":"java.util.concurrent.ForkJoinPool","api":"submit","signature":"public <T> ForkJoinTask<T> submit(Callable<T> task)","paramTypes":["Callable"],"notNullIndices":[0]},{"className":"java.util.concurrent.ForkJoinPool","api":"submit","signature":"public <T> ForkJoinTask<T> submit(Runnable task, T result)","paramTypes":["Runnable","T"],"notNullIndices":[0]},{"className":"java.util.concurrent.ForkJoinPool","api":"submit","signature":"public ForkJoinTask<?> submit(Runnable task)","paramTypes":["Runnable"],"notNullIndices":[0]},{"className":"java.util.concurrent.ForkJoinPool","api":"invokeAll","signature":"public <T> List<Future<T>> invokeAll(Collection<? extends Callable<T>> tasks)","paramTypes":["Collection>"],"notNullIndices":[0]},{"className":"java.util.concurrent.ForkJoinTask<V>","api":"invokeAll","signature":"public static void invokeAll(ForkJoinTask<?>... tasks)","paramTypes":["ForkJoinTask..."],"notNullIndices":[0]},{"className":"java.util.concurrent.ForkJoinTask<V>","api":"invokeAll","signature":"public static <T extends ForkJoinTask<?>> Collection<T> invokeAll(Collection<T> tasks)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.ForkJoinWorkerThread","api":"ForkJoinWorkerThread","signature":"protected ForkJoinWorkerThread(ForkJoinPool pool)","paramTypes":["ForkJoinPool"],"notNullIndices":[0]},{"className":"java.util.concurrent.FutureTask<V>","api":"FutureTask","signature":"public FutureTask(Callable<V> callable)","paramTypes":["Callable"],"notNullIndices":[0]},{"className":"java.util.concurrent.FutureTask<V>","api":"FutureTask","signature":"public FutureTask(Runnable runnable, V result)","paramTypes":["Runnable","V"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"LinkedBlockingDeque","signature":"public LinkedBlockingDeque(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"addFirst","signature":"public void addFirst(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"addLast","signature":"public void addLast(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"offerFirst","signature":"public boolean offerFirst(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"offerLast","signature":"public boolean offerLast(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"putFirst","signature":"public void putFirst(E e) throws InterruptedException","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"putLast","signature":"public void putLast(E e) throws InterruptedException","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"add","signature":"public boolean add(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"offer","signature":"public boolean offer(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"put","signature":"public void put(E e) throws InterruptedException","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"drainTo","signature":"public int drainTo(Collection<? super E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"push","signature":"public void push(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"addAll","signature":"public boolean addAll(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"forEach","signature":"public void forEach(Consumer<? super E> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingDeque<E>","api":"removeIf","signature":"public boolean removeIf(Predicate<? super E> filter)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingQueue<E>","api":"LinkedBlockingQueue","signature":"public LinkedBlockingQueue(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingQueue<E>","api":"put","signature":"public void put(E e) throws InterruptedException","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingQueue<E>","api":"offer","signature":"public boolean offer(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingQueue<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingQueue<E>","api":"drainTo","signature":"public int drainTo(Collection<? super E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingQueue<E>","api":"forEach","signature":"public void forEach(Consumer<? super E> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedBlockingQueue<E>","api":"removeIf","signature":"public boolean removeIf(Predicate<? super E> filter)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedTransferQueue<E>","api":"LinkedTransferQueue","signature":"public LinkedTransferQueue(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedTransferQueue<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedTransferQueue<E>","api":"put","signature":"public void put(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedTransferQueue<E>","api":"offer","signature":"public boolean offer(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedTransferQueue<E>","api":"add","signature":"public boolean add(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedTransferQueue<E>","api":"tryTransfer","signature":"public boolean tryTransfer(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedTransferQueue<E>","api":"transfer","signature":"public void transfer(E e) throws InterruptedException","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedTransferQueue<E>","api":"drainTo","signature":"public int drainTo(Collection<? super E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedTransferQueue<E>","api":"removeIf","signature":"public boolean removeIf(Predicate<? super E> filter)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.concurrent.LinkedTransferQueue<E>","api":"forEach","signature":"public void forEach(Consumer<? super E> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.concurrent.PriorityBlockingQueue<E>","api":"PriorityBlockingQueue","signature":"public PriorityBlockingQueue(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.PriorityBlockingQueue<E>","api":"add","signature":"public boolean add(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.PriorityBlockingQueue<E>","api":"offer","signature":"public boolean offer(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.PriorityBlockingQueue<E>","api":"put","signature":"public void put(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.PriorityBlockingQueue<E>","api":"drainTo","signature":"public int drainTo(Collection<? super E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.PriorityBlockingQueue<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.concurrent.PriorityBlockingQueue<E>","api":"removeIf","signature":"public boolean removeIf(Predicate<? super E> filter)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.concurrent.PriorityBlockingQueue<E>","api":"forEach","signature":"public void forEach(Consumer<? super E> action)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.concurrent.ScheduledExecutorService","api":"schedule","signature":"ScheduledFuture<?> schedule(Runnable command, long delay, TimeUnit unit)","paramTypes":["Runnable","long","TimeUnit"],"notNullIndices":[0,2]},{"className":"java.util.concurrent.ScheduledExecutorService","api":"schedule","signature":"<V> ScheduledFuture<V> schedule(Callable<V> callable, long delay, TimeUnit unit)","paramTypes":["Callable","long","TimeUnit"],"notNullIndices":[0,2]},{"className":"java.util.concurrent.ScheduledExecutorService","api":"scheduleAtFixedRate","signature":"ScheduledFuture<?> scheduleAtFixedRate(Runnable command, long initialDelay, long period, TimeUnit unit)","paramTypes":["Runnable","long","long","TimeUnit"],"notNullIndices":[0,3]},{"className":"java.util.concurrent.ScheduledExecutorService","api":"scheduleWithFixedDelay","signature":"ScheduledFuture<?> scheduleWithFixedDelay(Runnable command, long initialDelay, long delay, TimeUnit unit)","paramTypes":["Runnable","long","long","TimeUnit"],"notNullIndices":[0,3]},{"className":"java.util.concurrent.ScheduledThreadPoolExecutor","api":"ScheduledThreadPoolExecutor","signature":"public ScheduledThreadPoolExecutor(int corePoolSize, ThreadFactory threadFactory)","paramTypes":["int","ThreadFactory"],"notNullIndices":[1]},{"className":"java.util.concurrent.ScheduledThreadPoolExecutor","api":"ScheduledThreadPoolExecutor","signature":"public ScheduledThreadPoolExecutor(int corePoolSize, RejectedExecutionHandler handler)","paramTypes":["int","RejectedExecutionHandler"],"notNullIndices":[1]},{"className":"java.util.concurrent.ScheduledThreadPoolExecutor","api":"ScheduledThreadPoolExecutor","signature":"public ScheduledThreadPoolExecutor(int corePoolSize, ThreadFactory threadFactory, RejectedExecutionHandler handler)","paramTypes":["int","ThreadFactory","RejectedExecutionHandler"],"notNullIndices":[1,2]},{"className":"java.util.concurrent.ScheduledThreadPoolExecutor","api":"schedule","signature":"public ScheduledFuture<?> schedule(Runnable command, long delay, TimeUnit unit)","paramTypes":["Runnable","long","TimeUnit"],"notNullIndices":[0,2]},{"className":"java.util.concurrent.ScheduledThreadPoolExecutor","api":"schedule","signature":"public <V> ScheduledFuture<V> schedule(Callable<V> callable, long delay, TimeUnit unit)","paramTypes":["Callable","long","TimeUnit"],"notNullIndices":[0,2]},{"className":"java.util.concurrent.ScheduledThreadPoolExecutor","api":"scheduleAtFixedRate","signature":"public ScheduledFuture<?> scheduleAtFixedRate(Runnable command, long initialDelay, long period, TimeUnit unit)","paramTypes":["Runnable","long","long","TimeUnit"],"notNullIndices":[0,3]},{"className":"java.util.concurrent.ScheduledThreadPoolExecutor","api":"scheduleWithFixedDelay","signature":"public ScheduledFuture<?> scheduleWithFixedDelay(Runnable command, long initialDelay, long delay, TimeUnit unit)","paramTypes":["Runnable","long","long","TimeUnit"],"notNullIndices":[0,3]},{"className":"java.util.concurrent.ScheduledThreadPoolExecutor","api":"execute","signature":"public void execute(Runnable command)","paramTypes":["Runnable"],"notNullIndices":[0]},{"className":"java.util.concurrent.ScheduledThreadPoolExecutor","api":"submit","signature":"public Future<?> submit(Runnable task)","paramTypes":["Runnable"],"notNullIndices":[0]},{"className":"java.util.concurrent.ScheduledThreadPoolExecutor","api":"submit","signature":"public <T> Future<T> submit(Runnable task, T result)","paramTypes":["Runnable","T"],"notNullIndices":[0]},{"className":"java.util.concurrent.ScheduledThreadPoolExecutor","api":"submit","signature":"public <T> Future<T> submit(Callable<T> task)","paramTypes":["Callable"],"notNullIndices":[0]},{"className":"java.util.concurrent.SubmissionPublisher<T>","api":"SubmissionPublisher","signature":"public SubmissionPublisher(Executor executor, int maxBufferCapacity, BiConsumer<? super Flow.Subscriber<? super T>,? super Throwable> handler)","paramTypes":["Executor","int","BiConsumer,?"],"notNullIndices":[0]},{"className":"java.util.concurrent.SubmissionPublisher<T>","api":"SubmissionPublisher","signature":"public SubmissionPublisher(Executor executor, int maxBufferCapacity)","paramTypes":["Executor","int"],"notNullIndices":[0]},{"className":"java.util.concurrent.SubmissionPublisher<T>","api":"subscribe","signature":"public void subscribe(Flow.Subscriber<? super T> subscriber)","paramTypes":["Flow.Subscriber"],"notNullIndices":[0]},{"className":"java.util.concurrent.SubmissionPublisher<T>","api":"submit","signature":"public int submit(T item)","paramTypes":["T"],"notNullIndices":[0]},{"className":"java.util.concurrent.SubmissionPublisher<T>","api":"offer","signature":"public int offer(T item, BiPredicate<Flow.Subscriber<? super T>,? super T> onDrop)","paramTypes":["T","BiPredicate,?"],"notNullIndices":[0]},{"className":"java.util.concurrent.SubmissionPublisher<T>","api":"offer","signature":"public int offer(T item, long timeout, TimeUnit unit, BiPredicate<Flow.Subscriber<? super T>,? super T> onDrop)","paramTypes":["T","long","TimeUnit","BiPredicate,?"],"notNullIndices":[0]},{"className":"java.util.concurrent.SubmissionPublisher<T>","api":"closeExceptionally","signature":"public void closeExceptionally(Throwable error)","paramTypes":["Throwable"],"notNullIndices":[0]},{"className":"java.util.concurrent.SubmissionPublisher<T>","api":"isSubscribed","signature":"public boolean isSubscribed(Flow.Subscriber<? super T> subscriber)","paramTypes":["Flow.Subscriber"],"notNullIndices":[0]},{"className":"java.util.concurrent.SubmissionPublisher<T>","api":"consume","signature":"public CompletableFuture<Void> consume(Consumer<? super T> consumer)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.concurrent.SynchronousQueue<E>","api":"put","signature":"public void put(E e) throws InterruptedException","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.SynchronousQueue<E>","api":"offer","signature":"public boolean offer(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.SynchronousQueue<E>","api":"toArray","signature":"public <T> T[] toArray(T[] a)","paramTypes":["T[]"],"notNullIndices":[0]},{"className":"java.util.concurrent.SynchronousQueue<E>","api":"drainTo","signature":"public int drainTo(Collection<? super E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"java.util.concurrent.ThreadPoolExecutor","api":"ThreadPoolExecutor","signature":"public ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue)","paramTypes":["int","int","long","TimeUnit","BlockingQueue"],"notNullIndices":[4]},{"className":"java.util.concurrent.ThreadPoolExecutor","api":"ThreadPoolExecutor","signature":"public ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, ThreadFactory threadFactory)","paramTypes":["int","int","long","TimeUnit","BlockingQueue","ThreadFactory"],"notNullIndices":[4,5]},{"className":"java.util.concurrent.ThreadPoolExecutor","api":"ThreadPoolExecutor","signature":"public ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, RejectedExecutionHandler handler)","paramTypes":["int","int","long","TimeUnit","BlockingQueue","RejectedExecutionHandler"],"notNullIndices":[4,5]},{"className":"java.util.concurrent.ThreadPoolExecutor","api":"ThreadPoolExecutor","signature":"public ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, ThreadFactory threadFactory, RejectedExecutionHandler handler)","paramTypes":["int","int","long","TimeUnit","BlockingQueue","ThreadFactory","RejectedExecutionHandler"],"notNullIndices":[4,5,6]},{"className":"java.util.concurrent.ThreadPoolExecutor","api":"execute","signature":"public void execute(Runnable command)","paramTypes":["Runnable"],"notNullIndices":[0]},{"className":"java.util.concurrent.ThreadPoolExecutor","api":"setThreadFactory","signature":"public void setThreadFactory(ThreadFactory threadFactory)","paramTypes":["ThreadFactory"],"notNullIndices":[0]},{"className":"java.util.concurrent.ThreadPoolExecutor","api":"setRejectedExecutionHandler","signature":"public void setRejectedExecutionHandler(RejectedExecutionHandler handler)","paramTypes":["RejectedExecutionHandler"],"notNullIndices":[0]},{"className":"java.util.concurrent.TimeUnit","api":"valueOf","signature":"public static TimeUnit valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.concurrent.TimeUnit","api":"convert","signature":"public long convert(Duration duration)","paramTypes":["Duration"],"notNullIndices":[0]},{"className":"java.util.concurrent.TimeUnit","api":"of","signature":"public static TimeUnit of(ChronoUnit chronoUnit)","paramTypes":["ChronoUnit"],"notNullIndices":[0]},{"className":"java.util.concurrent.TransferQueue<E>","api":"tryTransfer","signature":"boolean tryTransfer(E e)","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.TransferQueue<E>","api":"transfer","signature":"void transfer(E e) throws InterruptedException","paramTypes":["E"],"notNullIndices":[0]},{"className":"java.util.concurrent.atomic.AtomicIntegerArray","api":"AtomicIntegerArray","signature":"public AtomicIntegerArray(int[] array)","paramTypes":["int[]"],"notNullIndices":[0]},{"className":"java.util.concurrent.atomic.AtomicLongArray","api":"AtomicLongArray","signature":"public AtomicLongArray(long[] array)","paramTypes":["long[]"],"notNullIndices":[0]},{"className":"java.util.concurrent.atomic.AtomicReferenceArray<E>","api":"AtomicReferenceArray","signature":"public AtomicReferenceArray(E[] array)","paramTypes":["E[]"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.AbstractQueuedLongSynchronizer","api":"isQueued","signature":"public final boolean isQueued(Thread thread)","paramTypes":["Thread"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.AbstractQueuedLongSynchronizer","api":"owns","signature":"public final boolean owns(AbstractQueuedLongSynchronizer.ConditionObject condition)","paramTypes":["AbstractQueuedLongSynchronizer.ConditionObject"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.AbstractQueuedLongSynchronizer","api":"hasWaiters","signature":"public final boolean hasWaiters(AbstractQueuedLongSynchronizer.ConditionObject condition)","paramTypes":["AbstractQueuedLongSynchronizer.ConditionObject"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.AbstractQueuedLongSynchronizer","api":"getWaitQueueLength","signature":"public final int getWaitQueueLength(AbstractQueuedLongSynchronizer.ConditionObject condition)","paramTypes":["AbstractQueuedLongSynchronizer.ConditionObject"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.AbstractQueuedLongSynchronizer","api":"getWaitingThreads","signature":"public final Collection<Thread> getWaitingThreads(AbstractQueuedLongSynchronizer.ConditionObject condition)","paramTypes":["AbstractQueuedLongSynchronizer.ConditionObject"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.AbstractQueuedSynchronizer","api":"isQueued","signature":"public final boolean isQueued(Thread thread)","paramTypes":["Thread"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.AbstractQueuedSynchronizer","api":"owns","signature":"public final boolean owns(AbstractQueuedSynchronizer.ConditionObject condition)","paramTypes":["AbstractQueuedSynchronizer.ConditionObject"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.AbstractQueuedSynchronizer","api":"hasWaiters","signature":"public final boolean hasWaiters(AbstractQueuedSynchronizer.ConditionObject condition)","paramTypes":["AbstractQueuedSynchronizer.ConditionObject"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.AbstractQueuedSynchronizer","api":"getWaitQueueLength","signature":"public final int getWaitQueueLength(AbstractQueuedSynchronizer.ConditionObject condition)","paramTypes":["AbstractQueuedSynchronizer.ConditionObject"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.AbstractQueuedSynchronizer","api":"getWaitingThreads","signature":"public final Collection<Thread> getWaitingThreads(AbstractQueuedSynchronizer.ConditionObject condition)","paramTypes":["AbstractQueuedSynchronizer.ConditionObject"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.LockSupport","api":"getBlocker","signature":"public static Object getBlocker(Thread t)","paramTypes":["Thread"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.ReentrantLock","api":"tryLock","signature":"public boolean tryLock(long timeout, TimeUnit unit) throws InterruptedException","paramTypes":["long","TimeUnit"],"notNullIndices":[1]},{"className":"java.util.concurrent.locks.ReentrantLock","api":"hasQueuedThread","signature":"public final boolean hasQueuedThread(Thread thread)","paramTypes":["Thread"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.ReentrantLock","api":"hasWaiters","signature":"public boolean hasWaiters(Condition condition)","paramTypes":["Condition"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.ReentrantLock","api":"getWaitQueueLength","signature":"public int getWaitQueueLength(Condition condition)","paramTypes":["Condition"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.ReentrantLock","api":"getWaitingThreads","signature":"protected Collection<Thread> getWaitingThreads(Condition condition)","paramTypes":["Condition"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock","api":"ReadLock","signature":"protected ReadLock(ReentrantReadWriteLock lock)","paramTypes":["ReentrantReadWriteLock"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock","api":"tryLock","signature":"public boolean tryLock(long timeout, TimeUnit unit) throws InterruptedException","paramTypes":["long","TimeUnit"],"notNullIndices":[1]},{"className":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock","api":"WriteLock","signature":"protected WriteLock(ReentrantReadWriteLock lock)","paramTypes":["ReentrantReadWriteLock"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock","api":"tryLock","signature":"public boolean tryLock(long timeout, TimeUnit unit) throws InterruptedException","paramTypes":["long","TimeUnit"],"notNullIndices":[1]},{"className":"java.util.concurrent.locks.ReentrantReadWriteLock","api":"hasQueuedThread","signature":"public final boolean hasQueuedThread(Thread thread)","paramTypes":["Thread"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.ReentrantReadWriteLock","api":"hasWaiters","signature":"public boolean hasWaiters(Condition condition)","paramTypes":["Condition"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.ReentrantReadWriteLock","api":"getWaitQueueLength","signature":"public int getWaitQueueLength(Condition condition)","paramTypes":["Condition"],"notNullIndices":[0]},{"className":"java.util.concurrent.locks.ReentrantReadWriteLock","api":"getWaitingThreads","signature":"protected Collection<Thread> getWaitingThreads(Condition condition)","paramTypes":["Condition"],"notNullIndices":[0]},{"className":"java.util.function.BinaryOperator<T>","api":"minBy","signature":"static <T> BinaryOperator<T> minBy(Comparator<? super T> comparator)","paramTypes":["Comparator"],"notNullIndices":[0]},{"className":"java.util.function.BinaryOperator<T>","api":"maxBy","signature":"static <T> BinaryOperator<T> maxBy(Comparator<? super T> comparator)","paramTypes":["Comparator"],"notNullIndices":[0]},{"className":"java.util.function.Consumer<T>","api":"andThen","signature":"default Consumer<T> andThen(Consumer<? super T> after)","paramTypes":["Consumer"],"notNullIndices":[0]},{"className":"java.util.function.DoubleConsumer","api":"andThen","signature":"default DoubleConsumer andThen(DoubleConsumer after)","paramTypes":["DoubleConsumer"],"notNullIndices":[0]},{"className":"java.util.function.DoublePredicate","api":"and","signature":"default DoublePredicate and(DoublePredicate other)","paramTypes":["DoublePredicate"],"notNullIndices":[0]},{"className":"java.util.function.DoublePredicate","api":"or","signature":"default DoublePredicate or(DoublePredicate other)","paramTypes":["DoublePredicate"],"notNullIndices":[0]},{"className":"java.util.function.DoubleUnaryOperator","api":"compose","signature":"default DoubleUnaryOperator compose(DoubleUnaryOperator before)","paramTypes":["DoubleUnaryOperator"],"notNullIndices":[0]},{"className":"java.util.function.DoubleUnaryOperator","api":"andThen","signature":"default DoubleUnaryOperator andThen(DoubleUnaryOperator after)","paramTypes":["DoubleUnaryOperator"],"notNullIndices":[0]},{"className":"java.util.function.IntConsumer","api":"andThen","signature":"default IntConsumer andThen(IntConsumer after)","paramTypes":["IntConsumer"],"notNullIndices":[0]},{"className":"java.util.function.IntPredicate","api":"and","signature":"default IntPredicate and(IntPredicate other)","paramTypes":["IntPredicate"],"notNullIndices":[0]},{"className":"java.util.function.IntPredicate","api":"or","signature":"default IntPredicate or(IntPredicate other)","paramTypes":["IntPredicate"],"notNullIndices":[0]},{"className":"java.util.function.IntUnaryOperator","api":"compose","signature":"default IntUnaryOperator compose(IntUnaryOperator before)","paramTypes":["IntUnaryOperator"],"notNullIndices":[0]},{"className":"java.util.function.IntUnaryOperator","api":"andThen","signature":"default IntUnaryOperator andThen(IntUnaryOperator after)","paramTypes":["IntUnaryOperator"],"notNullIndices":[0]},{"className":"java.util.function.LongConsumer","api":"andThen","signature":"default LongConsumer andThen(LongConsumer after)","paramTypes":["LongConsumer"],"notNullIndices":[0]},{"className":"java.util.function.LongPredicate","api":"and","signature":"default LongPredicate and(LongPredicate other)","paramTypes":["LongPredicate"],"notNullIndices":[0]},{"className":"java.util.function.LongPredicate","api":"or","signature":"default LongPredicate or(LongPredicate other)","paramTypes":["LongPredicate"],"notNullIndices":[0]},{"className":"java.util.function.LongUnaryOperator","api":"compose","signature":"default LongUnaryOperator compose(LongUnaryOperator before)","paramTypes":["LongUnaryOperator"],"notNullIndices":[0]},{"className":"java.util.function.LongUnaryOperator","api":"andThen","signature":"default LongUnaryOperator andThen(LongUnaryOperator after)","paramTypes":["LongUnaryOperator"],"notNullIndices":[0]},{"className":"java.util.function.Predicate<T>","api":"and","signature":"default Predicate<T> and(Predicate<? super T> other)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.function.Predicate<T>","api":"or","signature":"default Predicate<T> or(Predicate<? super T> other)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.function.Predicate<T>","api":"not","signature":"static <T> Predicate<T> not(Predicate<? super T> target)","paramTypes":["Predicate"],"notNullIndices":[0]},{"className":"java.util.jar.Attributes.Name","api":"Name","signature":"public Name(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.jar.JarEntry","api":"JarEntry","signature":"public JarEntry(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.jar.JarFile","api":"JarFile","signature":"public JarFile(File file, boolean verify, int mode, Runtime.Version version) throws IOException","paramTypes":["File","boolean","int","Runtime.Version"],"notNullIndices":[3]},{"className":"java.util.jar.JarInputStream","api":"read","signature":"public int read(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.util.logging.Level","api":"Level","signature":"protected Level(String name, int value)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"java.util.logging.Level","api":"Level","signature":"protected Level(String name, int value, String resourceBundleName)","paramTypes":["String","int","String"],"notNullIndices":[0]},{"className":"java.util.logging.Level","api":"parse","signature":"public static Level parse(String name) throws IllegalArgumentException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.logging.LogManager","api":"addLogger","signature":"public boolean addLogger(Logger logger)","paramTypes":["Logger"],"notNullIndices":[0]},{"className":"java.util.logging.LogManager","api":"updateConfiguration","signature":"public void updateConfiguration(Function<String,BiFunction<String,String,String>> mapper) throws IOException","paramTypes":["Function>"],"notNullIndices":[0]},{"className":"java.util.logging.LogManager","api":"updateConfiguration","signature":"public void updateConfiguration(InputStream ins, Function<String,BiFunction<String,String,String>> mapper) throws IOException","paramTypes":["InputStream","Function>"],"notNullIndices":[0,1]},{"className":"java.util.logging.LogManager","api":"addConfigurationListener","signature":"public LogManager addConfigurationListener(Runnable listener)","paramTypes":["Runnable"],"notNullIndices":[0]},{"className":"java.util.logging.LogManager","api":"removeConfigurationListener","signature":"public void removeConfigurationListener(Runnable listener)","paramTypes":["Runnable"],"notNullIndices":[0]},{"className":"java.util.logging.LogRecord","api":"setInstant","signature":"public void setInstant(Instant instant)","paramTypes":["Instant"],"notNullIndices":[0]},{"className":"java.util.logging.Logger","api":"getLogger","signature":"public static Logger getLogger(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.logging.Logger","api":"getLogger","signature":"public static Logger getLogger(String name, String resourceBundleName)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.util.logging.Logger","api":"setResourceBundle","signature":"public void setResourceBundle(ResourceBundle bundle)","paramTypes":["ResourceBundle"],"notNullIndices":[0]},{"className":"java.util.logging.LoggingPermission","api":"LoggingPermission","signature":"public LoggingPermission(String name, String actions) throws IllegalArgumentException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"put","signature":"public void put(String key, String value)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"java.util.prefs.AbstractPreferences","api":"put","signature":"public void put(String key, String value)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"java.util.prefs.AbstractPreferences","api":"get","signature":"public String get(String key, String def)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"get","signature":"public String get(String key, String def)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"remove","signature":"public void remove(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"remove","signature":"public void remove(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"putInt","signature":"public void putInt(String key, int value)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"putInt","signature":"public void putInt(String key, int value)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"getInt","signature":"public int getInt(String key, int def)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"getInt","signature":"public int getInt(String key, int def)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"putLong","signature":"public void putLong(String key, long value)","paramTypes":["String","long"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"putLong","signature":"public void putLong(String key, long value)","paramTypes":["String","long"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"getLong","signature":"public long getLong(String key, long def)","paramTypes":["String","long"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"getLong","signature":"public long getLong(String key, long def)","paramTypes":["String","long"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"putBoolean","signature":"public void putBoolean(String key, boolean value)","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"putBoolean","signature":"public void putBoolean(String key, boolean value)","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"getBoolean","signature":"public boolean getBoolean(String key, boolean def)","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"getBoolean","signature":"public boolean getBoolean(String key, boolean def)","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"putFloat","signature":"public void putFloat(String key, float value)","paramTypes":["String","float"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"putFloat","signature":"public void putFloat(String key, float value)","paramTypes":["String","float"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"getFloat","signature":"public float getFloat(String key, float def)","paramTypes":["String","float"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"getFloat","signature":"public float getFloat(String key, float def)","paramTypes":["String","float"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"putDouble","signature":"public void putDouble(String key, double value)","paramTypes":["String","double"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"putDouble","signature":"public void putDouble(String key, double value)","paramTypes":["String","double"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"getDouble","signature":"public double getDouble(String key, double def)","paramTypes":["String","double"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"getDouble","signature":"public double getDouble(String key, double def)","paramTypes":["String","double"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"putByteArray","signature":"public void putByteArray(String key, byte[] value)","paramTypes":["String","byte[]"],"notNullIndices":[0,1]},{"className":"java.util.prefs.AbstractPreferences","api":"putByteArray","signature":"public void putByteArray(String key, byte[] value)","paramTypes":["String","byte[]"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"getByteArray","signature":"public byte[] getByteArray(String key, byte[] def)","paramTypes":["String","byte[]"],"notNullIndices":[0]},{"className":"java.util.prefs.AbstractPreferences","api":"getByteArray","signature":"public byte[] getByteArray(String key, byte[] def)","paramTypes":["String","byte[]"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"userNodeForPackage","signature":"public static Preferences userNodeForPackage(Class<?> c)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"systemNodeForPackage","signature":"public static Preferences systemNodeForPackage(Class<?> c)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"put","signature":"public abstract void put(String key, String value)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"java.util.prefs.Preferences","api":"put","signature":"public abstract void put(String key, String value)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"java.util.prefs.Preferences","api":"get","signature":"public abstract String get(String key, String def)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"get","signature":"public abstract String get(String key, String def)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"remove","signature":"public abstract void remove(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"remove","signature":"public abstract void remove(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"putInt","signature":"public abstract void putInt(String key, int value)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"putInt","signature":"public abstract void putInt(String key, int value)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"getInt","signature":"public abstract int getInt(String key, int def)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"getInt","signature":"public abstract int getInt(String key, int def)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"putLong","signature":"public abstract void putLong(String key, long value)","paramTypes":["String","long"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"putLong","signature":"public abstract void putLong(String key, long value)","paramTypes":["String","long"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"getLong","signature":"public abstract long getLong(String key, long def)","paramTypes":["String","long"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"getLong","signature":"public abstract long getLong(String key, long def)","paramTypes":["String","long"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"putBoolean","signature":"public abstract void putBoolean(String key, boolean value)","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"putBoolean","signature":"public abstract void putBoolean(String key, boolean value)","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"getBoolean","signature":"public abstract boolean getBoolean(String key, boolean def)","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"getBoolean","signature":"public abstract boolean getBoolean(String key, boolean def)","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"putFloat","signature":"public abstract void putFloat(String key, float value)","paramTypes":["String","float"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"putFloat","signature":"public abstract void putFloat(String key, float value)","paramTypes":["String","float"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"getFloat","signature":"public abstract float getFloat(String key, float def)","paramTypes":["String","float"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"getFloat","signature":"public abstract float getFloat(String key, float def)","paramTypes":["String","float"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"putDouble","signature":"public abstract void putDouble(String key, double value)","paramTypes":["String","double"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"putDouble","signature":"public abstract void putDouble(String key, double value)","paramTypes":["String","double"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"getDouble","signature":"public abstract double getDouble(String key, double def)","paramTypes":["String","double"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"getDouble","signature":"public abstract double getDouble(String key, double def)","paramTypes":["String","double"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"putByteArray","signature":"public abstract void putByteArray(String key, byte[] value)","paramTypes":["String","byte[]"],"notNullIndices":[0,1]},{"className":"java.util.prefs.Preferences","api":"putByteArray","signature":"public abstract void putByteArray(String key, byte[] value)","paramTypes":["String","byte[]"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"getByteArray","signature":"public abstract byte[] getByteArray(String key, byte[] def)","paramTypes":["String","byte[]"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"getByteArray","signature":"public abstract byte[] getByteArray(String key, byte[] def)","paramTypes":["String","byte[]"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"node","signature":"public abstract Preferences node(String pathName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"nodeExists","signature":"public abstract boolean nodeExists(String pathName) throws BackingStoreException","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"addPreferenceChangeListener","signature":"public abstract void addPreferenceChangeListener(PreferenceChangeListener pcl)","paramTypes":["PreferenceChangeListener"],"notNullIndices":[0]},{"className":"java.util.prefs.Preferences","api":"addNodeChangeListener","signature":"public abstract void addNodeChangeListener(NodeChangeListener ncl)","paramTypes":["NodeChangeListener"],"notNullIndices":[0]},{"className":"java.util.regex.Matcher","api":"usePattern","signature":"public Matcher usePattern(Pattern newPattern)","paramTypes":["Pattern"],"notNullIndices":[0]},{"className":"java.util.regex.Matcher","api":"replaceAll","signature":"public String replaceAll(Function<MatchResult,String> replacer)","paramTypes":["Function"],"notNullIndices":[0]},{"className":"java.util.regex.Matcher","api":"replaceFirst","signature":"public String replaceFirst(Function<MatchResult,String> replacer)","paramTypes":["Function"],"notNullIndices":[0]},{"className":"java.util.spi.AbstractResourceBundleProvider","api":"AbstractResourceBundleProvider","signature":"protected AbstractResourceBundleProvider(String... formats)","paramTypes":["String..."],"notNullIndices":[0]},{"className":"java.util.spi.AbstractResourceBundleProvider","api":"getBundle","signature":"public ResourceBundle getBundle(String baseName, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0,1]},{"className":"java.util.spi.CalendarDataProvider","api":"getFirstDayOfWeek","signature":"public abstract int getFirstDayOfWeek(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.util.spi.CalendarDataProvider","api":"getMinimalDaysInFirstWeek","signature":"public abstract int getMinimalDaysInFirstWeek(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.util.spi.CalendarNameProvider","api":"getDisplayName","signature":"public abstract String getDisplayName(String calendarType, int field, int value, int style, Locale locale)","paramTypes":["String","int","int","int","Locale"],"notNullIndices":[4]},{"className":"java.util.spi.CalendarNameProvider","api":"getDisplayNames","signature":"public abstract Map<String,Integer> getDisplayNames(String calendarType, int field, int style, Locale locale)","paramTypes":["String","int","int","Locale"],"notNullIndices":[3]},{"className":"java.util.spi.CurrencyNameProvider","api":"getSymbol","signature":"public abstract String getSymbol(String currencyCode, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0,1]},{"className":"java.util.spi.CurrencyNameProvider","api":"getDisplayName","signature":"public String getDisplayName(String currencyCode, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0,1]},{"className":"java.util.spi.LocaleNameProvider","api":"getDisplayLanguage","signature":"public abstract String getDisplayLanguage(String languageCode, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0,1]},{"className":"java.util.spi.LocaleNameProvider","api":"getDisplayScript","signature":"public String getDisplayScript(String scriptCode, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0,1]},{"className":"java.util.spi.LocaleNameProvider","api":"getDisplayCountry","signature":"public abstract String getDisplayCountry(String countryCode, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0,1]},{"className":"java.util.spi.LocaleNameProvider","api":"getDisplayVariant","signature":"public abstract String getDisplayVariant(String variant, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0,1]},{"className":"java.util.spi.LocaleNameProvider","api":"getDisplayUnicodeExtensionKey","signature":"public String getDisplayUnicodeExtensionKey(String key, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0,1]},{"className":"java.util.spi.LocaleNameProvider","api":"getDisplayUnicodeExtensionType","signature":"public String getDisplayUnicodeExtensionType(String type, String key, Locale locale)","paramTypes":["String","String","Locale"],"notNullIndices":[0,1,2]},{"className":"java.util.spi.LocaleServiceProvider","api":"isSupportedLocale","signature":"public boolean isSupportedLocale(Locale locale)","paramTypes":["Locale"],"notNullIndices":[0]},{"className":"java.util.spi.ResourceBundleControlProvider","api":"getControl","signature":"ResourceBundle.Control getControl(String baseName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.spi.TimeZoneNameProvider","api":"getDisplayName","signature":"public abstract String getDisplayName(String ID, boolean daylight, int style, Locale locale)","paramTypes":["String","boolean","int","Locale"],"notNullIndices":[0,3]},{"className":"java.util.spi.TimeZoneNameProvider","api":"getGenericDisplayName","signature":"public String getGenericDisplayName(String ID, int style, Locale locale)","paramTypes":["String","int","Locale"],"notNullIndices":[0,2]},{"className":"java.util.spi.ToolProvider","api":"findFirst","signature":"static Optional<ToolProvider> findFirst(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.stream.Collector.Characteristics","api":"valueOf","signature":"public static Collector.Characteristics valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.stream.Collectors","api":"toUnmodifiableMap","signature":"public static <T,K,U> Collector<T,?,Map<K,U>> toUnmodifiableMap(Function<? super T,? extends K> keyMapper, Function<? super T,? extends U> valueMapper)","paramTypes":["Function","Function"],"notNullIndices":[0,1]},{"className":"java.util.stream.Collectors","api":"toUnmodifiableMap","signature":"public static <T,K,U> Collector<T,?,Map<K,U>> toUnmodifiableMap(Function<? super T,? extends K> keyMapper, Function<? super T,? extends U> valueMapper, BinaryOperator<U> mergeFunction)","paramTypes":["Function","Function","BinaryOperator"],"notNullIndices":[0,1,2]},{"className":"java.util.stream.Stream<T>","api":"reduce","signature":"Optional<T> reduce(BinaryOperator<T> accumulator)","paramTypes":["BinaryOperator"],"notNullIndices":[0]},{"className":"java.util.stream.Stream<T>","api":"min","signature":"Optional<T> min(Comparator<? super T> comparator)","paramTypes":["Comparator"],"notNullIndices":[0]},{"className":"java.util.stream.Stream<T>","api":"max","signature":"Optional<T> max(Comparator<? super T> comparator)","paramTypes":["Comparator"],"notNullIndices":[0]},{"className":"java.util.zip.CheckedInputStream","api":"read","signature":"public int read(byte[] buf, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.util.zip.Checksum","api":"update","signature":"default void update(byte[] b)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"java.util.zip.Checksum","api":"update","signature":"default void update(ByteBuffer buffer)","paramTypes":["ByteBuffer"],"notNullIndices":[0]},{"className":"java.util.zip.DeflaterInputStream","api":"DeflaterInputStream","signature":"public DeflaterInputStream(InputStream in)","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"java.util.zip.DeflaterInputStream","api":"DeflaterInputStream","signature":"public DeflaterInputStream(InputStream in, Deflater defl)","paramTypes":["InputStream","Deflater"],"notNullIndices":[0,1]},{"className":"java.util.zip.DeflaterInputStream","api":"DeflaterInputStream","signature":"public DeflaterInputStream(InputStream in, Deflater defl, int bufLen)","paramTypes":["InputStream","Deflater","int"],"notNullIndices":[0,1]},{"className":"java.util.zip.GZIPInputStream","api":"read","signature":"public int read(byte[] buf, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.util.zip.InflaterInputStream","api":"read","signature":"public int read(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.util.zip.InflaterOutputStream","api":"InflaterOutputStream","signature":"public InflaterOutputStream(OutputStream out)","paramTypes":["OutputStream"],"notNullIndices":[0]},{"className":"java.util.zip.InflaterOutputStream","api":"InflaterOutputStream","signature":"public InflaterOutputStream(OutputStream out, Inflater infl)","paramTypes":["OutputStream","Inflater"],"notNullIndices":[0,1]},{"className":"java.util.zip.InflaterOutputStream","api":"InflaterOutputStream","signature":"public InflaterOutputStream(OutputStream out, Inflater infl, int bufLen)","paramTypes":["OutputStream","Inflater","int"],"notNullIndices":[0,1]},{"className":"java.util.zip.InflaterOutputStream","api":"write","signature":"public void write(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"java.util.zip.ZipEntry","api":"ZipEntry","signature":"public ZipEntry(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"java.util.zip.ZipEntry","api":"ZipEntry","signature":"public ZipEntry(ZipEntry e)","paramTypes":["ZipEntry"],"notNullIndices":[0]},{"className":"java.util.zip.ZipEntry","api":"setLastModifiedTime","signature":"public ZipEntry setLastModifiedTime(FileTime time)","paramTypes":["FileTime"],"notNullIndices":[0]},{"className":"java.util.zip.ZipEntry","api":"setLastAccessTime","signature":"public ZipEntry setLastAccessTime(FileTime time)","paramTypes":["FileTime"],"notNullIndices":[0]},{"className":"java.util.zip.ZipEntry","api":"setCreationTime","signature":"public ZipEntry setCreationTime(FileTime time)","paramTypes":["FileTime"],"notNullIndices":[0]},{"className":"java.util.zip.ZipInputStream","api":"read","signature":"public int read(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"javax.crypto.Cipher","api":"getInstance","signature":"public static final Cipher getInstance(String transformation) throws NoSuchAlgorithmException, NoSuchPaddingException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.crypto.Cipher","api":"getInstance","signature":"public static final Cipher getInstance(String transformation, String provider) throws NoSuchAlgorithmException, NoSuchProviderException, NoSuchPaddingException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.crypto.Cipher","api":"getInstance","signature":"public static final Cipher getInstance(String transformation, String provider) throws NoSuchAlgorithmException, NoSuchProviderException, NoSuchPaddingException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.crypto.Cipher","api":"getInstance","signature":"public static final Cipher getInstance(String transformation, Provider provider) throws NoSuchAlgorithmException, NoSuchPaddingException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"javax.crypto.Cipher","api":"getInstance","signature":"public static final Cipher getInstance(String transformation, Provider provider) throws NoSuchAlgorithmException, NoSuchPaddingException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"javax.crypto.Cipher","api":"getMaxAllowedKeyLength","signature":"public static final int getMaxAllowedKeyLength(String transformation) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.crypto.Cipher","api":"getMaxAllowedParameterSpec","signature":"public static final AlgorithmParameterSpec getMaxAllowedParameterSpec(String transformation) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.crypto.Cipher","api":"updateAAD","signature":"public final void updateAAD(byte[] src)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.crypto.Cipher","api":"updateAAD","signature":"public final void updateAAD(byte[] src, int offset, int len)","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"javax.crypto.Cipher","api":"updateAAD","signature":"public final void updateAAD(ByteBuffer src)","paramTypes":["ByteBuffer"],"notNullIndices":[0]},{"className":"javax.crypto.CipherOutputStream","api":"write","signature":"public void write(byte[] b) throws IOException","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.crypto.EncryptedPrivateKeyInfo","api":"EncryptedPrivateKeyInfo","signature":"public EncryptedPrivateKeyInfo(byte[] encoded) throws IOException","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.crypto.EncryptedPrivateKeyInfo","api":"EncryptedPrivateKeyInfo","signature":"public EncryptedPrivateKeyInfo(String algName, byte[] encryptedData) throws NoSuchAlgorithmException","paramTypes":["String","byte[]"],"notNullIndices":[0,1]},{"className":"javax.crypto.EncryptedPrivateKeyInfo","api":"EncryptedPrivateKeyInfo","signature":"public EncryptedPrivateKeyInfo(AlgorithmParameters algParams, byte[] encryptedData) throws NoSuchAlgorithmException","paramTypes":["AlgorithmParameters","byte[]"],"notNullIndices":[0,1]},{"className":"javax.crypto.EncryptedPrivateKeyInfo","api":"getKeySpec","signature":"public PKCS8EncodedKeySpec getKeySpec(Cipher cipher) throws InvalidKeySpecException","paramTypes":["Cipher"],"notNullIndices":[0]},{"className":"javax.crypto.EncryptedPrivateKeyInfo","api":"getKeySpec","signature":"public PKCS8EncodedKeySpec getKeySpec(Key decryptKey) throws NoSuchAlgorithmException, InvalidKeyException","paramTypes":["Key"],"notNullIndices":[0]},{"className":"javax.crypto.EncryptedPrivateKeyInfo","api":"getKeySpec","signature":"public PKCS8EncodedKeySpec getKeySpec(Key decryptKey, String providerName) throws NoSuchProviderException, NoSuchAlgorithmException, InvalidKeyException","paramTypes":["Key","String"],"notNullIndices":[0,1]},{"className":"javax.crypto.EncryptedPrivateKeyInfo","api":"getKeySpec","signature":"public PKCS8EncodedKeySpec getKeySpec(Key decryptKey, Provider provider) throws NoSuchAlgorithmException, InvalidKeyException","paramTypes":["Key","Provider"],"notNullIndices":[0,1]},{"className":"javax.crypto.ExemptionMechanism","api":"getInstance","signature":"public static final ExemptionMechanism getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.crypto.ExemptionMechanism","api":"getInstance","signature":"public static final ExemptionMechanism getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.crypto.ExemptionMechanism","api":"getInstance","signature":"public static final ExemptionMechanism getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.crypto.ExemptionMechanism","api":"getInstance","signature":"public static final ExemptionMechanism getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"javax.crypto.ExemptionMechanism","api":"getInstance","signature":"public static final ExemptionMechanism getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"javax.crypto.KeyAgreement","api":"getInstance","signature":"public static final KeyAgreement getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.crypto.KeyAgreement","api":"getInstance","signature":"public static final KeyAgreement getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.crypto.KeyAgreement","api":"getInstance","signature":"public static final KeyAgreement getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.crypto.KeyAgreement","api":"getInstance","signature":"public static final KeyAgreement getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"javax.crypto.KeyAgreement","api":"getInstance","signature":"public static final KeyAgreement getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"javax.crypto.KeyGenerator","api":"getInstance","signature":"public static final KeyGenerator getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.crypto.KeyGenerator","api":"getInstance","signature":"public static final KeyGenerator getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.crypto.KeyGenerator","api":"getInstance","signature":"public static final KeyGenerator getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.crypto.KeyGenerator","api":"getInstance","signature":"public static final KeyGenerator getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"javax.crypto.KeyGenerator","api":"getInstance","signature":"public static final KeyGenerator getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"javax.crypto.Mac","api":"getInstance","signature":"public static final Mac getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.crypto.Mac","api":"getInstance","signature":"public static final Mac getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.crypto.Mac","api":"getInstance","signature":"public static final Mac getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.crypto.Mac","api":"getInstance","signature":"public static final Mac getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"javax.crypto.Mac","api":"getInstance","signature":"public static final Mac getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"javax.crypto.SealedObject","api":"SealedObject","signature":"protected SealedObject(SealedObject so)","paramTypes":["SealedObject"],"notNullIndices":[0]},{"className":"javax.crypto.SealedObject","api":"getObject","signature":"public final Object getObject(Key key) throws IOException, ClassNotFoundException, NoSuchAlgorithmException, InvalidKeyException","paramTypes":["Key"],"notNullIndices":[0]},{"className":"javax.crypto.SealedObject","api":"getObject","signature":"public final Object getObject(Cipher c) throws IOException, ClassNotFoundException, IllegalBlockSizeException, BadPaddingException","paramTypes":["Cipher"],"notNullIndices":[0]},{"className":"javax.crypto.SealedObject","api":"getObject","signature":"public final Object getObject(Key key, String provider) throws IOException, ClassNotFoundException, NoSuchAlgorithmException, NoSuchProviderException, InvalidKeyException","paramTypes":["Key","String"],"notNullIndices":[1]},{"className":"javax.crypto.SealedObject","api":"getObject","signature":"public final Object getObject(Key key, String provider) throws IOException, ClassNotFoundException, NoSuchAlgorithmException, NoSuchProviderException, InvalidKeyException","paramTypes":["Key","String"],"notNullIndices":[0]},{"className":"javax.crypto.SecretKeyFactory","api":"getInstance","signature":"public static final SecretKeyFactory getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.crypto.SecretKeyFactory","api":"getInstance","signature":"public static final SecretKeyFactory getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.crypto.SecretKeyFactory","api":"getInstance","signature":"public static final SecretKeyFactory getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.crypto.SecretKeyFactory","api":"getInstance","signature":"public static final SecretKeyFactory getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"javax.crypto.SecretKeyFactory","api":"getInstance","signature":"public static final SecretKeyFactory getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"javax.crypto.spec.ChaCha20ParameterSpec","api":"ChaCha20ParameterSpec","signature":"public ChaCha20ParameterSpec(byte[] nonce, int counter)","paramTypes":["byte[]","int"],"notNullIndices":[0]},{"className":"javax.crypto.spec.DESKeySpec","api":"DESKeySpec","signature":"public DESKeySpec(byte[] key) throws InvalidKeyException","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.crypto.spec.DESKeySpec","api":"DESKeySpec","signature":"public DESKeySpec(byte[] key, int offset) throws InvalidKeyException","paramTypes":["byte[]","int"],"notNullIndices":[0]},{"className":"javax.crypto.spec.DESKeySpec","api":"isParityAdjusted","signature":"public static boolean isParityAdjusted(byte[] key, int offset) throws InvalidKeyException","paramTypes":["byte[]","int"],"notNullIndices":[0]},{"className":"javax.crypto.spec.DESKeySpec","api":"isWeak","signature":"public static boolean isWeak(byte[] key, int offset) throws InvalidKeyException","paramTypes":["byte[]","int"],"notNullIndices":[0]},{"className":"javax.crypto.spec.DESedeKeySpec","api":"DESedeKeySpec","signature":"public DESedeKeySpec(byte[] key) throws InvalidKeyException","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.crypto.spec.DESedeKeySpec","api":"DESedeKeySpec","signature":"public DESedeKeySpec(byte[] key, int offset) throws InvalidKeyException","paramTypes":["byte[]","int"],"notNullIndices":[0]},{"className":"javax.crypto.spec.DESedeKeySpec","api":"isParityAdjusted","signature":"public static boolean isParityAdjusted(byte[] key, int offset) throws InvalidKeyException","paramTypes":["byte[]","int"],"notNullIndices":[0]},{"className":"javax.crypto.spec.GCMParameterSpec","api":"GCMParameterSpec","signature":"public GCMParameterSpec(int tLen, byte[] src)","paramTypes":["int","byte[]"],"notNullIndices":[0,1]},{"className":"javax.crypto.spec.GCMParameterSpec","api":"GCMParameterSpec","signature":"public GCMParameterSpec(int tLen, byte[] src, int offset, int len)","paramTypes":["int","byte[]","int","int"],"notNullIndices":[0,1]},{"className":"javax.crypto.spec.IvParameterSpec","api":"IvParameterSpec","signature":"public IvParameterSpec(byte[] iv)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.crypto.spec.IvParameterSpec","api":"IvParameterSpec","signature":"public IvParameterSpec(byte[] iv, int offset, int len)","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"javax.crypto.spec.OAEPParameterSpec","api":"OAEPParameterSpec","signature":"public OAEPParameterSpec(String mdName, String mgfName, AlgorithmParameterSpec mgfSpec, PSource pSrc)","paramTypes":["String","String","AlgorithmParameterSpec","PSource"],"notNullIndices":[0,1,3]},{"className":"javax.crypto.spec.PBEKeySpec","api":"PBEKeySpec","signature":"public PBEKeySpec(char[] password, byte[] salt, int iterationCount, int keyLength)","paramTypes":["char[]","byte[]","int","int"],"notNullIndices":[1]},{"className":"javax.crypto.spec.PBEKeySpec","api":"PBEKeySpec","signature":"public PBEKeySpec(char[] password, byte[] salt, int iterationCount)","paramTypes":["char[]","byte[]","int"],"notNullIndices":[1]},{"className":"javax.crypto.spec.PBEParameterSpec","api":"PBEParameterSpec","signature":"public PBEParameterSpec(byte[] salt, int iterationCount)","paramTypes":["byte[]","int"],"notNullIndices":[0]},{"className":"javax.crypto.spec.PBEParameterSpec","api":"PBEParameterSpec","signature":"public PBEParameterSpec(byte[] salt, int iterationCount, AlgorithmParameterSpec paramSpec)","paramTypes":["byte[]","int","AlgorithmParameterSpec"],"notNullIndices":[0]},{"className":"javax.crypto.spec.PSource.PSpecified","api":"PSpecified","signature":"public PSpecified(byte[] p)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.crypto.spec.PSource","api":"PSource","signature":"protected PSource(String pSrcName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.crypto.spec.RC2ParameterSpec","api":"RC2ParameterSpec","signature":"public RC2ParameterSpec(int effectiveKeyBits, byte[] iv)","paramTypes":["int","byte[]"],"notNullIndices":[1]},{"className":"javax.crypto.spec.RC2ParameterSpec","api":"RC2ParameterSpec","signature":"public RC2ParameterSpec(int effectiveKeyBits, byte[] iv, int offset)","paramTypes":["int","byte[]","int"],"notNullIndices":[1]},{"className":"javax.crypto.spec.RC5ParameterSpec","api":"RC5ParameterSpec","signature":"public RC5ParameterSpec(int version, int rounds, int wordSize, byte[] iv)","paramTypes":["int","int","int","byte[]"],"notNullIndices":[3]},{"className":"javax.crypto.spec.RC5ParameterSpec","api":"RC5ParameterSpec","signature":"public RC5ParameterSpec(int version, int rounds, int wordSize, byte[] iv, int offset)","paramTypes":["int","int","int","byte[]","int"],"notNullIndices":[3]},{"className":"javax.crypto.spec.SecretKeySpec","api":"SecretKeySpec","signature":"public SecretKeySpec(byte[] key, String algorithm)","paramTypes":["byte[]","String"],"notNullIndices":[0,1]},{"className":"javax.crypto.spec.SecretKeySpec","api":"SecretKeySpec","signature":"public SecretKeySpec(byte[] key, int offset, int len, String algorithm)","paramTypes":["byte[]","int","int","String"],"notNullIndices":[0,3]},{"className":"javax.imageio.IIOImage","api":"IIOImage","signature":"public IIOImage(RenderedImage image, List<? extends BufferedImage> thumbnails, IIOMetadata metadata)","paramTypes":["RenderedImage","List","IIOMetadata"],"notNullIndices":[0]},{"className":"javax.imageio.IIOImage","api":"IIOImage","signature":"public IIOImage(Raster raster, List<? extends BufferedImage> thumbnails, IIOMetadata metadata)","paramTypes":["Raster","List","IIOMetadata"],"notNullIndices":[0]},{"className":"javax.imageio.IIOImage","api":"setRenderedImage","signature":"public void setRenderedImage(RenderedImage image)","paramTypes":["RenderedImage"],"notNullIndices":[0]},{"className":"javax.imageio.IIOImage","api":"setRaster","signature":"public void setRaster(Raster raster)","paramTypes":["Raster"],"notNullIndices":[0]},{"className":"javax.imageio.IIOParam","api":"setDestinationOffset","signature":"public void setDestinationOffset(Point destinationOffset)","paramTypes":["Point"],"notNullIndices":[0]},{"className":"javax.imageio.IIOParamController","api":"activate","signature":"boolean activate(IIOParam param)","paramTypes":["IIOParam"],"notNullIndices":[0]},{"className":"javax.imageio.ImageIO","api":"createImageInputStream","signature":"public static ImageInputStream createImageInputStream(Object input) throws IOException","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.imageio.ImageIO","api":"createImageOutputStream","signature":"public static ImageOutputStream createImageOutputStream(Object output) throws IOException","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.imageio.ImageIO","api":"getImageReaders","signature":"public static Iterator<ImageReader> getImageReaders(Object input)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.imageio.ImageIO","api":"getImageReadersByFormatName","signature":"public static Iterator<ImageReader> getImageReadersByFormatName(String formatName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.ImageIO","api":"getImageReadersBySuffix","signature":"public static Iterator<ImageReader> getImageReadersBySuffix(String fileSuffix)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.ImageIO","api":"getImageReadersByMIMEType","signature":"public static Iterator<ImageReader> getImageReadersByMIMEType(String MIMEType)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.ImageIO","api":"getImageWritersByFormatName","signature":"public static Iterator<ImageWriter> getImageWritersByFormatName(String formatName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.ImageIO","api":"getImageWritersBySuffix","signature":"public static Iterator<ImageWriter> getImageWritersBySuffix(String fileSuffix)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.ImageIO","api":"getImageWritersByMIMEType","signature":"public static Iterator<ImageWriter> getImageWritersByMIMEType(String MIMEType)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.ImageIO","api":"getImageWriter","signature":"public static ImageWriter getImageWriter(ImageReader reader)","paramTypes":["ImageReader"],"notNullIndices":[0]},{"className":"javax.imageio.ImageIO","api":"getImageReader","signature":"public static ImageReader getImageReader(ImageWriter writer)","paramTypes":["ImageWriter"],"notNullIndices":[0]},{"className":"javax.imageio.ImageIO","api":"getImageTranscoders","signature":"public static Iterator<ImageTranscoder> getImageTranscoders(ImageReader reader, ImageWriter writer)","paramTypes":["ImageReader","ImageWriter"],"notNullIndices":[0,1]},{"className":"javax.imageio.ImageIO","api":"read","signature":"public static BufferedImage read(File input) throws IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.imageio.ImageIO","api":"read","signature":"public static BufferedImage read(InputStream input) throws IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"javax.imageio.ImageIO","api":"read","signature":"public static BufferedImage read(URL input) throws IOException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.imageio.ImageIO","api":"read","signature":"public static BufferedImage read(ImageInputStream stream) throws IOException","paramTypes":["ImageInputStream"],"notNullIndices":[0]},{"className":"javax.imageio.ImageReader","api":"getStreamMetadata","signature":"public IIOMetadata getStreamMetadata(String formatName, Set<String> nodeNames) throws IOException","paramTypes":["String","Set"],"notNullIndices":[0]},{"className":"javax.imageio.ImageReader","api":"getStreamMetadata","signature":"public IIOMetadata getStreamMetadata(String formatName, Set<String> nodeNames) throws IOException","paramTypes":["String","Set"],"notNullIndices":[1]},{"className":"javax.imageio.ImageReader","api":"getImageMetadata","signature":"public IIOMetadata getImageMetadata(int imageIndex, String formatName, Set<String> nodeNames) throws IOException","paramTypes":["int","String","Set"],"notNullIndices":[1]},{"className":"javax.imageio.ImageReader","api":"getImageMetadata","signature":"public IIOMetadata getImageMetadata(int imageIndex, String formatName, Set<String> nodeNames) throws IOException","paramTypes":["int","String","Set"],"notNullIndices":[2]},{"className":"javax.imageio.ImageReader","api":"processWarningOccurred","signature":"protected void processWarningOccurred(String warning)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.ImageReader","api":"processWarningOccurred","signature":"protected void processWarningOccurred(String baseName, String keyword)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.imageio.ImageReader","api":"processWarningOccurred","signature":"protected void processWarningOccurred(String baseName, String keyword)","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.imageio.ImageReader","api":"computeRegions","signature":"protected static void computeRegions(ImageReadParam param, int srcWidth, int srcHeight, BufferedImage image, Rectangle srcRegion, Rectangle destRegion)","paramTypes":["ImageReadParam","int","int","BufferedImage","Rectangle","Rectangle"],"notNullIndices":[4]},{"className":"javax.imageio.ImageReader","api":"getDestination","signature":"protected static BufferedImage getDestination(ImageReadParam param, Iterator<ImageTypeSpecifier> imageTypes, int width, int height) throws IIOException","paramTypes":["ImageReadParam","Iterator","int","int"],"notNullIndices":[1]},{"className":"javax.imageio.ImageTranscoder","api":"convertStreamMetadata","signature":"IIOMetadata convertStreamMetadata(IIOMetadata inData, ImageWriteParam param)","paramTypes":["IIOMetadata","ImageWriteParam"],"notNullIndices":[0]},{"className":"javax.imageio.ImageTranscoder","api":"convertImageMetadata","signature":"IIOMetadata convertImageMetadata(IIOMetadata inData, ImageTypeSpecifier imageType, ImageWriteParam param)","paramTypes":["IIOMetadata","ImageTypeSpecifier","ImageWriteParam"],"notNullIndices":[0,1]},{"className":"javax.imageio.ImageTypeSpecifier","api":"ImageTypeSpecifier","signature":"public ImageTypeSpecifier(RenderedImage image)","paramTypes":["RenderedImage"],"notNullIndices":[0]},{"className":"javax.imageio.ImageTypeSpecifier","api":"createPacked","signature":"public static ImageTypeSpecifier createPacked(ColorSpace colorSpace, int redMask, int greenMask, int blueMask, int alphaMask, int transferType, boolean isAlphaPremultiplied)","paramTypes":["ColorSpace","int","int","int","int","int","boolean"],"notNullIndices":[0]},{"className":"javax.imageio.ImageTypeSpecifier","api":"createInterleaved","signature":"public static ImageTypeSpecifier createInterleaved(ColorSpace colorSpace, int[] bandOffsets, int dataType, boolean hasAlpha, boolean isAlphaPremultiplied)","paramTypes":["ColorSpace","int[]","int","boolean","boolean"],"notNullIndices":[0]},{"className":"javax.imageio.ImageTypeSpecifier","api":"createInterleaved","signature":"public static ImageTypeSpecifier createInterleaved(ColorSpace colorSpace, int[] bandOffsets, int dataType, boolean hasAlpha, boolean isAlphaPremultiplied)","paramTypes":["ColorSpace","int[]","int","boolean","boolean"],"notNullIndices":[1]},{"className":"javax.imageio.ImageTypeSpecifier","api":"createBanded","signature":"public static ImageTypeSpecifier createBanded(ColorSpace colorSpace, int[] bankIndices, int[] bandOffsets, int dataType, boolean hasAlpha, boolean isAlphaPremultiplied)","paramTypes":["ColorSpace","int[]","int[]","int","boolean","boolean"],"notNullIndices":[0]},{"className":"javax.imageio.ImageTypeSpecifier","api":"createBanded","signature":"public static ImageTypeSpecifier createBanded(ColorSpace colorSpace, int[] bankIndices, int[] bandOffsets, int dataType, boolean hasAlpha, boolean isAlphaPremultiplied)","paramTypes":["ColorSpace","int[]","int[]","int","boolean","boolean"],"notNullIndices":[1]},{"className":"javax.imageio.ImageTypeSpecifier","api":"createBanded","signature":"public static ImageTypeSpecifier createBanded(ColorSpace colorSpace, int[] bankIndices, int[] bandOffsets, int dataType, boolean hasAlpha, boolean isAlphaPremultiplied)","paramTypes":["ColorSpace","int[]","int[]","int","boolean","boolean"],"notNullIndices":[2]},{"className":"javax.imageio.ImageTypeSpecifier","api":"createIndexed","signature":"public static ImageTypeSpecifier createIndexed(byte[] redLUT, byte[] greenLUT, byte[] blueLUT, byte[] alphaLUT, int bits, int dataType)","paramTypes":["byte[]","byte[]","byte[]","byte[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.ImageTypeSpecifier","api":"createIndexed","signature":"public static ImageTypeSpecifier createIndexed(byte[] redLUT, byte[] greenLUT, byte[] blueLUT, byte[] alphaLUT, int bits, int dataType)","paramTypes":["byte[]","byte[]","byte[]","byte[]","int","int"],"notNullIndices":[1]},{"className":"javax.imageio.ImageTypeSpecifier","api":"createIndexed","signature":"public static ImageTypeSpecifier createIndexed(byte[] redLUT, byte[] greenLUT, byte[] blueLUT, byte[] alphaLUT, int bits, int dataType)","paramTypes":["byte[]","byte[]","byte[]","byte[]","int","int"],"notNullIndices":[2]},{"className":"javax.imageio.ImageTypeSpecifier","api":"createFromRenderedImage","signature":"public static ImageTypeSpecifier createFromRenderedImage(RenderedImage image)","paramTypes":["RenderedImage"],"notNullIndices":[0]},{"className":"javax.imageio.ImageWriter","api":"write","signature":"public abstract void write(IIOMetadata streamMetadata, IIOImage image, ImageWriteParam param) throws IOException","paramTypes":["IIOMetadata","IIOImage","ImageWriteParam"],"notNullIndices":[1]},{"className":"javax.imageio.ImageWriter","api":"write","signature":"public void write(IIOImage image) throws IOException","paramTypes":["IIOImage"],"notNullIndices":[0]},{"className":"javax.imageio.ImageWriter","api":"write","signature":"public void write(RenderedImage image) throws IOException","paramTypes":["RenderedImage"],"notNullIndices":[0]},{"className":"javax.imageio.ImageWriter","api":"writeToSequence","signature":"public void writeToSequence(IIOImage image, ImageWriteParam param) throws IOException","paramTypes":["IIOImage","ImageWriteParam"],"notNullIndices":[0]},{"className":"javax.imageio.ImageWriter","api":"writeInsert","signature":"public void writeInsert(int imageIndex, IIOImage image, ImageWriteParam param) throws IOException","paramTypes":["int","IIOImage","ImageWriteParam"],"notNullIndices":[1]},{"className":"javax.imageio.ImageWriter","api":"prepareWriteEmpty","signature":"public void prepareWriteEmpty(IIOMetadata streamMetadata, ImageTypeSpecifier imageType, int width, int height, IIOMetadata imageMetadata, List<? extends BufferedImage> thumbnails, ImageWriteParam param) throws IOException","paramTypes":["IIOMetadata","ImageTypeSpecifier","int","int","IIOMetadata","List","ImageWriteParam"],"notNullIndices":[1,5]},{"className":"javax.imageio.ImageWriter","api":"prepareInsertEmpty","signature":"public void prepareInsertEmpty(int imageIndex, ImageTypeSpecifier imageType, int width, int height, IIOMetadata imageMetadata, List<? extends BufferedImage> thumbnails, ImageWriteParam param) throws IOException","paramTypes":["int","ImageTypeSpecifier","int","int","IIOMetadata","List","ImageWriteParam"],"notNullIndices":[1,5]},{"className":"javax.imageio.ImageWriter","api":"prepareReplacePixels","signature":"public void prepareReplacePixels(int imageIndex, Rectangle region) throws IOException","paramTypes":["int","Rectangle"],"notNullIndices":[1]},{"className":"javax.imageio.ImageWriter","api":"replacePixels","signature":"public void replacePixels(RenderedImage image, ImageWriteParam param) throws IOException","paramTypes":["RenderedImage","ImageWriteParam"],"notNullIndices":[0]},{"className":"javax.imageio.ImageWriter","api":"replacePixels","signature":"public void replacePixels(Raster raster, ImageWriteParam param) throws IOException","paramTypes":["Raster","ImageWriteParam"],"notNullIndices":[0]},{"className":"javax.imageio.ImageWriter","api":"processWarningOccurred","signature":"protected void processWarningOccurred(int imageIndex, String warning)","paramTypes":["int","String"],"notNullIndices":[1]},{"className":"javax.imageio.ImageWriter","api":"processWarningOccurred","signature":"protected void processWarningOccurred(int imageIndex, String baseName, String keyword)","paramTypes":["int","String","String"],"notNullIndices":[1]},{"className":"javax.imageio.ImageWriter","api":"processWarningOccurred","signature":"protected void processWarningOccurred(int imageIndex, String baseName, String keyword)","paramTypes":["int","String","String"],"notNullIndices":[2]},{"className":"javax.imageio.metadata.IIOMetadata","api":"IIOMetadata","signature":"protected IIOMetadata(boolean standardMetadataFormatSupported, String nativeMetadataFormatName, String nativeMetadataFormatClassName, String[] extraMetadataFormatNames, String[] extraMetadataFormatClassNames)","paramTypes":["boolean","String","String","String[]","String[]"],"notNullIndices":[3,4]},{"className":"javax.imageio.metadata.IIOMetadata","api":"getMetadataFormat","signature":"public IIOMetadataFormat getMetadataFormat(String formatName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadata","api":"getAsTree","signature":"public abstract Node getAsTree(String formatName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadata","api":"mergeTree","signature":"public abstract void mergeTree(String formatName, Node root) throws IIOInvalidTreeException","paramTypes":["String","Node"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadata","api":"mergeTree","signature":"public abstract void mergeTree(String formatName, Node root) throws IIOInvalidTreeException","paramTypes":["String","Node"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadata","api":"setFromTree","signature":"public void setFromTree(String formatName, Node root) throws IIOInvalidTreeException","paramTypes":["String","Node"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadata","api":"setFromTree","signature":"public void setFromTree(String formatName, Node root) throws IIOInvalidTreeException","paramTypes":["String","Node"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataController","api":"activate","signature":"boolean activate(IIOMetadata metadata)","paramTypes":["IIOMetadata"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getElementMinChildren","signature":"int getElementMinChildren(String elementName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getElementMaxChildren","signature":"int getElementMaxChildren(String elementName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getElementDescription","signature":"String getElementDescription(String elementName, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getChildPolicy","signature":"int getChildPolicy(String elementName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getChildNames","signature":"String[] getChildNames(String elementName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeNames","signature":"String[] getAttributeNames(String elementName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeValueType","signature":"int getAttributeValueType(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeValueType","signature":"int getAttributeValueType(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeDataType","signature":"int getAttributeDataType(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeDataType","signature":"int getAttributeDataType(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"isAttributeRequired","signature":"boolean isAttributeRequired(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"isAttributeRequired","signature":"boolean isAttributeRequired(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeDefaultValue","signature":"String getAttributeDefaultValue(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeDefaultValue","signature":"String getAttributeDefaultValue(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeEnumerations","signature":"String[] getAttributeEnumerations(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeEnumerations","signature":"String[] getAttributeEnumerations(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeMinValue","signature":"String getAttributeMinValue(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeMinValue","signature":"String getAttributeMinValue(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeMaxValue","signature":"String getAttributeMaxValue(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeMaxValue","signature":"String getAttributeMaxValue(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeListMinLength","signature":"int getAttributeListMinLength(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeListMinLength","signature":"int getAttributeListMinLength(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeListMaxLength","signature":"int getAttributeListMaxLength(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeListMaxLength","signature":"int getAttributeListMaxLength(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeDescription","signature":"String getAttributeDescription(String elementName, String attrName, Locale locale)","paramTypes":["String","String","Locale"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getAttributeDescription","signature":"String getAttributeDescription(String elementName, String attrName, Locale locale)","paramTypes":["String","String","Locale"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getObjectValueType","signature":"int getObjectValueType(String elementName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getObjectClass","signature":"Class<?> getObjectClass(String elementName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getObjectDefaultValue","signature":"Object getObjectDefaultValue(String elementName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getObjectEnumerations","signature":"Object[] getObjectEnumerations(String elementName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getObjectMinValue","signature":"Comparable<?> getObjectMinValue(String elementName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getObjectMaxValue","signature":"Comparable<?> getObjectMaxValue(String elementName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getObjectArrayMinLength","signature":"int getObjectArrayMinLength(String elementName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormat","api":"getObjectArrayMaxLength","signature":"int getObjectArrayMaxLength(String elementName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"IIOMetadataFormatImpl","signature":"public IIOMetadataFormatImpl(String rootName, int childPolicy)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"IIOMetadataFormatImpl","signature":"public IIOMetadataFormatImpl(String rootName, int minChildren, int maxChildren)","paramTypes":["String","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"setResourceBaseName","signature":"protected void setResourceBaseName(String resourceBaseName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addElement","signature":"protected void addElement(String elementName, String parentName, int childPolicy)","paramTypes":["String","String","int"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addElement","signature":"protected void addElement(String elementName, String parentName, int minChildren, int maxChildren)","paramTypes":["String","String","int","int"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addChildElement","signature":"protected void addChildElement(String elementName, String parentName)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addChildElement","signature":"protected void addChildElement(String elementName, String parentName)","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addAttribute","signature":"protected void addAttribute(String elementName, String attrName, int dataType, boolean required, String defaultValue)","paramTypes":["String","String","int","boolean","String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addAttribute","signature":"protected void addAttribute(String elementName, String attrName, int dataType, boolean required, String defaultValue)","paramTypes":["String","String","int","boolean","String"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addAttribute","signature":"protected void addAttribute(String elementName, String attrName, int dataType, boolean required, String defaultValue, List<String> enumeratedValues)","paramTypes":["String","String","int","boolean","String","List"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addAttribute","signature":"protected void addAttribute(String elementName, String attrName, int dataType, boolean required, String defaultValue, List<String> enumeratedValues)","paramTypes":["String","String","int","boolean","String","List"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addAttribute","signature":"protected void addAttribute(String elementName, String attrName, int dataType, boolean required, String defaultValue, List<String> enumeratedValues)","paramTypes":["String","String","int","boolean","String","List"],"notNullIndices":[5]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addAttribute","signature":"protected void addAttribute(String elementName, String attrName, int dataType, boolean required, String defaultValue, List<String> enumeratedValues)","paramTypes":["String","String","int","boolean","String","List"],"notNullIndices":[5]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addAttribute","signature":"protected void addAttribute(String elementName, String attrName, int dataType, boolean required, String defaultValue, String minValue, String maxValue, boolean minInclusive, boolean maxInclusive)","paramTypes":["String","String","int","boolean","String","String","String","boolean","boolean"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addAttribute","signature":"protected void addAttribute(String elementName, String attrName, int dataType, boolean required, String defaultValue, String minValue, String maxValue, boolean minInclusive, boolean maxInclusive)","paramTypes":["String","String","int","boolean","String","String","String","boolean","boolean"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addAttribute","signature":"protected void addAttribute(String elementName, String attrName, int dataType, boolean required, int listMinLength, int listMaxLength)","paramTypes":["String","String","int","boolean","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addAttribute","signature":"protected void addAttribute(String elementName, String attrName, int dataType, boolean required, int listMinLength, int listMaxLength)","paramTypes":["String","String","int","boolean","int","int"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addBooleanAttribute","signature":"protected void addBooleanAttribute(String elementName, String attrName, boolean hasDefaultValue, boolean defaultValue)","paramTypes":["String","String","boolean","boolean"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addBooleanAttribute","signature":"protected void addBooleanAttribute(String elementName, String attrName, boolean hasDefaultValue, boolean defaultValue)","paramTypes":["String","String","boolean","boolean"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"removeAttribute","signature":"protected void removeAttribute(String elementName, String attrName)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addObjectValue","signature":"protected <T> void addObjectValue(String elementName, Class<T> classType, boolean required, T defaultValue)","paramTypes":["String","Class","boolean","T"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addObjectValue","signature":"protected <T> void addObjectValue(String elementName, Class<T> classType, boolean required, T defaultValue, List<? extends T> enumeratedValues)","paramTypes":["String","Class","boolean","T","List"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addObjectValue","signature":"protected <T> void addObjectValue(String elementName, Class<T> classType, boolean required, T defaultValue, List<? extends T> enumeratedValues)","paramTypes":["String","Class","boolean","T","List"],"notNullIndices":[4]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addObjectValue","signature":"protected <T> void addObjectValue(String elementName, Class<T> classType, boolean required, T defaultValue, List<? extends T> enumeratedValues)","paramTypes":["String","Class","boolean","T","List"],"notNullIndices":[1,4]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"addObjectValue","signature":"protected <T extends Object & Comparable<? super T>> void addObjectValue(String elementName, Class<T> classType, T defaultValue, Comparable<? super T> minValue, Comparable<? super T> maxValue, boolean minInclusive, boolean maxInclusive)","paramTypes":["String","Class","T","Comparable","Comparable","boolean","boolean"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"getElementDescription","signature":"public String getElementDescription(String elementName, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"getAttributeDescription","signature":"public String getAttributeDescription(String elementName, String attrName, Locale locale)","paramTypes":["String","String","Locale"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataFormatImpl","api":"getAttributeDescription","signature":"public String getAttributeDescription(String elementName, String attrName, Locale locale)","paramTypes":["String","String","Locale"],"notNullIndices":[1]},{"className":"javax.imageio.metadata.IIOMetadataNode","api":"insertBefore","signature":"public Node insertBefore(Node newChild, Node refChild)","paramTypes":["Node","Node"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataNode","api":"replaceChild","signature":"public Node replaceChild(Node newChild, Node oldChild)","paramTypes":["Node","Node"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataNode","api":"removeChild","signature":"public Node removeChild(Node oldChild)","paramTypes":["Node"],"notNullIndices":[0]},{"className":"javax.imageio.metadata.IIOMetadataNode","api":"appendChild","signature":"public Node appendChild(Node newChild)","paramTypes":["Node"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.jpeg.JPEGHuffmanTable","api":"JPEGHuffmanTable","signature":"public JPEGHuffmanTable(short[] lengths, short[] values)","paramTypes":["short[]","short[]"],"notNullIndices":[0,1]},{"className":"javax.imageio.plugins.jpeg.JPEGQTable","api":"JPEGQTable","signature":"public JPEGQTable(int[] table)","paramTypes":["int[]"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.tiff.TIFFDirectory","api":"TIFFDirectory","signature":"public TIFFDirectory(TIFFTagSet[] tagSets, TIFFTag parentTag)","paramTypes":["TIFFTagSet[]","TIFFTag"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.tiff.TIFFDirectory","api":"createFromMetadata","signature":"public static TIFFDirectory createFromMetadata(IIOMetadata tiffImageMetadata) throws IIOInvalidTreeException","paramTypes":["IIOMetadata"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.tiff.TIFFDirectory","api":"addTagSet","signature":"public void addTagSet(TIFFTagSet tagSet)","paramTypes":["TIFFTagSet"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.tiff.TIFFDirectory","api":"removeTagSet","signature":"public void removeTagSet(TIFFTagSet tagSet)","paramTypes":["TIFFTagSet"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.tiff.TIFFDirectory","api":"addTIFFField","signature":"public void addTIFFField(TIFFField f)","paramTypes":["TIFFField"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.tiff.TIFFField","api":"TIFFField","signature":"public TIFFField(TIFFTag tag, int type, int count, Object data)","paramTypes":["TIFFTag","int","int","Object"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.tiff.TIFFField","api":"TIFFField","signature":"public TIFFField(TIFFTag tag, int type, int count, Object data)","paramTypes":["TIFFTag","int","int","Object"],"notNullIndices":[3]},{"className":"javax.imageio.plugins.tiff.TIFFField","api":"TIFFField","signature":"public TIFFField(TIFFTag tag, int type, int count)","paramTypes":["TIFFTag","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.tiff.TIFFField","api":"TIFFField","signature":"public TIFFField(TIFFTag tag, long value)","paramTypes":["TIFFTag","long"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.tiff.TIFFField","api":"TIFFField","signature":"public TIFFField(TIFFTag tag, int type, long offset, TIFFDirectory dir)","paramTypes":["TIFFTag","int","long","TIFFDirectory"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.tiff.TIFFField","api":"TIFFField","signature":"public TIFFField(TIFFTag tag, int type, long offset, TIFFDirectory dir)","paramTypes":["TIFFTag","int","long","TIFFDirectory"],"notNullIndices":[3]},{"className":"javax.imageio.plugins.tiff.TIFFImageReadParam","api":"addAllowedTagSet","signature":"public void addAllowedTagSet(TIFFTagSet tagSet)","paramTypes":["TIFFTagSet"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.tiff.TIFFImageReadParam","api":"removeAllowedTagSet","signature":"public void removeAllowedTagSet(TIFFTagSet tagSet)","paramTypes":["TIFFTagSet"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.tiff.TIFFTag","api":"TIFFTag","signature":"public TIFFTag(String name, int number, int dataTypes, int count)","paramTypes":["String","int","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.tiff.TIFFTag","api":"TIFFTag","signature":"public TIFFTag(String name, int number, TIFFTagSet tagSet)","paramTypes":["String","int","TIFFTagSet"],"notNullIndices":[0,2]},{"className":"javax.imageio.plugins.tiff.TIFFTag","api":"TIFFTag","signature":"public TIFFTag(String name, int number, int dataTypes)","paramTypes":["String","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.tiff.TIFFTagSet","api":"TIFFTagSet","signature":"public TIFFTagSet(List<TIFFTag> tags)","paramTypes":["List"],"notNullIndices":[0]},{"className":"javax.imageio.plugins.tiff.TIFFTagSet","api":"getTag","signature":"public TIFFTag getTag(String tagName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.spi.IIOServiceProvider","api":"IIOServiceProvider","signature":"public IIOServiceProvider(String vendorName, String version)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.imageio.spi.IIOServiceProvider","api":"IIOServiceProvider","signature":"public IIOServiceProvider(String vendorName, String version)","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.imageio.spi.ImageInputStreamSpi","api":"ImageInputStreamSpi","signature":"public ImageInputStreamSpi(String vendorName, String version, Class<?> inputClass)","paramTypes":["String","String","Class"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ImageInputStreamSpi","api":"ImageInputStreamSpi","signature":"public ImageInputStreamSpi(String vendorName, String version, Class<?> inputClass)","paramTypes":["String","String","Class"],"notNullIndices":[1]},{"className":"javax.imageio.spi.ImageInputStreamSpi","api":"createInputStreamInstance","signature":"public abstract ImageInputStream createInputStreamInstance(Object input, boolean useCache, File cacheDir) throws IOException","paramTypes":["Object","boolean","File"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ImageInputStreamSpi","api":"createInputStreamInstance","signature":"public ImageInputStream createInputStreamInstance(Object input) throws IOException","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ImageOutputStreamSpi","api":"ImageOutputStreamSpi","signature":"public ImageOutputStreamSpi(String vendorName, String version, Class<?> outputClass)","paramTypes":["String","String","Class"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ImageOutputStreamSpi","api":"ImageOutputStreamSpi","signature":"public ImageOutputStreamSpi(String vendorName, String version, Class<?> outputClass)","paramTypes":["String","String","Class"],"notNullIndices":[1]},{"className":"javax.imageio.spi.ImageOutputStreamSpi","api":"createOutputStreamInstance","signature":"public abstract ImageOutputStream createOutputStreamInstance(Object output, boolean useCache, File cacheDir) throws IOException","paramTypes":["Object","boolean","File"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ImageOutputStreamSpi","api":"createOutputStreamInstance","signature":"public ImageOutputStream createOutputStreamInstance(Object output) throws IOException","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ImageReaderSpi","api":"ImageReaderSpi","signature":"public ImageReaderSpi(String vendorName, String version, String[] names, String[] suffixes, String[] MIMETypes, String readerClassName, Class<?>[] inputTypes, String[] writerSpiNames, boolean supportsStandardStreamMetadataFormat, String nativeStreamMetadataFormatName, String nativeStreamMetadataFormatClassName, String[] extraStreamMetadataFormatNames, String[] extraStreamMetadataFormatClassNames, boolean supportsStandardImageMetadataFormat, String nativeImageMetadataFormatName, String nativeImageMetadataFormatClassName, String[] extraImageMetadataFormatNames, String[] extraImageMetadataFormatClassNames)","paramTypes":["String","String","String[]","String[]","String[]","String","Class[]","String[]","boolean","String","String","String[]","String[]","boolean","String","String","String[]","String[]"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ImageReaderSpi","api":"ImageReaderSpi","signature":"public ImageReaderSpi(String vendorName, String version, String[] names, String[] suffixes, String[] MIMETypes, String readerClassName, Class<?>[] inputTypes, String[] writerSpiNames, boolean supportsStandardStreamMetadataFormat, String nativeStreamMetadataFormatName, String nativeStreamMetadataFormatClassName, String[] extraStreamMetadataFormatNames, String[] extraStreamMetadataFormatClassNames, boolean supportsStandardImageMetadataFormat, String nativeImageMetadataFormatName, String nativeImageMetadataFormatClassName, String[] extraImageMetadataFormatNames, String[] extraImageMetadataFormatClassNames)","paramTypes":["String","String","String[]","String[]","String[]","String","Class[]","String[]","boolean","String","String","String[]","String[]","boolean","String","String","String[]","String[]"],"notNullIndices":[1]},{"className":"javax.imageio.spi.ImageReaderSpi","api":"ImageReaderSpi","signature":"public ImageReaderSpi(String vendorName, String version, String[] names, String[] suffixes, String[] MIMETypes, String readerClassName, Class<?>[] inputTypes, String[] writerSpiNames, boolean supportsStandardStreamMetadataFormat, String nativeStreamMetadataFormatName, String nativeStreamMetadataFormatClassName, String[] extraStreamMetadataFormatNames, String[] extraStreamMetadataFormatClassNames, boolean supportsStandardImageMetadataFormat, String nativeImageMetadataFormatName, String nativeImageMetadataFormatClassName, String[] extraImageMetadataFormatNames, String[] extraImageMetadataFormatClassNames)","paramTypes":["String","String","String[]","String[]","String[]","String","Class[]","String[]","boolean","String","String","String[]","String[]","boolean","String","String","String[]","String[]"],"notNullIndices":[2]},{"className":"javax.imageio.spi.ImageReaderSpi","api":"ImageReaderSpi","signature":"public ImageReaderSpi(String vendorName, String version, String[] names, String[] suffixes, String[] MIMETypes, String readerClassName, Class<?>[] inputTypes, String[] writerSpiNames, boolean supportsStandardStreamMetadataFormat, String nativeStreamMetadataFormatName, String nativeStreamMetadataFormatClassName, String[] extraStreamMetadataFormatNames, String[] extraStreamMetadataFormatClassNames, boolean supportsStandardImageMetadataFormat, String nativeImageMetadataFormatName, String nativeImageMetadataFormatClassName, String[] extraImageMetadataFormatNames, String[] extraImageMetadataFormatClassNames)","paramTypes":["String","String","String[]","String[]","String[]","String","Class[]","String[]","boolean","String","String","String[]","String[]","boolean","String","String","String[]","String[]"],"notNullIndices":[5]},{"className":"javax.imageio.spi.ImageReaderSpi","api":"ImageReaderSpi","signature":"public ImageReaderSpi(String vendorName, String version, String[] names, String[] suffixes, String[] MIMETypes, String readerClassName, Class<?>[] inputTypes, String[] writerSpiNames, boolean supportsStandardStreamMetadataFormat, String nativeStreamMetadataFormatName, String nativeStreamMetadataFormatClassName, String[] extraStreamMetadataFormatNames, String[] extraStreamMetadataFormatClassNames, boolean supportsStandardImageMetadataFormat, String nativeImageMetadataFormatName, String nativeImageMetadataFormatClassName, String[] extraImageMetadataFormatNames, String[] extraImageMetadataFormatClassNames)","paramTypes":["String","String","String[]","String[]","String[]","String","Class[]","String[]","boolean","String","String","String[]","String[]","boolean","String","String","String[]","String[]"],"notNullIndices":[6]},{"className":"javax.imageio.spi.ImageReaderSpi","api":"canDecodeInput","signature":"public abstract boolean canDecodeInput(Object source) throws IOException","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ImageReaderSpi","api":"isOwnReader","signature":"public boolean isOwnReader(ImageReader reader)","paramTypes":["ImageReader"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ImageReaderWriterSpi","api":"ImageReaderWriterSpi","signature":"public ImageReaderWriterSpi(String vendorName, String version, String[] names, String[] suffixes, String[] MIMETypes, String pluginClassName, boolean supportsStandardStreamMetadataFormat, String nativeStreamMetadataFormatName, String nativeStreamMetadataFormatClassName, String[] extraStreamMetadataFormatNames, String[] extraStreamMetadataFormatClassNames, boolean supportsStandardImageMetadataFormat, String nativeImageMetadataFormatName, String nativeImageMetadataFormatClassName, String[] extraImageMetadataFormatNames, String[] extraImageMetadataFormatClassNames)","paramTypes":["String","String","String[]","String[]","String[]","String","boolean","String","String","String[]","String[]","boolean","String","String","String[]","String[]"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ImageReaderWriterSpi","api":"ImageReaderWriterSpi","signature":"public ImageReaderWriterSpi(String vendorName, String version, String[] names, String[] suffixes, String[] MIMETypes, String pluginClassName, boolean supportsStandardStreamMetadataFormat, String nativeStreamMetadataFormatName, String nativeStreamMetadataFormatClassName, String[] extraStreamMetadataFormatNames, String[] extraStreamMetadataFormatClassNames, boolean supportsStandardImageMetadataFormat, String nativeImageMetadataFormatName, String nativeImageMetadataFormatClassName, String[] extraImageMetadataFormatNames, String[] extraImageMetadataFormatClassNames)","paramTypes":["String","String","String[]","String[]","String[]","String","boolean","String","String","String[]","String[]","boolean","String","String","String[]","String[]"],"notNullIndices":[1]},{"className":"javax.imageio.spi.ImageReaderWriterSpi","api":"ImageReaderWriterSpi","signature":"public ImageReaderWriterSpi(String vendorName, String version, String[] names, String[] suffixes, String[] MIMETypes, String pluginClassName, boolean supportsStandardStreamMetadataFormat, String nativeStreamMetadataFormatName, String nativeStreamMetadataFormatClassName, String[] extraStreamMetadataFormatNames, String[] extraStreamMetadataFormatClassNames, boolean supportsStandardImageMetadataFormat, String nativeImageMetadataFormatName, String nativeImageMetadataFormatClassName, String[] extraImageMetadataFormatNames, String[] extraImageMetadataFormatClassNames)","paramTypes":["String","String","String[]","String[]","String[]","String","boolean","String","String","String[]","String[]","boolean","String","String","String[]","String[]"],"notNullIndices":[2]},{"className":"javax.imageio.spi.ImageReaderWriterSpi","api":"ImageReaderWriterSpi","signature":"public ImageReaderWriterSpi(String vendorName, String version, String[] names, String[] suffixes, String[] MIMETypes, String pluginClassName, boolean supportsStandardStreamMetadataFormat, String nativeStreamMetadataFormatName, String nativeStreamMetadataFormatClassName, String[] extraStreamMetadataFormatNames, String[] extraStreamMetadataFormatClassNames, boolean supportsStandardImageMetadataFormat, String nativeImageMetadataFormatName, String nativeImageMetadataFormatClassName, String[] extraImageMetadataFormatNames, String[] extraImageMetadataFormatClassNames)","paramTypes":["String","String","String[]","String[]","String[]","String","boolean","String","String","String[]","String[]","boolean","String","String","String[]","String[]"],"notNullIndices":[5]},{"className":"javax.imageio.spi.ImageReaderWriterSpi","api":"getStreamMetadataFormat","signature":"public IIOMetadataFormat getStreamMetadataFormat(String formatName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ImageReaderWriterSpi","api":"getImageMetadataFormat","signature":"public IIOMetadataFormat getImageMetadataFormat(String formatName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ImageWriterSpi","api":"ImageWriterSpi","signature":"public ImageWriterSpi(String vendorName, String version, String[] names, String[] suffixes, String[] MIMETypes, String writerClassName, Class<?>[] outputTypes, String[] readerSpiNames, boolean supportsStandardStreamMetadataFormat, String nativeStreamMetadataFormatName, String nativeStreamMetadataFormatClassName, String[] extraStreamMetadataFormatNames, String[] extraStreamMetadataFormatClassNames, boolean supportsStandardImageMetadataFormat, String nativeImageMetadataFormatName, String nativeImageMetadataFormatClassName, String[] extraImageMetadataFormatNames, String[] extraImageMetadataFormatClassNames)","paramTypes":["String","String","String[]","String[]","String[]","String","Class[]","String[]","boolean","String","String","String[]","String[]","boolean","String","String","String[]","String[]"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ImageWriterSpi","api":"ImageWriterSpi","signature":"public ImageWriterSpi(String vendorName, String version, String[] names, String[] suffixes, String[] MIMETypes, String writerClassName, Class<?>[] outputTypes, String[] readerSpiNames, boolean supportsStandardStreamMetadataFormat, String nativeStreamMetadataFormatName, String nativeStreamMetadataFormatClassName, String[] extraStreamMetadataFormatNames, String[] extraStreamMetadataFormatClassNames, boolean supportsStandardImageMetadataFormat, String nativeImageMetadataFormatName, String nativeImageMetadataFormatClassName, String[] extraImageMetadataFormatNames, String[] extraImageMetadataFormatClassNames)","paramTypes":["String","String","String[]","String[]","String[]","String","Class[]","String[]","boolean","String","String","String[]","String[]","boolean","String","String","String[]","String[]"],"notNullIndices":[1]},{"className":"javax.imageio.spi.ImageWriterSpi","api":"ImageWriterSpi","signature":"public ImageWriterSpi(String vendorName, String version, String[] names, String[] suffixes, String[] MIMETypes, String writerClassName, Class<?>[] outputTypes, String[] readerSpiNames, boolean supportsStandardStreamMetadataFormat, String nativeStreamMetadataFormatName, String nativeStreamMetadataFormatClassName, String[] extraStreamMetadataFormatNames, String[] extraStreamMetadataFormatClassNames, boolean supportsStandardImageMetadataFormat, String nativeImageMetadataFormatName, String nativeImageMetadataFormatClassName, String[] extraImageMetadataFormatNames, String[] extraImageMetadataFormatClassNames)","paramTypes":["String","String","String[]","String[]","String[]","String","Class[]","String[]","boolean","String","String","String[]","String[]","boolean","String","String","String[]","String[]"],"notNullIndices":[2]},{"className":"javax.imageio.spi.ImageWriterSpi","api":"ImageWriterSpi","signature":"public ImageWriterSpi(String vendorName, String version, String[] names, String[] suffixes, String[] MIMETypes, String writerClassName, Class<?>[] outputTypes, String[] readerSpiNames, boolean supportsStandardStreamMetadataFormat, String nativeStreamMetadataFormatName, String nativeStreamMetadataFormatClassName, String[] extraStreamMetadataFormatNames, String[] extraStreamMetadataFormatClassNames, boolean supportsStandardImageMetadataFormat, String nativeImageMetadataFormatName, String nativeImageMetadataFormatClassName, String[] extraImageMetadataFormatNames, String[] extraImageMetadataFormatClassNames)","paramTypes":["String","String","String[]","String[]","String[]","String","Class[]","String[]","boolean","String","String","String[]","String[]","boolean","String","String","String[]","String[]"],"notNullIndices":[5]},{"className":"javax.imageio.spi.ImageWriterSpi","api":"ImageWriterSpi","signature":"public ImageWriterSpi(String vendorName, String version, String[] names, String[] suffixes, String[] MIMETypes, String writerClassName, Class<?>[] outputTypes, String[] readerSpiNames, boolean supportsStandardStreamMetadataFormat, String nativeStreamMetadataFormatName, String nativeStreamMetadataFormatClassName, String[] extraStreamMetadataFormatNames, String[] extraStreamMetadataFormatClassNames, boolean supportsStandardImageMetadataFormat, String nativeImageMetadataFormatName, String nativeImageMetadataFormatClassName, String[] extraImageMetadataFormatNames, String[] extraImageMetadataFormatClassNames)","paramTypes":["String","String","String[]","String[]","String[]","String","Class[]","String[]","boolean","String","String","String[]","String[]","boolean","String","String","String[]","String[]"],"notNullIndices":[6]},{"className":"javax.imageio.spi.ImageWriterSpi","api":"canEncodeImage","signature":"public abstract boolean canEncodeImage(ImageTypeSpecifier type)","paramTypes":["ImageTypeSpecifier"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ImageWriterSpi","api":"canEncodeImage","signature":"public boolean canEncodeImage(RenderedImage im)","paramTypes":["RenderedImage"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ImageWriterSpi","api":"isOwnWriter","signature":"public boolean isOwnWriter(ImageWriter writer)","paramTypes":["ImageWriter"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ServiceRegistry","api":"ServiceRegistry","signature":"public ServiceRegistry(Iterator<Class<?>> categories)","paramTypes":["Iterator>"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ServiceRegistry","api":"lookupProviders","signature":"public static <T> Iterator<T> lookupProviders(Class<T> providerClass, ClassLoader loader)","paramTypes":["Class","ClassLoader"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ServiceRegistry","api":"lookupProviders","signature":"public static <T> Iterator<T> lookupProviders(Class<T> providerClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ServiceRegistry","api":"registerServiceProvider","signature":"public <T> boolean registerServiceProvider(T provider, Class<T> category)","paramTypes":["T","Class"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ServiceRegistry","api":"registerServiceProvider","signature":"public void registerServiceProvider(Object provider)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ServiceRegistry","api":"registerServiceProviders","signature":"public void registerServiceProviders(Iterator<?> providers)","paramTypes":["Iterator"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ServiceRegistry","api":"deregisterServiceProvider","signature":"public <T> boolean deregisterServiceProvider(T provider, Class<T> category)","paramTypes":["T","Class"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ServiceRegistry","api":"deregisterServiceProvider","signature":"public void deregisterServiceProvider(Object provider)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ServiceRegistry","api":"contains","signature":"public boolean contains(Object provider)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.imageio.spi.ServiceRegistry","api":"getServiceProviderByClass","signature":"public <T> T getServiceProviderByClass(Class<T> providerClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"javax.imageio.stream.FileCacheImageInputStream","api":"FileCacheImageInputStream","signature":"public FileCacheImageInputStream(InputStream stream, File cacheDir) throws IOException","paramTypes":["InputStream","File"],"notNullIndices":[0]},{"className":"javax.imageio.stream.FileCacheImageOutputStream","api":"FileCacheImageOutputStream","signature":"public FileCacheImageOutputStream(OutputStream stream, File cacheDir) throws IOException","paramTypes":["OutputStream","File"],"notNullIndices":[0]},{"className":"javax.imageio.stream.FileImageInputStream","api":"FileImageInputStream","signature":"public FileImageInputStream(File f) throws FileNotFoundException, IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.imageio.stream.FileImageInputStream","api":"FileImageInputStream","signature":"public FileImageInputStream(RandomAccessFile raf)","paramTypes":["RandomAccessFile"],"notNullIndices":[0]},{"className":"javax.imageio.stream.FileImageOutputStream","api":"FileImageOutputStream","signature":"public FileImageOutputStream(File f) throws FileNotFoundException, IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.imageio.stream.FileImageOutputStream","api":"FileImageOutputStream","signature":"public FileImageOutputStream(RandomAccessFile raf)","paramTypes":["RandomAccessFile"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageInputStream","api":"read","signature":"int read(byte[] b) throws IOException","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageInputStream","api":"read","signature":"int read(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageInputStream","api":"readBytes","signature":"void readBytes(IIOByteBuffer buf, int len) throws IOException","paramTypes":["IIOByteBuffer","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageInputStream","api":"readFully","signature":"void readFully(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageInputStream","api":"readFully","signature":"void readFully(byte[] b) throws IOException","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageInputStream","api":"readFully","signature":"void readFully(short[] s, int off, int len) throws IOException","paramTypes":["short[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageInputStream","api":"readFully","signature":"void readFully(char[] c, int off, int len) throws IOException","paramTypes":["char[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageInputStream","api":"readFully","signature":"void readFully(int[] i, int off, int len) throws IOException","paramTypes":["int[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageInputStream","api":"readFully","signature":"void readFully(long[] l, int off, int len) throws IOException","paramTypes":["long[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageInputStream","api":"readFully","signature":"void readFully(float[] f, int off, int len) throws IOException","paramTypes":["float[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageInputStream","api":"readFully","signature":"void readFully(double[] d, int off, int len) throws IOException","paramTypes":["double[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageInputStreamImpl","api":"read","signature":"public int read(byte[] b) throws IOException","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageInputStreamImpl","api":"read","signature":"public abstract int read(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageOutputStream","api":"write","signature":"void write(byte[] b) throws IOException","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageOutputStream","api":"write","signature":"void write(byte[] b, int off, int len) throws IOException","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageOutputStream","api":"writeBytes","signature":"void writeBytes(String s) throws IOException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageOutputStream","api":"writeChars","signature":"void writeChars(String s) throws IOException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageOutputStream","api":"writeUTF","signature":"void writeUTF(String s) throws IOException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageOutputStream","api":"writeShorts","signature":"void writeShorts(short[] s, int off, int len) throws IOException","paramTypes":["short[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageOutputStream","api":"writeChars","signature":"void writeChars(char[] c, int off, int len) throws IOException","paramTypes":["char[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageOutputStream","api":"writeInts","signature":"void writeInts(int[] i, int off, int len) throws IOException","paramTypes":["int[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageOutputStream","api":"writeLongs","signature":"void writeLongs(long[] l, int off, int len) throws IOException","paramTypes":["long[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageOutputStream","api":"writeFloats","signature":"void writeFloats(float[] f, int off, int len) throws IOException","paramTypes":["float[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.ImageOutputStream","api":"writeDoubles","signature":"void writeDoubles(double[] d, int off, int len) throws IOException","paramTypes":["double[]","int","int"],"notNullIndices":[0]},{"className":"javax.imageio.stream.MemoryCacheImageInputStream","api":"MemoryCacheImageInputStream","signature":"public MemoryCacheImageInputStream(InputStream stream)","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"javax.imageio.stream.MemoryCacheImageOutputStream","api":"MemoryCacheImageOutputStream","signature":"public MemoryCacheImageOutputStream(OutputStream stream)","paramTypes":["OutputStream"],"notNullIndices":[0]},{"className":"javax.lang.model.SourceVersion","api":"valueOf","signature":"public static SourceVersion valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.lang.model.element.ElementKind","api":"valueOf","signature":"public static ElementKind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.lang.model.element.Modifier","api":"valueOf","signature":"public static Modifier valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.lang.model.element.ModuleElement.DirectiveKind","api":"valueOf","signature":"public static ModuleElement.DirectiveKind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.lang.model.element.NestingKind","api":"valueOf","signature":"public static NestingKind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.lang.model.type.TypeKind","api":"valueOf","signature":"public static TypeKind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.lang.model.util.Elements.Origin","api":"valueOf","signature":"public static Elements.Origin valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.AttributeChangeNotificationFilter","api":"enableAttribute","signature":"public void enableAttribute(String name) throws IllegalArgumentException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.AttributeList","api":"AttributeList","signature":"public AttributeList(List<Attribute> list)","paramTypes":["List"],"notNullIndices":[0]},{"className":"javax.management.Descriptor","api":"setFields","signature":"void setFields(String[] fieldNames, Object[] fieldValues) throws RuntimeOperationsException","paramTypes":["String[]","Object[]"],"notNullIndices":[0,1]},{"className":"javax.management.ImmutableDescriptor","api":"ImmutableDescriptor","signature":"public ImmutableDescriptor(String... fields)","paramTypes":["String..."],"notNullIndices":[0]},{"className":"javax.management.ImmutableDescriptor","api":"ImmutableDescriptor","signature":"public ImmutableDescriptor(Map<String,?> fields)","paramTypes":["Map"],"notNullIndices":[0]},{"className":"javax.management.ImmutableDescriptor","api":"setFields","signature":"public final void setFields(String[] fieldNames, Object[] fieldValues) throws RuntimeOperationsException","paramTypes":["String[]","Object[]"],"notNullIndices":[0,1]},{"className":"javax.management.JMX","api":"isMXBeanInterface","signature":"public static boolean isMXBeanInterface(Class<?> interfaceClass)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"javax.management.MBeanServer","api":"unregisterMBean","signature":"void unregisterMBean(ObjectName name) throws InstanceNotFoundException, MBeanRegistrationException","paramTypes":["ObjectName"],"notNullIndices":[0]},{"className":"javax.management.MBeanServer","api":"isRegistered","signature":"boolean isRegistered(ObjectName name)","paramTypes":["ObjectName"],"notNullIndices":[0]},{"className":"javax.management.MBeanServer","api":"instantiate","signature":"Object instantiate(String className) throws ReflectionException, MBeanException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.MBeanServerConnection","api":"unregisterMBean","signature":"void unregisterMBean(ObjectName name) throws InstanceNotFoundException, MBeanRegistrationException, IOException","paramTypes":["ObjectName"],"notNullIndices":[0]},{"className":"javax.management.MBeanServerConnection","api":"isRegistered","signature":"boolean isRegistered(ObjectName name) throws IOException","paramTypes":["ObjectName"],"notNullIndices":[0]},{"className":"javax.management.MBeanServerFactory","api":"createMBeanServer","signature":"public static MBeanServer createMBeanServer(String domain)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.MBeanServerFactory","api":"newMBeanServer","signature":"public static MBeanServer newMBeanServer(String domain)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.MBeanServerFactory","api":"getClassLoaderRepository","signature":"public static ClassLoaderRepository getClassLoaderRepository(MBeanServer server)","paramTypes":["MBeanServer"],"notNullIndices":[0]},{"className":"javax.management.MBeanServerPermission","api":"MBeanServerPermission","signature":"public MBeanServerPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.MBeanServerPermission","api":"MBeanServerPermission","signature":"public MBeanServerPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.management.MBeanServerPermission","api":"MBeanServerPermission","signature":"public MBeanServerPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.management.MBeanTrustPermission","api":"MBeanTrustPermission","signature":"public MBeanTrustPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.MBeanTrustPermission","api":"MBeanTrustPermission","signature":"public MBeanTrustPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.management.NotificationBroadcasterSupport","api":"addNotificationListener","signature":"public void addNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)","paramTypes":["NotificationListener","NotificationFilter","Object"],"notNullIndices":[0]},{"className":"javax.management.NotificationFilterSupport","api":"enableType","signature":"public void enableType(String prefix) throws IllegalArgumentException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.ObjectName","api":"ObjectName","signature":"public ObjectName(String name) throws MalformedObjectNameException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.ObjectName","api":"getInstance","signature":"public static ObjectName getInstance(String name) throws MalformedObjectNameException, NullPointerException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.ObjectName","api":"getInstance","signature":"public static ObjectName getInstance(ObjectName name)","paramTypes":["ObjectName"],"notNullIndices":[0]},{"className":"javax.management.ObjectName","api":"isPropertyValuePattern","signature":"public boolean isPropertyValuePattern(String property)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.ObjectName","api":"getKeyProperty","signature":"public String getKeyProperty(String property)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.ObjectName","api":"quote","signature":"public static String quote(String s)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.ObjectName","api":"unquote","signature":"public static String unquote(String q)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.ObjectName","api":"apply","signature":"public boolean apply(ObjectName name)","paramTypes":["ObjectName"],"notNullIndices":[0]},{"className":"javax.management.StandardEmitterMBean","api":"StandardEmitterMBean","signature":"public StandardEmitterMBean(T implementation, Class<T> mbeanInterface, NotificationEmitter emitter)","paramTypes":["T","Class","NotificationEmitter"],"notNullIndices":[0,1,2]},{"className":"javax.management.StandardEmitterMBean","api":"StandardEmitterMBean","signature":"public StandardEmitterMBean(T implementation, Class<T> mbeanInterface, boolean isMXBean, NotificationEmitter emitter)","paramTypes":["T","Class","boolean","NotificationEmitter"],"notNullIndices":[0,1,3]},{"className":"javax.management.StandardEmitterMBean","api":"StandardEmitterMBean","signature":"protected StandardEmitterMBean(Class<?> mbeanInterface, NotificationEmitter emitter)","paramTypes":["Class","NotificationEmitter"],"notNullIndices":[0,1]},{"className":"javax.management.StandardEmitterMBean","api":"StandardEmitterMBean","signature":"protected StandardEmitterMBean(Class<?> mbeanInterface, boolean isMXBean, NotificationEmitter emitter)","paramTypes":["Class","boolean","NotificationEmitter"],"notNullIndices":[0,2]},{"className":"javax.management.StandardMBean","api":"StandardMBean","signature":"public StandardMBean(T implementation, Class<T> mbeanInterface) throws NotCompliantMBeanException","paramTypes":["T","Class"],"notNullIndices":[0]},{"className":"javax.management.StandardMBean","api":"StandardMBean","signature":"public StandardMBean(T implementation, Class<T> mbeanInterface, boolean isMXBean)","paramTypes":["T","Class","boolean"],"notNullIndices":[0]},{"className":"javax.management.StandardMBean","api":"setImplementation","signature":"public void setImplementation(Object implementation) throws NotCompliantMBeanException","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.management.loading.MLet","api":"getMBeansFromURL","signature":"public Set<Object> getMBeansFromURL(URL url) throws ServiceNotFoundException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.management.loading.MLetMBean","api":"getMBeansFromURL","signature":"Set<Object> getMBeansFromURL(URL url) throws ServiceNotFoundException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.DescriptorSupport","api":"DescriptorSupport","signature":"public DescriptorSupport(String inStr) throws MBeanException, RuntimeOperationsException, XMLParseException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.DescriptorSupport","api":"DescriptorSupport","signature":"public DescriptorSupport(String... fields)","paramTypes":["String..."],"notNullIndices":[0]},{"className":"javax.management.modelmbean.DescriptorSupport","api":"DescriptorSupport","signature":"public DescriptorSupport(String... fields)","paramTypes":["String..."],"notNullIndices":[0]},{"className":"javax.management.modelmbean.ModelMBean","api":"setModelMBeanInfo","signature":"void setModelMBeanInfo(ModelMBeanInfo inModelMBeanInfo) throws MBeanException, RuntimeOperationsException","paramTypes":["ModelMBeanInfo"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.ModelMBeanInfo","api":"getDescriptors","signature":"Descriptor[] getDescriptors(String inDescriptorType) throws MBeanException, RuntimeOperationsException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.ModelMBeanInfo","api":"setDescriptors","signature":"void setDescriptors(Descriptor[] inDescriptors) throws MBeanException, RuntimeOperationsException","paramTypes":["Descriptor[]"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.ModelMBeanInfo","api":"getAttribute","signature":"ModelMBeanAttributeInfo getAttribute(String inName) throws MBeanException, RuntimeOperationsException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.ModelMBeanInfo","api":"getOperation","signature":"ModelMBeanOperationInfo getOperation(String inName) throws MBeanException, RuntimeOperationsException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.ModelMBeanInfo","api":"getNotification","signature":"ModelMBeanNotificationInfo getNotification(String inName) throws MBeanException, RuntimeOperationsException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.ModelMBeanInfoSupport","api":"getDescriptor","signature":"public Descriptor getDescriptor(String inDescriptorName) throws MBeanException, RuntimeOperationsException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.ModelMBeanInfoSupport","api":"getConstructor","signature":"public ModelMBeanConstructorInfo getConstructor(String inName) throws MBeanException, RuntimeOperationsException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.ModelMBeanNotificationBroadcaster","api":"sendNotification","signature":"void sendNotification(Notification ntfyObj) throws MBeanException, RuntimeOperationsException","paramTypes":["Notification"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.ModelMBeanNotificationBroadcaster","api":"sendNotification","signature":"void sendNotification(String ntfyText) throws MBeanException, RuntimeOperationsException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.ModelMBeanNotificationBroadcaster","api":"sendAttributeChangeNotification","signature":"void sendAttributeChangeNotification(AttributeChangeNotification notification) throws MBeanException, RuntimeOperationsException","paramTypes":["AttributeChangeNotification"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.RequiredModelMBean","api":"RequiredModelMBean","signature":"public RequiredModelMBean(ModelMBeanInfo mbi) throws MBeanException, RuntimeOperationsException","paramTypes":["ModelMBeanInfo"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.RequiredModelMBean","api":"setModelMBeanInfo","signature":"public void setModelMBeanInfo(ModelMBeanInfo mbi) throws MBeanException, RuntimeOperationsException","paramTypes":["ModelMBeanInfo"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.RequiredModelMBean","api":"getAttribute","signature":"public Object getAttribute(String attrName) throws AttributeNotFoundException, MBeanException, ReflectionException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.RequiredModelMBean","api":"getAttribute","signature":"public Object getAttribute(String attrName) throws AttributeNotFoundException, MBeanException, ReflectionException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.RequiredModelMBean","api":"getAttributes","signature":"public AttributeList getAttributes(String[] attrNames)","paramTypes":["String[]"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.RequiredModelMBean","api":"setAttribute","signature":"public void setAttribute(Attribute attribute) throws AttributeNotFoundException, InvalidAttributeValueException, MBeanException, ReflectionException","paramTypes":["Attribute"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.RequiredModelMBean","api":"setAttributes","signature":"public AttributeList setAttributes(AttributeList attributes)","paramTypes":["AttributeList"],"notNullIndices":[0]},{"className":"javax.management.modelmbean.RequiredModelMBean","api":"removeNotificationListener","signature":"public void removeNotificationListener(NotificationListener listener) throws ListenerNotFoundException","paramTypes":["NotificationListener"],"notNullIndices":[0]},{"className":"javax.management.monitor.CounterMonitor","api":"setInitThreshold","signature":"public void setInitThreshold(Number value) throws IllegalArgumentException","paramTypes":["Number"],"notNullIndices":[0]},{"className":"javax.management.monitor.CounterMonitor","api":"setOffset","signature":"public void setOffset(Number value) throws IllegalArgumentException","paramTypes":["Number"],"notNullIndices":[0]},{"className":"javax.management.monitor.CounterMonitor","api":"setModulus","signature":"public void setModulus(Number value) throws IllegalArgumentException","paramTypes":["Number"],"notNullIndices":[0]},{"className":"javax.management.monitor.CounterMonitorMBean","api":"setInitThreshold","signature":"void setInitThreshold(Number value) throws IllegalArgumentException","paramTypes":["Number"],"notNullIndices":[0]},{"className":"javax.management.monitor.CounterMonitorMBean","api":"setOffset","signature":"void setOffset(Number value) throws IllegalArgumentException","paramTypes":["Number"],"notNullIndices":[0]},{"className":"javax.management.monitor.CounterMonitorMBean","api":"setModulus","signature":"void setModulus(Number value) throws IllegalArgumentException","paramTypes":["Number"],"notNullIndices":[0]},{"className":"javax.management.monitor.Monitor","api":"addObservedObject","signature":"public void addObservedObject(ObjectName object) throws IllegalArgumentException","paramTypes":["ObjectName"],"notNullIndices":[0]},{"className":"javax.management.monitor.Monitor","api":"setObservedAttribute","signature":"public void setObservedAttribute(String attribute) throws IllegalArgumentException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.monitor.MonitorMBean","api":"addObservedObject","signature":"void addObservedObject(ObjectName object) throws IllegalArgumentException","paramTypes":["ObjectName"],"notNullIndices":[0]},{"className":"javax.management.monitor.StringMonitor","api":"setStringToCompare","signature":"public void setStringToCompare(String value) throws IllegalArgumentException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.monitor.StringMonitorMBean","api":"setStringToCompare","signature":"void setStringToCompare(String value) throws IllegalArgumentException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.openmbean.CompositeData","api":"get","signature":"Object get(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.openmbean.CompositeData","api":"getAll","signature":"Object[] getAll(String[] keys)","paramTypes":["String[]"],"notNullIndices":[0]},{"className":"javax.management.openmbean.CompositeDataInvocationHandler","api":"CompositeDataInvocationHandler","signature":"public CompositeDataInvocationHandler(CompositeData compositeData)","paramTypes":["CompositeData"],"notNullIndices":[0]},{"className":"javax.management.openmbean.CompositeDataSupport","api":"get","signature":"public Object get(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.openmbean.CompositeDataSupport","api":"getAll","signature":"public Object[] getAll(String[] keys)","paramTypes":["String[]"],"notNullIndices":[0]},{"className":"javax.management.openmbean.CompositeType","api":"CompositeType","signature":"public CompositeType(String typeName, String description, String[] itemNames, String[] itemDescriptions, OpenType<?>[] itemTypes) throws OpenDataException","paramTypes":["String","String","String[]","String[]","OpenType[]"],"notNullIndices":[0,1,2,3,4]},{"className":"javax.management.openmbean.OpenMBeanAttributeInfoSupport","api":"OpenMBeanAttributeInfoSupport","signature":"public OpenMBeanAttributeInfoSupport(String name, String description, OpenType<?> openType, boolean isReadable, boolean isWritable, boolean isIs)","paramTypes":["String","String","OpenType","boolean","boolean","boolean"],"notNullIndices":[0,1,2]},{"className":"javax.management.openmbean.OpenMBeanAttributeInfoSupport","api":"OpenMBeanAttributeInfoSupport","signature":"public OpenMBeanAttributeInfoSupport(String name, String description, OpenType<?> openType, boolean isReadable, boolean isWritable, boolean isIs, Descriptor descriptor)","paramTypes":["String","String","OpenType","boolean","boolean","boolean","Descriptor"],"notNullIndices":[0,1,2]},{"className":"javax.management.openmbean.OpenMBeanAttributeInfoSupport","api":"OpenMBeanAttributeInfoSupport","signature":"public OpenMBeanAttributeInfoSupport(String name, String description, OpenType<T> openType, boolean isReadable, boolean isWritable, boolean isIs, T defaultValue) throws OpenDataException","paramTypes":["String","String","OpenType","boolean","boolean","boolean","T"],"notNullIndices":[0,1,2]},{"className":"javax.management.openmbean.OpenMBeanAttributeInfoSupport","api":"OpenMBeanAttributeInfoSupport","signature":"public OpenMBeanAttributeInfoSupport(String name, String description, OpenType<T> openType, boolean isReadable, boolean isWritable, boolean isIs, T defaultValue) throws OpenDataException","paramTypes":["String","String","OpenType","boolean","boolean","boolean","T"],"notNullIndices":[2,6]},{"className":"javax.management.openmbean.OpenMBeanAttributeInfoSupport","api":"OpenMBeanAttributeInfoSupport","signature":"public OpenMBeanAttributeInfoSupport(String name, String description, OpenType<T> openType, boolean isReadable, boolean isWritable, boolean isIs, T defaultValue, T[] legalValues) throws OpenDataException","paramTypes":["String","String","OpenType","boolean","boolean","boolean","T","T[]"],"notNullIndices":[0,1,2]},{"className":"javax.management.openmbean.OpenMBeanAttributeInfoSupport","api":"OpenMBeanAttributeInfoSupport","signature":"public OpenMBeanAttributeInfoSupport(String name, String description, OpenType<T> openType, boolean isReadable, boolean isWritable, boolean isIs, T defaultValue, T[] legalValues) throws OpenDataException","paramTypes":["String","String","OpenType","boolean","boolean","boolean","T","T[]"],"notNullIndices":[2,6,7]},{"className":"javax.management.openmbean.OpenMBeanAttributeInfoSupport","api":"OpenMBeanAttributeInfoSupport","signature":"public OpenMBeanAttributeInfoSupport(String name, String description, OpenType<T> openType, boolean isReadable, boolean isWritable, boolean isIs, T defaultValue, Comparable<T> minValue, Comparable<T> maxValue) throws OpenDataException","paramTypes":["String","String","OpenType","boolean","boolean","boolean","T","Comparable","Comparable"],"notNullIndices":[0,1,2]},{"className":"javax.management.openmbean.OpenMBeanAttributeInfoSupport","api":"OpenMBeanAttributeInfoSupport","signature":"public OpenMBeanAttributeInfoSupport(String name, String description, OpenType<T> openType, boolean isReadable, boolean isWritable, boolean isIs, T defaultValue, Comparable<T> minValue, Comparable<T> maxValue) throws OpenDataException","paramTypes":["String","String","OpenType","boolean","boolean","boolean","T","Comparable","Comparable"],"notNullIndices":[2,6,7,8]},{"className":"javax.management.openmbean.OpenMBeanConstructorInfoSupport","api":"OpenMBeanConstructorInfoSupport","signature":"public OpenMBeanConstructorInfoSupport(String name, String description, OpenMBeanParameterInfo[] signature)","paramTypes":["String","String","OpenMBeanParameterInfo[]"],"notNullIndices":[0,1]},{"className":"javax.management.openmbean.OpenMBeanConstructorInfoSupport","api":"OpenMBeanConstructorInfoSupport","signature":"public OpenMBeanConstructorInfoSupport(String name, String description, OpenMBeanParameterInfo[] signature, Descriptor descriptor)","paramTypes":["String","String","OpenMBeanParameterInfo[]","Descriptor"],"notNullIndices":[0,1]},{"className":"javax.management.openmbean.OpenMBeanOperationInfoSupport","api":"OpenMBeanOperationInfoSupport","signature":"public OpenMBeanOperationInfoSupport(String name, String description, OpenMBeanParameterInfo[] signature, OpenType<?> returnOpenType, int impact)","paramTypes":["String","String","OpenMBeanParameterInfo[]","OpenType","int"],"notNullIndices":[0,1,3]},{"className":"javax.management.openmbean.OpenMBeanOperationInfoSupport","api":"OpenMBeanOperationInfoSupport","signature":"public OpenMBeanOperationInfoSupport(String name, String description, OpenMBeanParameterInfo[] signature, OpenType<?> returnOpenType, int impact, Descriptor descriptor)","paramTypes":["String","String","OpenMBeanParameterInfo[]","OpenType","int","Descriptor"],"notNullIndices":[0,1,3]},{"className":"javax.management.openmbean.OpenMBeanParameterInfoSupport","api":"OpenMBeanParameterInfoSupport","signature":"public OpenMBeanParameterInfoSupport(String name, String description, OpenType<?> openType)","paramTypes":["String","String","OpenType"],"notNullIndices":[0,1,2]},{"className":"javax.management.openmbean.OpenMBeanParameterInfoSupport","api":"OpenMBeanParameterInfoSupport","signature":"public OpenMBeanParameterInfoSupport(String name, String description, OpenType<?> openType, Descriptor descriptor)","paramTypes":["String","String","OpenType","Descriptor"],"notNullIndices":[0,1,2]},{"className":"javax.management.openmbean.OpenMBeanParameterInfoSupport","api":"OpenMBeanParameterInfoSupport","signature":"public OpenMBeanParameterInfoSupport(String name, String description, OpenType<T> openType, T defaultValue) throws OpenDataException","paramTypes":["String","String","OpenType","T"],"notNullIndices":[0,1,2]},{"className":"javax.management.openmbean.OpenMBeanParameterInfoSupport","api":"OpenMBeanParameterInfoSupport","signature":"public OpenMBeanParameterInfoSupport(String name, String description, OpenType<T> openType, T defaultValue) throws OpenDataException","paramTypes":["String","String","OpenType","T"],"notNullIndices":[2,3]},{"className":"javax.management.openmbean.OpenMBeanParameterInfoSupport","api":"OpenMBeanParameterInfoSupport","signature":"public OpenMBeanParameterInfoSupport(String name, String description, OpenType<T> openType, T defaultValue, T[] legalValues) throws OpenDataException","paramTypes":["String","String","OpenType","T","T[]"],"notNullIndices":[0,1,2]},{"className":"javax.management.openmbean.OpenMBeanParameterInfoSupport","api":"OpenMBeanParameterInfoSupport","signature":"public OpenMBeanParameterInfoSupport(String name, String description, OpenType<T> openType, T defaultValue, T[] legalValues) throws OpenDataException","paramTypes":["String","String","OpenType","T","T[]"],"notNullIndices":[2,3,4]},{"className":"javax.management.openmbean.OpenMBeanParameterInfoSupport","api":"OpenMBeanParameterInfoSupport","signature":"public OpenMBeanParameterInfoSupport(String name, String description, OpenType<T> openType, T defaultValue, Comparable<T> minValue, Comparable<T> maxValue) throws OpenDataException","paramTypes":["String","String","OpenType","T","Comparable","Comparable"],"notNullIndices":[0,1,2]},{"className":"javax.management.openmbean.OpenMBeanParameterInfoSupport","api":"OpenMBeanParameterInfoSupport","signature":"public OpenMBeanParameterInfoSupport(String name, String description, OpenType<T> openType, T defaultValue, Comparable<T> minValue, Comparable<T> maxValue) throws OpenDataException","paramTypes":["String","String","OpenType","T","Comparable","Comparable"],"notNullIndices":[2,3,4,5]},{"className":"javax.management.openmbean.OpenType<T>","api":"OpenType","signature":"protected OpenType(String className, String typeName, String description) throws OpenDataException","paramTypes":["String","String","String"],"notNullIndices":[0,1,2]},{"className":"javax.management.openmbean.TabularData","api":"calculateIndex","signature":"Object[] calculateIndex(CompositeData value)","paramTypes":["CompositeData"],"notNullIndices":[0]},{"className":"javax.management.openmbean.TabularData","api":"get","signature":"CompositeData get(Object[] key)","paramTypes":["Object[]"],"notNullIndices":[0]},{"className":"javax.management.openmbean.TabularData","api":"put","signature":"void put(CompositeData value)","paramTypes":["CompositeData"],"notNullIndices":[0]},{"className":"javax.management.openmbean.TabularData","api":"remove","signature":"CompositeData remove(Object[] key)","paramTypes":["Object[]"],"notNullIndices":[0]},{"className":"javax.management.openmbean.TabularData","api":"putAll","signature":"void putAll(CompositeData[] values)","paramTypes":["CompositeData[]"],"notNullIndices":[0]},{"className":"javax.management.openmbean.TabularDataSupport","api":"TabularDataSupport","signature":"public TabularDataSupport(TabularType tabularType)","paramTypes":["TabularType"],"notNullIndices":[0]},{"className":"javax.management.openmbean.TabularDataSupport","api":"calculateIndex","signature":"public Object[] calculateIndex(CompositeData value)","paramTypes":["CompositeData"],"notNullIndices":[0]},{"className":"javax.management.openmbean.TabularDataSupport","api":"get","signature":"public Object get(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.management.openmbean.TabularDataSupport","api":"get","signature":"public CompositeData get(Object[] key)","paramTypes":["Object[]"],"notNullIndices":[0]},{"className":"javax.management.openmbean.TabularDataSupport","api":"put","signature":"public Object put(Object key, Object value)","paramTypes":["Object","Object"],"notNullIndices":[1]},{"className":"javax.management.openmbean.TabularDataSupport","api":"remove","signature":"public Object remove(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.management.openmbean.TabularDataSupport","api":"remove","signature":"public CompositeData remove(Object[] key)","paramTypes":["Object[]"],"notNullIndices":[0]},{"className":"javax.management.openmbean.TabularDataSupport","api":"putAll","signature":"public void putAll(Map<?,?> t)","paramTypes":["Map"],"notNullIndices":[0]},{"className":"javax.management.openmbean.TabularDataSupport","api":"putAll","signature":"public void putAll(CompositeData[] values)","paramTypes":["CompositeData[]"],"notNullIndices":[0]},{"className":"javax.management.openmbean.TabularType","api":"TabularType","signature":"public TabularType(String typeName, String description, CompositeType rowType, String[] indexNames) throws OpenDataException","paramTypes":["String","String","CompositeType","String[]"],"notNullIndices":[0,1,2,3]},{"className":"javax.management.relation.MBeanServerNotificationFilter","api":"disableObjectName","signature":"public void disableObjectName(ObjectName objectName) throws IllegalArgumentException","paramTypes":["ObjectName"],"notNullIndices":[0]},{"className":"javax.management.relation.MBeanServerNotificationFilter","api":"enableObjectName","signature":"public void enableObjectName(ObjectName objectName) throws IllegalArgumentException","paramTypes":["ObjectName"],"notNullIndices":[0]},{"className":"javax.management.relation.MBeanServerNotificationFilter","api":"isNotificationEnabled","signature":"public boolean isNotificationEnabled(Notification notif) throws IllegalArgumentException","paramTypes":["Notification"],"notNullIndices":[0]},{"className":"javax.management.relation.Relation","api":"getRole","signature":"List<ObjectName> getRole(String roleName) throws IllegalArgumentException, RoleNotFoundException, RelationServiceNotRegisteredException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.Relation","api":"getRoles","signature":"RoleResult getRoles(String[] roleNameArray) throws IllegalArgumentException, RelationServiceNotRegisteredException","paramTypes":["String[]"],"notNullIndices":[0]},{"className":"javax.management.relation.Relation","api":"getRoleCardinality","signature":"Integer getRoleCardinality(String roleName) throws IllegalArgumentException, RoleNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.Relation","api":"setRole","signature":"void setRole(Role role) throws IllegalArgumentException, RoleNotFoundException, RelationTypeNotFoundException, InvalidRoleValueException, RelationServiceNotRegisteredException, RelationNotFoundException","paramTypes":["Role"],"notNullIndices":[0]},{"className":"javax.management.relation.Relation","api":"setRoles","signature":"RoleResult setRoles(RoleList roleList) throws IllegalArgumentException, RelationServiceNotRegisteredException, RelationTypeNotFoundException, RelationNotFoundException","paramTypes":["RoleList"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationService","api":"addRelationType","signature":"public void addRelationType(RelationType relationTypeObj) throws IllegalArgumentException, InvalidRelationTypeException","paramTypes":["RelationType"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationService","api":"addRelationType","signature":"public void addRelationType(RelationType relationTypeObj) throws IllegalArgumentException, InvalidRelationTypeException","paramTypes":["RelationType"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationService","api":"getRoleInfos","signature":"public List<RoleInfo> getRoleInfos(String relationTypeName) throws IllegalArgumentException, RelationTypeNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationService","api":"removeRelationType","signature":"public void removeRelationType(String relationTypeName) throws RelationServiceNotRegisteredException, IllegalArgumentException, RelationTypeNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationService","api":"addRelation","signature":"public void addRelation(ObjectName relationObjectName) throws IllegalArgumentException, RelationServiceNotRegisteredException, NoSuchMethodException, InvalidRelationIdException, InstanceNotFoundException, InvalidRelationServiceException, RelationTypeNotFoundException, RoleNotFoundException, InvalidRoleValueException","paramTypes":["ObjectName"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationService","api":"isRelationMBean","signature":"public ObjectName isRelationMBean(String relationId) throws IllegalArgumentException, RelationNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationService","api":"isRelation","signature":"public String isRelation(ObjectName objectName) throws IllegalArgumentException","paramTypes":["ObjectName"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationService","api":"hasRelation","signature":"public Boolean hasRelation(String relationId) throws IllegalArgumentException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationService","api":"sendRelationCreationNotification","signature":"public void sendRelationCreationNotification(String relationId) throws IllegalArgumentException, RelationNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationService","api":"removeRelation","signature":"public void removeRelation(String relationId) throws RelationServiceNotRegisteredException, IllegalArgumentException, RelationNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationService","api":"findRelationsOfType","signature":"public List<String> findRelationsOfType(String relationTypeName) throws IllegalArgumentException, RelationTypeNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationService","api":"getAllRoles","signature":"public RoleResult getAllRoles(String relationId) throws IllegalArgumentException, RelationNotFoundException, RelationServiceNotRegisteredException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationService","api":"getReferencedMBeans","signature":"public Map<ObjectName,List<String>> getReferencedMBeans(String relationId) throws IllegalArgumentException, RelationNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationService","api":"getRelationTypeName","signature":"public String getRelationTypeName(String relationId) throws IllegalArgumentException, RelationNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationServiceMBean","api":"addRelationType","signature":"void addRelationType(RelationType relationTypeObj) throws IllegalArgumentException, InvalidRelationTypeException","paramTypes":["RelationType"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationServiceMBean","api":"getRoleInfos","signature":"List<RoleInfo> getRoleInfos(String relationTypeName) throws IllegalArgumentException, RelationTypeNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationServiceMBean","api":"removeRelationType","signature":"void removeRelationType(String relationTypeName) throws RelationServiceNotRegisteredException, IllegalArgumentException, RelationTypeNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationServiceMBean","api":"addRelation","signature":"void addRelation(ObjectName relationObjectName) throws IllegalArgumentException, RelationServiceNotRegisteredException, NoSuchMethodException, InvalidRelationIdException, InstanceNotFoundException, InvalidRelationServiceException, RelationTypeNotFoundException, RoleNotFoundException, InvalidRoleValueException","paramTypes":["ObjectName"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationServiceMBean","api":"isRelationMBean","signature":"ObjectName isRelationMBean(String relationId) throws IllegalArgumentException, RelationNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationServiceMBean","api":"isRelation","signature":"String isRelation(ObjectName objectName) throws IllegalArgumentException","paramTypes":["ObjectName"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationServiceMBean","api":"hasRelation","signature":"Boolean hasRelation(String relationId) throws IllegalArgumentException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationServiceMBean","api":"sendRelationCreationNotification","signature":"void sendRelationCreationNotification(String relationId) throws IllegalArgumentException, RelationNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationServiceMBean","api":"removeRelation","signature":"void removeRelation(String relationId) throws RelationServiceNotRegisteredException, IllegalArgumentException, RelationNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationServiceMBean","api":"findRelationsOfType","signature":"List<String> findRelationsOfType(String relationTypeName) throws IllegalArgumentException, RelationTypeNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationServiceMBean","api":"getAllRoles","signature":"RoleResult getAllRoles(String relationId) throws IllegalArgumentException, RelationNotFoundException, RelationServiceNotRegisteredException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationServiceMBean","api":"getReferencedMBeans","signature":"Map<ObjectName,List<String>> getReferencedMBeans(String relationId) throws IllegalArgumentException, RelationNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationServiceMBean","api":"getRelationTypeName","signature":"String getRelationTypeName(String relationId) throws IllegalArgumentException, RelationNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationSupport","api":"getRole","signature":"public List<ObjectName> getRole(String roleName) throws IllegalArgumentException, RoleNotFoundException, RelationServiceNotRegisteredException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationSupport","api":"getRoles","signature":"public RoleResult getRoles(String[] roleNameArray) throws IllegalArgumentException, RelationServiceNotRegisteredException","paramTypes":["String[]"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationSupport","api":"getRoleCardinality","signature":"public Integer getRoleCardinality(String roleName) throws IllegalArgumentException, RoleNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationSupport","api":"setRole","signature":"public void setRole(Role role) throws IllegalArgumentException, RoleNotFoundException, RelationTypeNotFoundException, InvalidRoleValueException, RelationServiceNotRegisteredException, RelationNotFoundException","paramTypes":["Role"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationSupport","api":"setRoles","signature":"public RoleResult setRoles(RoleList list) throws IllegalArgumentException, RelationServiceNotRegisteredException, RelationTypeNotFoundException, RelationNotFoundException","paramTypes":["RoleList"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationSupportMBean","api":"setRelationServiceManagementFlag","signature":"void setRelationServiceManagementFlag(Boolean flag) throws IllegalArgumentException","paramTypes":["Boolean"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationType","api":"getRoleInfo","signature":"RoleInfo getRoleInfo(String roleInfoName) throws IllegalArgumentException, RoleInfoNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationTypeSupport","api":"RelationTypeSupport","signature":"protected RelationTypeSupport(String relationTypeName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationTypeSupport","api":"getRoleInfo","signature":"public RoleInfo getRoleInfo(String roleInfoName) throws IllegalArgumentException, RoleInfoNotFoundException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RelationTypeSupport","api":"addRoleInfo","signature":"protected void addRoleInfo(RoleInfo roleInfo) throws IllegalArgumentException, InvalidRelationTypeException","paramTypes":["RoleInfo"],"notNullIndices":[0]},{"className":"javax.management.relation.Role","api":"setRoleName","signature":"public void setRoleName(String roleName) throws IllegalArgumentException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.Role","api":"setRoleValue","signature":"public void setRoleValue(List<ObjectName> roleValue) throws IllegalArgumentException","paramTypes":["List"],"notNullIndices":[0]},{"className":"javax.management.relation.Role","api":"roleValueToString","signature":"public static String roleValueToString(List<ObjectName> roleValue) throws IllegalArgumentException","paramTypes":["List"],"notNullIndices":[0]},{"className":"javax.management.relation.RoleInfo","api":"RoleInfo","signature":"public RoleInfo(RoleInfo roleInfo) throws IllegalArgumentException","paramTypes":["RoleInfo"],"notNullIndices":[0]},{"className":"javax.management.relation.RoleList","api":"RoleList","signature":"public RoleList(List<Role> list) throws IllegalArgumentException","paramTypes":["List"],"notNullIndices":[0]},{"className":"javax.management.relation.RoleList","api":"add","signature":"public void add(Role role) throws IllegalArgumentException","paramTypes":["Role"],"notNullIndices":[0]},{"className":"javax.management.relation.RoleList","api":"add","signature":"public void add(int index, Role role) throws IllegalArgumentException, IndexOutOfBoundsException","paramTypes":["int","Role"],"notNullIndices":[1]},{"className":"javax.management.relation.RoleList","api":"set","signature":"public void set(int index, Role role) throws IllegalArgumentException, IndexOutOfBoundsException","paramTypes":["int","Role"],"notNullIndices":[1]},{"className":"javax.management.relation.RoleUnresolved","api":"setRoleName","signature":"public void setRoleName(String name) throws IllegalArgumentException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.relation.RoleUnresolvedList","api":"RoleUnresolvedList","signature":"public RoleUnresolvedList(List<RoleUnresolved> list) throws IllegalArgumentException","paramTypes":["List"],"notNullIndices":[0]},{"className":"javax.management.relation.RoleUnresolvedList","api":"add","signature":"public void add(RoleUnresolved role) throws IllegalArgumentException","paramTypes":["RoleUnresolved"],"notNullIndices":[0]},{"className":"javax.management.relation.RoleUnresolvedList","api":"add","signature":"public void add(int index, RoleUnresolved role) throws IllegalArgumentException, IndexOutOfBoundsException","paramTypes":["int","RoleUnresolved"],"notNullIndices":[1]},{"className":"javax.management.relation.RoleUnresolvedList","api":"set","signature":"public void set(int index, RoleUnresolved role) throws IllegalArgumentException, IndexOutOfBoundsException","paramTypes":["int","RoleUnresolved"],"notNullIndices":[1]},{"className":"javax.management.remote.JMXConnectionNotification","api":"JMXConnectionNotification","signature":"public JMXConnectionNotification(String type, Object source, String connectionId, long sequenceNumber, String message, Object userData)","paramTypes":["String","Object","String","long","String","Object"],"notNullIndices":[0,1,2]},{"className":"javax.management.remote.JMXConnector","api":"addConnectionNotificationListener","signature":"void addConnectionNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)","paramTypes":["NotificationListener","NotificationFilter","Object"],"notNullIndices":[0]},{"className":"javax.management.remote.JMXConnector","api":"removeConnectionNotificationListener","signature":"void removeConnectionNotificationListener(NotificationListener listener) throws ListenerNotFoundException","paramTypes":["NotificationListener"],"notNullIndices":[0]},{"className":"javax.management.remote.JMXConnectorFactory","api":"connect","signature":"public static JMXConnector connect(JMXServiceURL serviceURL) throws IOException","paramTypes":["JMXServiceURL"],"notNullIndices":[0]},{"className":"javax.management.remote.JMXConnectorFactory","api":"connect","signature":"public static JMXConnector connect(JMXServiceURL serviceURL, Map<String,?> environment) throws IOException","paramTypes":["JMXServiceURL","Map"],"notNullIndices":[0]},{"className":"javax.management.remote.JMXConnectorFactory","api":"newJMXConnector","signature":"public static JMXConnector newJMXConnector(JMXServiceURL serviceURL, Map<String,?> environment) throws IOException","paramTypes":["JMXServiceURL","Map"],"notNullIndices":[0]},{"className":"javax.management.remote.JMXConnectorProvider","api":"newJMXConnector","signature":"JMXConnector newJMXConnector(JMXServiceURL serviceURL, Map<String,?> environment) throws IOException","paramTypes":["JMXServiceURL","Map"],"notNullIndices":[0,1]},{"className":"javax.management.remote.JMXConnectorServer","api":"connectionOpened","signature":"protected void connectionOpened(String connectionId, String message, Object userData)","paramTypes":["String","String","Object"],"notNullIndices":[0]},{"className":"javax.management.remote.JMXConnectorServer","api":"connectionClosed","signature":"protected void connectionClosed(String connectionId, String message, Object userData)","paramTypes":["String","String","Object"],"notNullIndices":[0]},{"className":"javax.management.remote.JMXConnectorServer","api":"connectionFailed","signature":"protected void connectionFailed(String connectionId, String message, Object userData)","paramTypes":["String","String","Object"],"notNullIndices":[0]},{"className":"javax.management.remote.JMXConnectorServer","api":"preRegister","signature":"public ObjectName preRegister(MBeanServer mbs, ObjectName name)","paramTypes":["MBeanServer","ObjectName"],"notNullIndices":[0,1]},{"className":"javax.management.remote.JMXConnectorServerFactory","api":"newJMXConnectorServer","signature":"public static JMXConnectorServer newJMXConnectorServer(JMXServiceURL serviceURL, Map<String,?> environment, MBeanServer mbeanServer) throws IOException","paramTypes":["JMXServiceURL","Map","MBeanServer"],"notNullIndices":[0]},{"className":"javax.management.remote.JMXConnectorServerMBean","api":"setMBeanServerForwarder","signature":"void setMBeanServerForwarder(MBeanServerForwarder mbsf)","paramTypes":["MBeanServerForwarder"],"notNullIndices":[0]},{"className":"javax.management.remote.JMXConnectorServerProvider","api":"newJMXConnectorServer","signature":"JMXConnectorServer newJMXConnectorServer(JMXServiceURL serviceURL, Map<String,?> environment, MBeanServer mbeanServer) throws IOException","paramTypes":["JMXServiceURL","Map","MBeanServer"],"notNullIndices":[0,1]},{"className":"javax.management.remote.JMXPrincipal","api":"JMXPrincipal","signature":"public JMXPrincipal(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.remote.JMXServiceURL","api":"JMXServiceURL","signature":"public JMXServiceURL(String serviceURL) throws MalformedURLException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.remote.MBeanServerForwarder","api":"setMBeanServer","signature":"void setMBeanServer(MBeanServer mbs)","paramTypes":["MBeanServer"],"notNullIndices":[0]},{"className":"javax.management.remote.NotificationResult","api":"NotificationResult","signature":"public NotificationResult(long earliestSequenceNumber, long nextSequenceNumber, TargetedNotification[] targetedNotifications)","paramTypes":["long","long","TargetedNotification[]"],"notNullIndices":[2]},{"className":"javax.management.remote.SubjectDelegationPermission","api":"SubjectDelegationPermission","signature":"public SubjectDelegationPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.management.remote.SubjectDelegationPermission","api":"SubjectDelegationPermission","signature":"public SubjectDelegationPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.management.remote.SubjectDelegationPermission","api":"SubjectDelegationPermission","signature":"public SubjectDelegationPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"javax.management.remote.TargetedNotification","api":"TargetedNotification","signature":"public TargetedNotification(Notification notification, Integer listenerID)","paramTypes":["Notification","Integer"],"notNullIndices":[0,1]},{"className":"javax.management.remote.rmi.RMIConnection","api":"invoke","signature":"Object invoke(ObjectName name, String operationName, MarshalledObject params, String[] signature, Subject delegationSubject) throws InstanceNotFoundException, MBeanException, ReflectionException, IOException","paramTypes":["ObjectName","String","MarshalledObject","String[]","Subject"],"notNullIndices":[0,1]},{"className":"javax.management.remote.rmi.RMIConnection","api":"removeNotificationListener","signature":"void removeNotificationListener(ObjectName name, ObjectName listener, Subject delegationSubject) throws InstanceNotFoundException, ListenerNotFoundException, IOException","paramTypes":["ObjectName","ObjectName","Subject"],"notNullIndices":[0,1]},{"className":"javax.management.remote.rmi.RMIConnection","api":"removeNotificationListener","signature":"void removeNotificationListener(ObjectName name, ObjectName listener, MarshalledObject filter, MarshalledObject handback, Subject delegationSubject) throws InstanceNotFoundException, ListenerNotFoundException, IOException","paramTypes":["ObjectName","ObjectName","MarshalledObject","MarshalledObject","Subject"],"notNullIndices":[0,1]},{"className":"javax.management.remote.rmi.RMIConnection","api":"addNotificationListeners","signature":"Integer[] addNotificationListeners(ObjectName[] names, MarshalledObject[] filters, Subject[] delegationSubjects) throws InstanceNotFoundException, IOException","paramTypes":["ObjectName[]","MarshalledObject[]","Subject[]"],"notNullIndices":[0,1]},{"className":"javax.management.remote.rmi.RMIConnector","api":"RMIConnector","signature":"public RMIConnector(JMXServiceURL url, Map<String,?> environment)","paramTypes":["JMXServiceURL","Map"],"notNullIndices":[0]},{"className":"javax.management.remote.rmi.RMIConnector","api":"RMIConnector","signature":"public RMIConnector(RMIServer rmiServer, Map<String,?> environment)","paramTypes":["RMIServer","Map"],"notNullIndices":[0]},{"className":"javax.management.remote.rmi.RMIConnectorServer","api":"RMIConnectorServer","signature":"public RMIConnectorServer(JMXServiceURL url, Map<String,?> environment) throws IOException","paramTypes":["JMXServiceURL","Map"],"notNullIndices":[0]},{"className":"javax.management.remote.rmi.RMIConnectorServer","api":"RMIConnectorServer","signature":"public RMIConnectorServer(JMXServiceURL url, Map<String,?> environment, MBeanServer mbeanServer) throws IOException","paramTypes":["JMXServiceURL","Map","MBeanServer"],"notNullIndices":[0]},{"className":"javax.management.remote.rmi.RMIConnectorServer","api":"RMIConnectorServer","signature":"public RMIConnectorServer(JMXServiceURL url, Map<String,?> environment, RMIServerImpl rmiServerImpl, MBeanServer mbeanServer) throws IOException","paramTypes":["JMXServiceURL","Map","RMIServerImpl","MBeanServer"],"notNullIndices":[0]},{"className":"javax.management.remote.rmi.RMIConnectorServer","api":"RMIConnectorServer","signature":"public RMIConnectorServer(JMXServiceURL url, Map<String,?> environment, RMIServerImpl rmiServerImpl, MBeanServer mbeanServer) throws IOException","paramTypes":["JMXServiceURL","Map","RMIServerImpl","MBeanServer"],"notNullIndices":[2]},{"className":"javax.management.remote.rmi.RMIServerImpl","api":"newClient","signature":"public RMIConnection newClient(Object credentials) throws IOException","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.management.remote.rmi.RMIServerImpl","api":"clientClosed","signature":"protected void clientClosed(RMIConnection client) throws IOException","paramTypes":["RMIConnection"],"notNullIndices":[0]},{"className":"javax.naming.directory.ModificationItem","api":"ModificationItem","signature":"public ModificationItem(int mod_op, Attribute attr)","paramTypes":["int","Attribute"],"notNullIndices":[1]},{"className":"javax.naming.ldap.LdapName","api":"compareTo","signature":"public int compareTo(Object obj)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.naming.ldap.Rdn","api":"compareTo","signature":"public int compareTo(Object obj)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.naming.ldap.spi.LdapDnsProvider","api":"lookupEndpoints","signature":"public abstract Optional<LdapDnsProviderResult> lookupEndpoints(String url, Map<?,?> env) throws NamingException","paramTypes":["String","Map"],"notNullIndices":[0,1]},{"className":"javax.net.SocketFactory","api":"createSocket","signature":"public abstract Socket createSocket(InetAddress host, int port) throws IOException","paramTypes":["InetAddress","int"],"notNullIndices":[0]},{"className":"javax.net.SocketFactory","api":"createSocket","signature":"public abstract Socket createSocket(InetAddress address, int port, InetAddress localAddress, int localPort) throws IOException","paramTypes":["InetAddress","int","InetAddress","int"],"notNullIndices":[0]},{"className":"javax.net.ssl.CertPathTrustManagerParameters","api":"CertPathTrustManagerParameters","signature":"public CertPathTrustManagerParameters(CertPathParameters parameters)","paramTypes":["CertPathParameters"],"notNullIndices":[0]},{"className":"javax.net.ssl.HttpsURLConnection","api":"setDefaultHostnameVerifier","signature":"public static void setDefaultHostnameVerifier(HostnameVerifier v)","paramTypes":["HostnameVerifier"],"notNullIndices":[0]},{"className":"javax.net.ssl.HttpsURLConnection","api":"setHostnameVerifier","signature":"public void setHostnameVerifier(HostnameVerifier v)","paramTypes":["HostnameVerifier"],"notNullIndices":[0]},{"className":"javax.net.ssl.HttpsURLConnection","api":"setDefaultSSLSocketFactory","signature":"public static void setDefaultSSLSocketFactory(SSLSocketFactory sf)","paramTypes":["SSLSocketFactory"],"notNullIndices":[0]},{"className":"javax.net.ssl.HttpsURLConnection","api":"setSSLSocketFactory","signature":"public void setSSLSocketFactory(SSLSocketFactory sf)","paramTypes":["SSLSocketFactory"],"notNullIndices":[0]},{"className":"javax.net.ssl.KeyManagerFactory","api":"getInstance","signature":"public static final KeyManagerFactory getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.net.ssl.KeyManagerFactory","api":"getInstance","signature":"public static final KeyManagerFactory getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.net.ssl.KeyManagerFactory","api":"getInstance","signature":"public static final KeyManagerFactory getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.net.ssl.KeyManagerFactory","api":"getInstance","signature":"public static final KeyManagerFactory getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"javax.net.ssl.KeyManagerFactory","api":"getInstance","signature":"public static final KeyManagerFactory getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"javax.net.ssl.KeyStoreBuilderParameters","api":"KeyStoreBuilderParameters","signature":"public KeyStoreBuilderParameters(KeyStore.Builder builder)","paramTypes":["KeyStore.Builder"],"notNullIndices":[0]},{"className":"javax.net.ssl.KeyStoreBuilderParameters","api":"KeyStoreBuilderParameters","signature":"public KeyStoreBuilderParameters(List<KeyStore.Builder> parameters)","paramTypes":["List"],"notNullIndices":[0]},{"className":"javax.net.ssl.SNIHostName","api":"SNIHostName","signature":"public SNIHostName(String hostname)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.net.ssl.SNIHostName","api":"SNIHostName","signature":"public SNIHostName(byte[] encoded)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.net.ssl.SNIHostName","api":"createSNIMatcher","signature":"public static SNIMatcher createSNIMatcher(String regex)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.net.ssl.SNIMatcher","api":"matches","signature":"public abstract boolean matches(SNIServerName serverName)","paramTypes":["SNIServerName"],"notNullIndices":[0]},{"className":"javax.net.ssl.SNIServerName","api":"SNIServerName","signature":"protected SNIServerName(int type, byte[] encoded)","paramTypes":["int","byte[]"],"notNullIndices":[1]},{"className":"javax.net.ssl.SSLContext","api":"setDefault","signature":"public static void setDefault(SSLContext context)","paramTypes":["SSLContext"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLContext","api":"getInstance","signature":"public static SSLContext getInstance(String protocol) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLContext","api":"getInstance","signature":"public static SSLContext getInstance(String protocol, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.net.ssl.SSLContext","api":"getInstance","signature":"public static SSLContext getInstance(String protocol, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLContext","api":"getInstance","signature":"public static SSLContext getInstance(String protocol, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"javax.net.ssl.SSLContext","api":"getInstance","signature":"public static SSLContext getInstance(String protocol, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLEngine","api":"wrap","signature":"public SSLEngineResult wrap(ByteBuffer src, ByteBuffer dst) throws SSLException","paramTypes":["ByteBuffer","ByteBuffer"],"notNullIndices":[0,1]},{"className":"javax.net.ssl.SSLEngine","api":"wrap","signature":"public SSLEngineResult wrap(ByteBuffer[] srcs, ByteBuffer dst) throws SSLException","paramTypes":["ByteBuffer[]","ByteBuffer"],"notNullIndices":[0,1]},{"className":"javax.net.ssl.SSLEngine","api":"wrap","signature":"public abstract SSLEngineResult wrap(ByteBuffer[] srcs, int offset, int length, ByteBuffer dst) throws SSLException","paramTypes":["ByteBuffer[]","int","int","ByteBuffer"],"notNullIndices":[0,3]},{"className":"javax.net.ssl.SSLEngine","api":"unwrap","signature":"public SSLEngineResult unwrap(ByteBuffer src, ByteBuffer dst) throws SSLException","paramTypes":["ByteBuffer","ByteBuffer"],"notNullIndices":[0,1]},{"className":"javax.net.ssl.SSLEngine","api":"unwrap","signature":"public SSLEngineResult unwrap(ByteBuffer src, ByteBuffer[] dsts) throws SSLException","paramTypes":["ByteBuffer","ByteBuffer[]"],"notNullIndices":[0,1]},{"className":"javax.net.ssl.SSLEngine","api":"unwrap","signature":"public abstract SSLEngineResult unwrap(ByteBuffer src, ByteBuffer[] dsts, int offset, int length) throws SSLException","paramTypes":["ByteBuffer","ByteBuffer[]","int","int"],"notNullIndices":[0,1]},{"className":"javax.net.ssl.SSLEngine","api":"setEnabledCipherSuites","signature":"public abstract void setEnabledCipherSuites(String[] suites)","paramTypes":["String[]"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLEngine","api":"setEnabledProtocols","signature":"public abstract void setEnabledProtocols(String[] protocols)","paramTypes":["String[]"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLEngineResult.HandshakeStatus","api":"valueOf","signature":"public static SSLEngineResult.HandshakeStatus valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLEngineResult.Status","api":"valueOf","signature":"public static SSLEngineResult.Status valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLEngineResult","api":"SSLEngineResult","signature":"public SSLEngineResult(SSLEngineResult.Status status, SSLEngineResult.HandshakeStatus handshakeStatus, int bytesConsumed, int bytesProduced)","paramTypes":["SSLEngineResult.Status","SSLEngineResult.HandshakeStatus","int","int"],"notNullIndices":[0,1]},{"className":"javax.net.ssl.SSLEngineResult","api":"SSLEngineResult","signature":"public SSLEngineResult(SSLEngineResult.Status status, SSLEngineResult.HandshakeStatus handshakeStatus, int bytesConsumed, int bytesProduced, long sequenceNumber)","paramTypes":["SSLEngineResult.Status","SSLEngineResult.HandshakeStatus","int","int","long"],"notNullIndices":[0,1]},{"className":"javax.net.ssl.SSLParameters","api":"setApplicationProtocols","signature":"public void setApplicationProtocols(String[] protocols)","paramTypes":["String[]"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLPermission","api":"SSLPermission","signature":"public SSLPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLPermission","api":"SSLPermission","signature":"public SSLPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLServerSocket","api":"setEnabledCipherSuites","signature":"public abstract void setEnabledCipherSuites(String[] suites)","paramTypes":["String[]"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLServerSocket","api":"setEnabledProtocols","signature":"public abstract void setEnabledProtocols(String[] protocols)","paramTypes":["String[]"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLSession","api":"getValue","signature":"Object getValue(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLSession","api":"removeValue","signature":"void removeValue(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLSessionBindingEvent","api":"SSLSessionBindingEvent","signature":"public SSLSessionBindingEvent(SSLSession session, String name)","paramTypes":["SSLSession","String"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLSessionContext","api":"getSession","signature":"SSLSession getSession(byte[] sessionId)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLSocket","api":"SSLSocket","signature":"protected SSLSocket(InetAddress address, int port) throws IOException","paramTypes":["InetAddress","int"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLSocket","api":"SSLSocket","signature":"protected SSLSocket(InetAddress address, int port, InetAddress clientAddress, int clientPort) throws IOException","paramTypes":["InetAddress","int","InetAddress","int"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLSocket","api":"setEnabledCipherSuites","signature":"public abstract void setEnabledCipherSuites(String[] suites)","paramTypes":["String[]"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLSocket","api":"setEnabledProtocols","signature":"public abstract void setEnabledProtocols(String[] protocols)","paramTypes":["String[]"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLSocket","api":"addHandshakeCompletedListener","signature":"public abstract void addHandshakeCompletedListener(HandshakeCompletedListener listener)","paramTypes":["HandshakeCompletedListener"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLSocket","api":"removeHandshakeCompletedListener","signature":"public abstract void removeHandshakeCompletedListener(HandshakeCompletedListener listener)","paramTypes":["HandshakeCompletedListener"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLSocketFactory","api":"createSocket","signature":"public abstract Socket createSocket(Socket s, String host, int port, boolean autoClose) throws IOException","paramTypes":["Socket","String","int","boolean"],"notNullIndices":[0]},{"className":"javax.net.ssl.SSLSocketFactory","api":"createSocket","signature":"public Socket createSocket(Socket s, InputStream consumed, boolean autoClose) throws IOException","paramTypes":["Socket","InputStream","boolean"],"notNullIndices":[0]},{"className":"javax.net.ssl.TrustManagerFactory","api":"getInstance","signature":"public static final TrustManagerFactory getInstance(String algorithm) throws NoSuchAlgorithmException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.net.ssl.TrustManagerFactory","api":"getInstance","signature":"public static final TrustManagerFactory getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.net.ssl.TrustManagerFactory","api":"getInstance","signature":"public static final TrustManagerFactory getInstance(String algorithm, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.net.ssl.TrustManagerFactory","api":"getInstance","signature":"public static final TrustManagerFactory getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[1]},{"className":"javax.net.ssl.TrustManagerFactory","api":"getInstance","signature":"public static final TrustManagerFactory getInstance(String algorithm, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Provider"],"notNullIndices":[0]},{"className":"javax.net.ssl.X509ExtendedTrustManager","api":"checkClientTrusted","signature":"public abstract void checkClientTrusted(X509Certificate[] chain, String authType, Socket socket) throws CertificateException","paramTypes":["X509Certificate[]","String","Socket"],"notNullIndices":[0]},{"className":"javax.net.ssl.X509ExtendedTrustManager","api":"checkServerTrusted","signature":"public abstract void checkServerTrusted(X509Certificate[] chain, String authType, Socket socket) throws CertificateException","paramTypes":["X509Certificate[]","String","Socket"],"notNullIndices":[0]},{"className":"javax.net.ssl.X509ExtendedTrustManager","api":"checkClientTrusted","signature":"public abstract void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine engine) throws CertificateException","paramTypes":["X509Certificate[]","String","SSLEngine"],"notNullIndices":[0]},{"className":"javax.net.ssl.X509ExtendedTrustManager","api":"checkServerTrusted","signature":"public abstract void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine engine) throws CertificateException","paramTypes":["X509Certificate[]","String","SSLEngine"],"notNullIndices":[0]},{"className":"javax.net.ssl.X509TrustManager","api":"checkClientTrusted","signature":"void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException","paramTypes":["X509Certificate[]","String"],"notNullIndices":[0]},{"className":"javax.net.ssl.X509TrustManager","api":"checkServerTrusted","signature":"void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException","paramTypes":["X509Certificate[]","String"],"notNullIndices":[0]},{"className":"javax.print.DocFlavor.BYTE_ARRAY","api":"BYTE_ARRAY","signature":"public BYTE_ARRAY(String mimeType)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.print.DocFlavor.CHAR_ARRAY","api":"CHAR_ARRAY","signature":"public CHAR_ARRAY(String mimeType)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.print.DocFlavor.INPUT_STREAM","api":"INPUT_STREAM","signature":"public INPUT_STREAM(String mimeType)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.print.DocFlavor.READER","api":"READER","signature":"public READER(String mimeType)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.print.DocFlavor.SERVICE_FORMATTED","api":"SERVICE_FORMATTED","signature":"public SERVICE_FORMATTED(String className)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.print.DocFlavor.STRING","api":"STRING","signature":"public STRING(String mimeType)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.print.DocFlavor.URL","api":"URL","signature":"public URL(String mimeType)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.print.DocFlavor","api":"DocFlavor","signature":"public DocFlavor(String mimeType, String className)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"javax.print.DocFlavor","api":"getParameter","signature":"public String getParameter(String paramName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.print.PrintService","api":"getAttribute","signature":"<T extends PrintServiceAttribute> T getAttribute(Class<T> category)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"javax.print.PrintService","api":"isDocFlavorSupported","signature":"boolean isDocFlavorSupported(DocFlavor flavor)","paramTypes":["DocFlavor"],"notNullIndices":[0]},{"className":"javax.print.PrintService","api":"isAttributeCategorySupported","signature":"boolean isAttributeCategorySupported(Class<? extends Attribute> category)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"javax.print.PrintService","api":"getDefaultAttributeValue","signature":"Object getDefaultAttributeValue(Class<? extends Attribute> category)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"javax.print.PrintService","api":"getSupportedAttributeValues","signature":"Object getSupportedAttributeValues(Class<? extends Attribute> category, DocFlavor flavor, AttributeSet attributes)","paramTypes":["Class","DocFlavor","AttributeSet"],"notNullIndices":[0]},{"className":"javax.print.PrintService","api":"isAttributeValueSupported","signature":"boolean isAttributeValueSupported(Attribute attrval, DocFlavor flavor, AttributeSet attributes)","paramTypes":["Attribute","DocFlavor","AttributeSet"],"notNullIndices":[0]},{"className":"javax.print.ServiceUI","api":"printDialog","signature":"public static PrintService printDialog(GraphicsConfiguration gc, int x, int y, PrintService[] services, PrintService defaultService, DocFlavor flavor, PrintRequestAttributeSet attributes) throws HeadlessException","paramTypes":["GraphicsConfiguration","int","int","PrintService[]","PrintService","DocFlavor","PrintRequestAttributeSet"],"notNullIndices":[3,6]},{"className":"javax.print.SimpleDoc","api":"SimpleDoc","signature":"public SimpleDoc(Object printData, DocFlavor flavor, DocAttributeSet attributes)","paramTypes":["Object","DocFlavor","DocAttributeSet"],"notNullIndices":[0,1]},{"className":"javax.print.attribute.AttributeSet","api":"get","signature":"Attribute get(Class<?> category)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"javax.print.attribute.AttributeSet","api":"add","signature":"boolean add(Attribute attribute)","paramTypes":["Attribute"],"notNullIndices":[0]},{"className":"javax.print.attribute.AttributeSet","api":"addAll","signature":"boolean addAll(AttributeSet attributes)","paramTypes":["AttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.AttributeSetUtilities","api":"unmodifiableView","signature":"public static AttributeSet unmodifiableView(AttributeSet attributeSet)","paramTypes":["AttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.AttributeSetUtilities","api":"unmodifiableView","signature":"public static DocAttributeSet unmodifiableView(DocAttributeSet attributeSet)","paramTypes":["DocAttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.AttributeSetUtilities","api":"unmodifiableView","signature":"public static PrintRequestAttributeSet unmodifiableView(PrintRequestAttributeSet attributeSet)","paramTypes":["PrintRequestAttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.AttributeSetUtilities","api":"unmodifiableView","signature":"public static PrintJobAttributeSet unmodifiableView(PrintJobAttributeSet attributeSet)","paramTypes":["PrintJobAttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.AttributeSetUtilities","api":"unmodifiableView","signature":"public static PrintServiceAttributeSet unmodifiableView(PrintServiceAttributeSet attributeSet)","paramTypes":["PrintServiceAttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.AttributeSetUtilities","api":"synchronizedView","signature":"public static AttributeSet synchronizedView(AttributeSet attributeSet)","paramTypes":["AttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.AttributeSetUtilities","api":"synchronizedView","signature":"public static DocAttributeSet synchronizedView(DocAttributeSet attributeSet)","paramTypes":["DocAttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.AttributeSetUtilities","api":"synchronizedView","signature":"public static PrintRequestAttributeSet synchronizedView(PrintRequestAttributeSet attributeSet)","paramTypes":["PrintRequestAttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.AttributeSetUtilities","api":"synchronizedView","signature":"public static PrintJobAttributeSet synchronizedView(PrintJobAttributeSet attributeSet)","paramTypes":["PrintJobAttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.AttributeSetUtilities","api":"synchronizedView","signature":"public static PrintServiceAttributeSet synchronizedView(PrintServiceAttributeSet attributeSet)","paramTypes":["PrintServiceAttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.AttributeSetUtilities","api":"verifyAttributeCategory","signature":"public static Class<?> verifyAttributeCategory(Object object, Class<?> interfaceName)","paramTypes":["Object","Class"],"notNullIndices":[0]},{"className":"javax.print.attribute.AttributeSetUtilities","api":"verifyAttributeValue","signature":"public static Attribute verifyAttributeValue(Object object, Class<?> interfaceName)","paramTypes":["Object","Class"],"notNullIndices":[0]},{"className":"javax.print.attribute.AttributeSetUtilities","api":"verifyCategoryForValue","signature":"public static void verifyCategoryForValue(Class<?> category, Attribute attribute)","paramTypes":["Class","Attribute"],"notNullIndices":[0,1]},{"className":"javax.print.attribute.DateTimeSyntax","api":"DateTimeSyntax","signature":"protected DateTimeSyntax(Date value)","paramTypes":["Date"],"notNullIndices":[0]},{"className":"javax.print.attribute.DocAttributeSet","api":"add","signature":"boolean add(Attribute attribute)","paramTypes":["Attribute"],"notNullIndices":[0]},{"className":"javax.print.attribute.DocAttributeSet","api":"addAll","signature":"boolean addAll(AttributeSet attributes)","paramTypes":["AttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.HashAttributeSet","api":"HashAttributeSet","signature":"public HashAttributeSet(Attribute attribute)","paramTypes":["Attribute"],"notNullIndices":[0]},{"className":"javax.print.attribute.HashAttributeSet","api":"HashAttributeSet","signature":"public HashAttributeSet(Attribute[] attributes)","paramTypes":["Attribute[]"],"notNullIndices":[0]},{"className":"javax.print.attribute.HashAttributeSet","api":"HashAttributeSet","signature":"protected HashAttributeSet(Class<?> interfaceName)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"javax.print.attribute.HashAttributeSet","api":"HashAttributeSet","signature":"protected HashAttributeSet(Attribute attribute, Class<?> interfaceName)","paramTypes":["Attribute","Class"],"notNullIndices":[0,1]},{"className":"javax.print.attribute.HashAttributeSet","api":"HashAttributeSet","signature":"protected HashAttributeSet(Attribute[] attributes, Class<?> interfaceName)","paramTypes":["Attribute[]","Class"],"notNullIndices":[0,1]},{"className":"javax.print.attribute.HashAttributeSet","api":"get","signature":"public Attribute get(Class<?> category)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"javax.print.attribute.HashAttributeSet","api":"add","signature":"public boolean add(Attribute attribute)","paramTypes":["Attribute"],"notNullIndices":[0]},{"className":"javax.print.attribute.HashAttributeSet","api":"addAll","signature":"public boolean addAll(AttributeSet attributes)","paramTypes":["AttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.HashDocAttributeSet","api":"HashDocAttributeSet","signature":"public HashDocAttributeSet(DocAttribute attribute)","paramTypes":["DocAttribute"],"notNullIndices":[0]},{"className":"javax.print.attribute.HashDocAttributeSet","api":"HashDocAttributeSet","signature":"public HashDocAttributeSet(DocAttribute[] attributes)","paramTypes":["DocAttribute[]"],"notNullIndices":[0]},{"className":"javax.print.attribute.HashPrintJobAttributeSet","api":"HashPrintJobAttributeSet","signature":"public HashPrintJobAttributeSet(PrintJobAttribute attribute)","paramTypes":["PrintJobAttribute"],"notNullIndices":[0]},{"className":"javax.print.attribute.HashPrintJobAttributeSet","api":"HashPrintJobAttributeSet","signature":"public HashPrintJobAttributeSet(PrintJobAttribute[] attributes)","paramTypes":["PrintJobAttribute[]"],"notNullIndices":[0]},{"className":"javax.print.attribute.HashPrintRequestAttributeSet","api":"HashPrintRequestAttributeSet","signature":"public HashPrintRequestAttributeSet(PrintRequestAttribute attribute)","paramTypes":["PrintRequestAttribute"],"notNullIndices":[0]},{"className":"javax.print.attribute.HashPrintRequestAttributeSet","api":"HashPrintRequestAttributeSet","signature":"public HashPrintRequestAttributeSet(PrintRequestAttribute[] attributes)","paramTypes":["PrintRequestAttribute[]"],"notNullIndices":[0]},{"className":"javax.print.attribute.HashPrintServiceAttributeSet","api":"HashPrintServiceAttributeSet","signature":"public HashPrintServiceAttributeSet(PrintServiceAttribute attribute)","paramTypes":["PrintServiceAttribute"],"notNullIndices":[0]},{"className":"javax.print.attribute.HashPrintServiceAttributeSet","api":"HashPrintServiceAttributeSet","signature":"public HashPrintServiceAttributeSet(PrintServiceAttribute[] attributes)","paramTypes":["PrintServiceAttribute[]"],"notNullIndices":[0]},{"className":"javax.print.attribute.PrintJobAttributeSet","api":"add","signature":"boolean add(Attribute attribute)","paramTypes":["Attribute"],"notNullIndices":[0]},{"className":"javax.print.attribute.PrintJobAttributeSet","api":"addAll","signature":"boolean addAll(AttributeSet attributes)","paramTypes":["AttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.PrintRequestAttributeSet","api":"add","signature":"boolean add(Attribute attribute)","paramTypes":["Attribute"],"notNullIndices":[0]},{"className":"javax.print.attribute.PrintRequestAttributeSet","api":"addAll","signature":"boolean addAll(AttributeSet attributes)","paramTypes":["AttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.PrintServiceAttributeSet","api":"add","signature":"boolean add(Attribute attribute)","paramTypes":["Attribute"],"notNullIndices":[0]},{"className":"javax.print.attribute.PrintServiceAttributeSet","api":"addAll","signature":"boolean addAll(AttributeSet attributes)","paramTypes":["AttributeSet"],"notNullIndices":[0]},{"className":"javax.print.attribute.ResolutionSyntax","api":"lessThanOrEquals","signature":"public boolean lessThanOrEquals(ResolutionSyntax other)","paramTypes":["ResolutionSyntax"],"notNullIndices":[0]},{"className":"javax.print.attribute.SetOfIntegerSyntax","api":"SetOfIntegerSyntax","signature":"protected SetOfIntegerSyntax(int[][] members)","paramTypes":["int[][]"],"notNullIndices":[0]},{"className":"javax.print.attribute.TextSyntax","api":"TextSyntax","signature":"protected TextSyntax(String value, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0]},{"className":"javax.print.attribute.URISyntax","api":"URISyntax","signature":"protected URISyntax(URI uri)","paramTypes":["URI"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.DateTimeAtCompleted","api":"DateTimeAtCompleted","signature":"public DateTimeAtCompleted(Date dateTime)","paramTypes":["Date"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.DateTimeAtCreation","api":"DateTimeAtCreation","signature":"public DateTimeAtCreation(Date dateTime)","paramTypes":["Date"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.DateTimeAtProcessing","api":"DateTimeAtProcessing","signature":"public DateTimeAtProcessing(Date dateTime)","paramTypes":["Date"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.Destination","api":"Destination","signature":"public Destination(URI uri)","paramTypes":["URI"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.DocumentName","api":"DocumentName","signature":"public DocumentName(String documentName, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.JobHoldUntil","api":"JobHoldUntil","signature":"public JobHoldUntil(Date dateTime)","paramTypes":["Date"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.JobMessageFromOperator","api":"JobMessageFromOperator","signature":"public JobMessageFromOperator(String message, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.JobName","api":"JobName","signature":"public JobName(String jobName, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.JobOriginatingUserName","api":"JobOriginatingUserName","signature":"public JobOriginatingUserName(String userName, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.JobStateReasons","api":"JobStateReasons","signature":"public JobStateReasons(Collection<JobStateReason> collection)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.JobStateReasons","api":"add","signature":"public boolean add(JobStateReason o)","paramTypes":["JobStateReason"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.NumberUpSupported","api":"NumberUpSupported","signature":"public NumberUpSupported(int[][] members)","paramTypes":["int[][]"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.OutputDeviceAssigned","api":"OutputDeviceAssigned","signature":"public OutputDeviceAssigned(String deviceName, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.PageRanges","api":"PageRanges","signature":"public PageRanges(int[][] members)","paramTypes":["int[][]"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.PageRanges","api":"PageRanges","signature":"public PageRanges(String members)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.PrinterInfo","api":"PrinterInfo","signature":"public PrinterInfo(String info, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.PrinterLocation","api":"PrinterLocation","signature":"public PrinterLocation(String location, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.PrinterMakeAndModel","api":"PrinterMakeAndModel","signature":"public PrinterMakeAndModel(String makeAndModel, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.PrinterMessageFromOperator","api":"PrinterMessageFromOperator","signature":"public PrinterMessageFromOperator(String message, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.PrinterMoreInfo","api":"PrinterMoreInfo","signature":"public PrinterMoreInfo(URI uri)","paramTypes":["URI"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.PrinterMoreInfoManufacturer","api":"PrinterMoreInfoManufacturer","signature":"public PrinterMoreInfoManufacturer(URI uri)","paramTypes":["URI"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.PrinterName","api":"PrinterName","signature":"public PrinterName(String printerName, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.PrinterStateReasons","api":"PrinterStateReasons","signature":"public PrinterStateReasons(Map<PrinterStateReason,Severity> map)","paramTypes":["Map"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.PrinterStateReasons","api":"put","signature":"public Severity put(PrinterStateReason reason, Severity severity)","paramTypes":["PrinterStateReason","Severity"],"notNullIndices":[0,1]},{"className":"javax.print.attribute.standard.PrinterStateReasons","api":"printerStateReasonSet","signature":"public Set<PrinterStateReason> printerStateReasonSet(Severity severity)","paramTypes":["Severity"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.PrinterURI","api":"PrinterURI","signature":"public PrinterURI(URI uri)","paramTypes":["URI"],"notNullIndices":[0]},{"className":"javax.print.attribute.standard.RequestingUserName","api":"RequestingUserName","signature":"public RequestingUserName(String userName, Locale locale)","paramTypes":["String","Locale"],"notNullIndices":[0]},{"className":"javax.print.event.PrintEvent","api":"PrintEvent","signature":"public PrintEvent(Object source)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.print.event.PrintJobAttributeEvent","api":"PrintJobAttributeEvent","signature":"public PrintJobAttributeEvent(DocPrintJob source, PrintJobAttributeSet attributes)","paramTypes":["DocPrintJob","PrintJobAttributeSet"],"notNullIndices":[0]},{"className":"javax.print.event.PrintJobEvent","api":"PrintJobEvent","signature":"public PrintJobEvent(DocPrintJob source, int reason)","paramTypes":["DocPrintJob","int"],"notNullIndices":[0]},{"className":"javax.print.event.PrintServiceAttributeEvent","api":"PrintServiceAttributeEvent","signature":"public PrintServiceAttributeEvent(PrintService source, PrintServiceAttributeSet attributes)","paramTypes":["PrintService","PrintServiceAttributeSet"],"notNullIndices":[0]},{"className":"javax.script.AbstractScriptEngine","api":"AbstractScriptEngine","signature":"public AbstractScriptEngine(Bindings n)","paramTypes":["Bindings"],"notNullIndices":[0]},{"className":"javax.script.AbstractScriptEngine","api":"setContext","signature":"public void setContext(ScriptContext ctxt)","paramTypes":["ScriptContext"],"notNullIndices":[0]},{"className":"javax.script.AbstractScriptEngine","api":"put","signature":"public void put(String key, Object value)","paramTypes":["String","Object"],"notNullIndices":[0]},{"className":"javax.script.AbstractScriptEngine","api":"get","signature":"public Object get(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.script.AbstractScriptEngine","api":"eval","signature":"public Object eval(Reader reader) throws ScriptException","paramTypes":["Reader"],"notNullIndices":[0]},{"className":"javax.script.AbstractScriptEngine","api":"eval","signature":"public Object eval(String script) throws ScriptException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.script.Bindings","api":"put","signature":"Object put(String name, Object value)","paramTypes":["String","Object"],"notNullIndices":[0]},{"className":"javax.script.Bindings","api":"putAll","signature":"void putAll(Map<? extends String,? extends Object> toMerge)","paramTypes":["Map"],"notNullIndices":[0]},{"className":"javax.script.Bindings","api":"containsKey","signature":"boolean containsKey(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.script.Bindings","api":"get","signature":"Object get(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.script.Bindings","api":"remove","signature":"Object remove(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.script.Compilable","api":"compile","signature":"CompiledScript compile(String script) throws ScriptException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.script.Compilable","api":"compile","signature":"CompiledScript compile(Reader script) throws ScriptException","paramTypes":["Reader"],"notNullIndices":[0]},{"className":"javax.script.CompiledScript","api":"eval","signature":"public abstract Object eval(ScriptContext context) throws ScriptException","paramTypes":["ScriptContext"],"notNullIndices":[0]},{"className":"javax.script.Invocable","api":"invokeMethod","signature":"Object invokeMethod(Object thiz, String name, Object... args) throws ScriptException, NoSuchMethodException","paramTypes":["Object","String","Object..."],"notNullIndices":[1]},{"className":"javax.script.Invocable","api":"invokeMethod","signature":"Object invokeMethod(Object thiz, String name, Object... args) throws ScriptException, NoSuchMethodException","paramTypes":["Object","String","Object..."],"notNullIndices":[0]},{"className":"javax.script.Invocable","api":"invokeFunction","signature":"Object invokeFunction(String name, Object... args) throws ScriptException, NoSuchMethodException","paramTypes":["String","Object..."],"notNullIndices":[0]},{"className":"javax.script.Invocable","api":"getInterface","signature":"<T> T getInterface(Class<T> clasz)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"javax.script.ScriptContext","api":"setAttribute","signature":"void setAttribute(String name, Object value, int scope)","paramTypes":["String","Object","int"],"notNullIndices":[0]},{"className":"javax.script.ScriptContext","api":"getAttribute","signature":"Object getAttribute(String name, int scope)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"javax.script.ScriptContext","api":"removeAttribute","signature":"Object removeAttribute(String name, int scope)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"javax.script.ScriptContext","api":"getAttribute","signature":"Object getAttribute(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.script.ScriptContext","api":"getAttributesScope","signature":"int getAttributesScope(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.script.ScriptEngine","api":"eval","signature":"Object eval(String script) throws ScriptException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.script.ScriptEngine","api":"eval","signature":"Object eval(Reader reader) throws ScriptException","paramTypes":["Reader"],"notNullIndices":[0]},{"className":"javax.script.ScriptEngine","api":"put","signature":"void put(String key, Object value)","paramTypes":["String","Object"],"notNullIndices":[0]},{"className":"javax.script.ScriptEngine","api":"get","signature":"Object get(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.script.ScriptEngine","api":"setContext","signature":"void setContext(ScriptContext context)","paramTypes":["ScriptContext"],"notNullIndices":[0]},{"className":"javax.script.ScriptEngineFactory","api":"getParameter","signature":"Object getParameter(String key)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.script.ScriptEngineFactory","api":"getMethodCallSyntax","signature":"String getMethodCallSyntax(String obj, String m, String... args)","paramTypes":["String","String","String..."],"notNullIndices":[0,1,2]},{"className":"javax.script.ScriptEngineFactory","api":"getProgram","signature":"String getProgram(String... statements)","paramTypes":["String..."],"notNullIndices":[0]},{"className":"javax.script.ScriptEngineManager","api":"setBindings","signature":"public void setBindings(Bindings bindings)","paramTypes":["Bindings"],"notNullIndices":[0]},{"className":"javax.script.ScriptEngineManager","api":"put","signature":"public void put(String key, Object value)","paramTypes":["String","Object"],"notNullIndices":[0]},{"className":"javax.script.ScriptEngineManager","api":"getEngineByName","signature":"public ScriptEngine getEngineByName(String shortName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.script.ScriptEngineManager","api":"getEngineByExtension","signature":"public ScriptEngine getEngineByExtension(String extension)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.script.ScriptEngineManager","api":"getEngineByMimeType","signature":"public ScriptEngine getEngineByMimeType(String mimeType)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.script.SimpleBindings","api":"SimpleBindings","signature":"public SimpleBindings(Map<String,Object> m)","paramTypes":["Map"],"notNullIndices":[0]},{"className":"javax.script.SimpleBindings","api":"put","signature":"public Object put(String name, Object value)","paramTypes":["String","Object"],"notNullIndices":[0]},{"className":"javax.script.SimpleBindings","api":"putAll","signature":"public void putAll(Map<? extends String,? extends Object> toMerge)","paramTypes":["Map"],"notNullIndices":[0]},{"className":"javax.script.SimpleBindings","api":"containsKey","signature":"public boolean containsKey(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.script.SimpleBindings","api":"get","signature":"public Object get(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.script.SimpleBindings","api":"remove","signature":"public Object remove(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.script.SimpleScriptContext","api":"getAttribute","signature":"public Object getAttribute(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.script.SimpleScriptContext","api":"getAttribute","signature":"public Object getAttribute(String name, int scope)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"javax.script.SimpleScriptContext","api":"removeAttribute","signature":"public Object removeAttribute(String name, int scope)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"javax.script.SimpleScriptContext","api":"setAttribute","signature":"public void setAttribute(String name, Object value, int scope)","paramTypes":["String","Object","int"],"notNullIndices":[0]},{"className":"javax.script.SimpleScriptContext","api":"getAttributesScope","signature":"public int getAttributesScope(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.security.auth.AuthPermission","api":"AuthPermission","signature":"public AuthPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.security.auth.AuthPermission","api":"AuthPermission","signature":"public AuthPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.security.auth.Subject","api":"Subject","signature":"public Subject(boolean readOnly, Set<? extends Principal> principals, Set<?> pubCredentials, Set<?> privCredentials)","paramTypes":["boolean","Set","Set","Set"],"notNullIndices":[1,2,3]},{"className":"javax.security.auth.Subject","api":"getSubject","signature":"public static Subject getSubject(AccessControlContext acc)","paramTypes":["AccessControlContext"],"notNullIndices":[0]},{"className":"javax.security.auth.Subject","api":"getPrincipals","signature":"public <T extends Principal> Set<T> getPrincipals(Class<T> c)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"javax.security.auth.Subject","api":"getPublicCredentials","signature":"public <T> Set<T> getPublicCredentials(Class<T> c)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"javax.security.auth.Subject","api":"getPrivateCredentials","signature":"public <T> Set<T> getPrivateCredentials(Class<T> c)","paramTypes":["Class"],"notNullIndices":[0]},{"className":"javax.security.auth.callback.ChoiceCallback","api":"ChoiceCallback","signature":"public ChoiceCallback(String prompt, String[] choices, int defaultChoice, boolean multipleSelectionsAllowed)","paramTypes":["String","String[]","int","boolean"],"notNullIndices":[0,1]},{"className":"javax.security.auth.callback.ConfirmationCallback","api":"ConfirmationCallback","signature":"public ConfirmationCallback(int messageType, String[] options, int defaultOption)","paramTypes":["int","String[]","int"],"notNullIndices":[0,1]},{"className":"javax.security.auth.callback.ConfirmationCallback","api":"ConfirmationCallback","signature":"public ConfirmationCallback(String prompt, int messageType, int optionType, int defaultOption)","paramTypes":["String","int","int","int"],"notNullIndices":[0]},{"className":"javax.security.auth.callback.ConfirmationCallback","api":"ConfirmationCallback","signature":"public ConfirmationCallback(String prompt, int messageType, String[] options, int defaultOption)","paramTypes":["String","int","String[]","int"],"notNullIndices":[0,1,2]},{"className":"javax.security.auth.callback.NameCallback","api":"NameCallback","signature":"public NameCallback(String prompt)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.security.auth.callback.NameCallback","api":"NameCallback","signature":"public NameCallback(String prompt, String defaultName)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"javax.security.auth.callback.PasswordCallback","api":"PasswordCallback","signature":"public PasswordCallback(String prompt, boolean echoOn)","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"javax.security.auth.callback.TextInputCallback","api":"TextInputCallback","signature":"public TextInputCallback(String prompt)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.security.auth.callback.TextInputCallback","api":"TextInputCallback","signature":"public TextInputCallback(String prompt, String defaultText)","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"javax.security.auth.callback.TextOutputCallback","api":"TextOutputCallback","signature":"public TextOutputCallback(int messageType, String message)","paramTypes":["int","String"],"notNullIndices":[0,1]},{"className":"javax.security.auth.kerberos.DelegationPermission","api":"DelegationPermission","signature":"public DelegationPermission(String principals)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.security.auth.kerberos.DelegationPermission","api":"DelegationPermission","signature":"public DelegationPermission(String principals, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.security.auth.kerberos.EncryptionKey","api":"EncryptionKey","signature":"public EncryptionKey(byte[] keyBytes, int keyType)","paramTypes":["byte[]","int"],"notNullIndices":[0]},{"className":"javax.security.auth.kerberos.KerberosCredMessage","api":"KerberosCredMessage","signature":"public KerberosCredMessage(KerberosPrincipal sender, KerberosPrincipal recipient, byte[] message)","paramTypes":["KerberosPrincipal","KerberosPrincipal","byte[]"],"notNullIndices":[0,1,2]},{"className":"javax.security.auth.kerberos.KerberosPrincipal","api":"KerberosPrincipal","signature":"public KerberosPrincipal(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.security.auth.kerberos.KerberosPrincipal","api":"KerberosPrincipal","signature":"public KerberosPrincipal(String name, int nameType)","paramTypes":["String","int"],"notNullIndices":[0]},{"className":"javax.security.auth.kerberos.KeyTab","api":"getInstance","signature":"public static KeyTab getInstance(File file)","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.security.auth.kerberos.KeyTab","api":"getUnboundInstance","signature":"public static KeyTab getUnboundInstance(File file)","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.security.auth.kerberos.KeyTab","api":"getInstance","signature":"public static KeyTab getInstance(KerberosPrincipal princ)","paramTypes":["KerberosPrincipal"],"notNullIndices":[0]},{"className":"javax.security.auth.kerberos.KeyTab","api":"getKeys","signature":"public KerberosKey[] getKeys(KerberosPrincipal principal)","paramTypes":["KerberosPrincipal"],"notNullIndices":[0]},{"className":"javax.security.auth.login.AppConfigurationEntry","api":"AppConfigurationEntry","signature":"public AppConfigurationEntry(String loginModuleName, AppConfigurationEntry.LoginModuleControlFlag controlFlag, Map<String,?> options)","paramTypes":["String","AppConfigurationEntry.LoginModuleControlFlag","Map"],"notNullIndices":[0,1,2]},{"className":"javax.security.auth.login.Configuration","api":"getInstance","signature":"public static Configuration getInstance(String type, Configuration.Parameters params) throws NoSuchAlgorithmException","paramTypes":["String","Configuration.Parameters"],"notNullIndices":[0]},{"className":"javax.security.auth.login.Configuration","api":"getInstance","signature":"public static Configuration getInstance(String type, Configuration.Parameters params, String provider) throws NoSuchProviderException, NoSuchAlgorithmException","paramTypes":["String","Configuration.Parameters","String"],"notNullIndices":[2]},{"className":"javax.security.auth.login.Configuration","api":"getInstance","signature":"public static Configuration getInstance(String type, Configuration.Parameters params, String provider) throws NoSuchProviderException, NoSuchAlgorithmException","paramTypes":["String","Configuration.Parameters","String"],"notNullIndices":[0]},{"className":"javax.security.auth.login.Configuration","api":"getInstance","signature":"public static Configuration getInstance(String type, Configuration.Parameters params, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Configuration.Parameters","Provider"],"notNullIndices":[0]},{"className":"javax.security.auth.login.LoginContext","api":"LoginContext","signature":"public LoginContext(String name, Subject subject, CallbackHandler callbackHandler, Configuration config) throws LoginException","paramTypes":["String","Subject","CallbackHandler","Configuration"],"notNullIndices":[3]},{"className":"javax.security.auth.x500.X500Principal","api":"X500Principal","signature":"public X500Principal(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.security.auth.x500.X500Principal","api":"X500Principal","signature":"public X500Principal(String name, Map<String,String> keywordMap)","paramTypes":["String","Map"],"notNullIndices":[0,1]},{"className":"javax.security.auth.x500.X500Principal","api":"X500Principal","signature":"public X500Principal(InputStream is)","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"javax.security.auth.x500.X500Principal","api":"getName","signature":"public String getName(String format)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.security.auth.x500.X500Principal","api":"getName","signature":"public String getName(String format, Map<String,String> oidMap)","paramTypes":["String","Map"],"notNullIndices":[0]},{"className":"javax.security.auth.x500.X500Principal","api":"getName","signature":"public String getName(String format, Map<String,String> oidMap)","paramTypes":["String","Map"],"notNullIndices":[1]},{"className":"javax.security.auth.x500.X500PrivateCredential","api":"X500PrivateCredential","signature":"public X500PrivateCredential(X509Certificate cert, PrivateKey key)","paramTypes":["X509Certificate","PrivateKey"],"notNullIndices":[0,1]},{"className":"javax.security.auth.x500.X500PrivateCredential","api":"X500PrivateCredential","signature":"public X500PrivateCredential(X509Certificate cert, PrivateKey key, String alias)","paramTypes":["X509Certificate","PrivateKey","String"],"notNullIndices":[0,1,2]},{"className":"javax.security.sasl.RealmCallback","api":"RealmCallback","signature":"public RealmCallback(String prompt)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.security.sasl.RealmCallback","api":"RealmCallback","signature":"public RealmCallback(String prompt, String defaultRealmInfo)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.security.sasl.RealmChoiceCallback","api":"RealmChoiceCallback","signature":"public RealmChoiceCallback(String prompt, String[] choices, int defaultChoice, boolean multiple)","paramTypes":["String","String[]","int","boolean"],"notNullIndices":[0,1]},{"className":"javax.smartcardio.ATR","api":"ATR","signature":"public ATR(byte[] atr)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.smartcardio.Card","api":"transmitControlCommand","signature":"public abstract byte[] transmitControlCommand(int controlCode, byte[] command) throws CardException","paramTypes":["int","byte[]"],"notNullIndices":[1]},{"className":"javax.smartcardio.CardChannel","api":"transmit","signature":"public abstract ResponseAPDU transmit(CommandAPDU command) throws CardException","paramTypes":["CommandAPDU"],"notNullIndices":[0]},{"className":"javax.smartcardio.CardChannel","api":"transmit","signature":"public abstract int transmit(ByteBuffer command, ByteBuffer response) throws CardException","paramTypes":["ByteBuffer","ByteBuffer"],"notNullIndices":[0,1]},{"className":"javax.smartcardio.CardPermission","api":"CardPermission","signature":"public CardPermission(String terminalName, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.smartcardio.CardTerminal","api":"connect","signature":"public abstract Card connect(String protocol) throws CardException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.smartcardio.CardTerminals.State","api":"valueOf","signature":"public static CardTerminals.State valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.smartcardio.CardTerminals","api":"list","signature":"public abstract List<CardTerminal> list(CardTerminals.State state) throws CardException","paramTypes":["CardTerminals.State"],"notNullIndices":[0]},{"className":"javax.smartcardio.CardTerminals","api":"getTerminal","signature":"public CardTerminal getTerminal(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.smartcardio.CommandAPDU","api":"CommandAPDU","signature":"public CommandAPDU(byte[] apdu)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.smartcardio.CommandAPDU","api":"CommandAPDU","signature":"public CommandAPDU(byte[] apdu, int apduOffset, int apduLength)","paramTypes":["byte[]","int","int"],"notNullIndices":[0]},{"className":"javax.smartcardio.CommandAPDU","api":"CommandAPDU","signature":"public CommandAPDU(ByteBuffer apdu)","paramTypes":["ByteBuffer"],"notNullIndices":[0]},{"className":"javax.smartcardio.ResponseAPDU","api":"ResponseAPDU","signature":"public ResponseAPDU(byte[] apdu)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.smartcardio.TerminalFactory","api":"getInstance","signature":"public static TerminalFactory getInstance(String type, Object params) throws NoSuchAlgorithmException","paramTypes":["String","Object"],"notNullIndices":[0]},{"className":"javax.smartcardio.TerminalFactory","api":"getInstance","signature":"public static TerminalFactory getInstance(String type, Object params, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","Object","String"],"notNullIndices":[0]},{"className":"javax.smartcardio.TerminalFactory","api":"getInstance","signature":"public static TerminalFactory getInstance(String type, Object params, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","Object","String"],"notNullIndices":[2]},{"className":"javax.smartcardio.TerminalFactory","api":"getInstance","signature":"public static TerminalFactory getInstance(String type, Object params, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Object","Provider"],"notNullIndices":[0]},{"className":"javax.smartcardio.TerminalFactory","api":"getInstance","signature":"public static TerminalFactory getInstance(String type, Object params, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","Object","Provider"],"notNullIndices":[2]},{"className":"javax.sound.midi.MidiSystem","api":"getMidiDevice","signature":"public static MidiDevice getMidiDevice(MidiDevice.Info info) throws MidiUnavailableException","paramTypes":["MidiDevice.Info"],"notNullIndices":[0]},{"className":"javax.sound.midi.MidiSystem","api":"getSoundbank","signature":"public static Soundbank getSoundbank(InputStream stream) throws InvalidMidiDataException, IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"javax.sound.midi.MidiSystem","api":"getSoundbank","signature":"public static Soundbank getSoundbank(URL url) throws InvalidMidiDataException, IOException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.sound.midi.MidiSystem","api":"getSoundbank","signature":"public static Soundbank getSoundbank(File file) throws InvalidMidiDataException, IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.sound.midi.MidiSystem","api":"getMidiFileFormat","signature":"public static MidiFileFormat getMidiFileFormat(InputStream stream) throws InvalidMidiDataException, IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"javax.sound.midi.MidiSystem","api":"getMidiFileFormat","signature":"public static MidiFileFormat getMidiFileFormat(URL url) throws InvalidMidiDataException, IOException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.sound.midi.MidiSystem","api":"getMidiFileFormat","signature":"public static MidiFileFormat getMidiFileFormat(File file) throws InvalidMidiDataException, IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.sound.midi.MidiSystem","api":"getSequence","signature":"public static Sequence getSequence(InputStream stream) throws InvalidMidiDataException, IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"javax.sound.midi.MidiSystem","api":"getSequence","signature":"public static Sequence getSequence(URL url) throws InvalidMidiDataException, IOException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.sound.midi.MidiSystem","api":"getSequence","signature":"public static Sequence getSequence(File file) throws InvalidMidiDataException, IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.sound.midi.MidiSystem","api":"getMidiFileTypes","signature":"public static int[] getMidiFileTypes(Sequence sequence)","paramTypes":["Sequence"],"notNullIndices":[0]},{"className":"javax.sound.midi.MidiSystem","api":"isFileTypeSupported","signature":"public static boolean isFileTypeSupported(int fileType, Sequence sequence)","paramTypes":["int","Sequence"],"notNullIndices":[1]},{"className":"javax.sound.midi.MidiSystem","api":"write","signature":"public static int write(Sequence in, int fileType, OutputStream out) throws IOException","paramTypes":["Sequence","int","OutputStream"],"notNullIndices":[0,2]},{"className":"javax.sound.midi.MidiSystem","api":"write","signature":"public static int write(Sequence in, int type, File out) throws IOException","paramTypes":["Sequence","int","File"],"notNullIndices":[0,2]},{"className":"javax.sound.midi.Synthesizer","api":"remapInstrument","signature":"boolean remapInstrument(Instrument from, Instrument to)","paramTypes":["Instrument","Instrument"],"notNullIndices":[0,1]},{"className":"javax.sound.midi.spi.MidiDeviceProvider","api":"isDeviceSupported","signature":"public boolean isDeviceSupported(MidiDevice.Info info)","paramTypes":["MidiDevice.Info"],"notNullIndices":[0]},{"className":"javax.sound.midi.spi.MidiDeviceProvider","api":"getDevice","signature":"public abstract MidiDevice getDevice(MidiDevice.Info info)","paramTypes":["MidiDevice.Info"],"notNullIndices":[0]},{"className":"javax.sound.midi.spi.MidiFileReader","api":"getMidiFileFormat","signature":"public abstract MidiFileFormat getMidiFileFormat(InputStream stream) throws InvalidMidiDataException, IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"javax.sound.midi.spi.MidiFileReader","api":"getMidiFileFormat","signature":"public abstract MidiFileFormat getMidiFileFormat(URL url) throws InvalidMidiDataException, IOException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.sound.midi.spi.MidiFileReader","api":"getMidiFileFormat","signature":"public abstract MidiFileFormat getMidiFileFormat(File file) throws InvalidMidiDataException, IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.sound.midi.spi.MidiFileReader","api":"getSequence","signature":"public abstract Sequence getSequence(InputStream stream) throws InvalidMidiDataException, IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"javax.sound.midi.spi.MidiFileReader","api":"getSequence","signature":"public abstract Sequence getSequence(URL url) throws InvalidMidiDataException, IOException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.sound.midi.spi.MidiFileReader","api":"getSequence","signature":"public abstract Sequence getSequence(File file) throws InvalidMidiDataException, IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.sound.midi.spi.MidiFileWriter","api":"getMidiFileTypes","signature":"public abstract int[] getMidiFileTypes(Sequence sequence)","paramTypes":["Sequence"],"notNullIndices":[0]},{"className":"javax.sound.midi.spi.MidiFileWriter","api":"isFileTypeSupported","signature":"public boolean isFileTypeSupported(int fileType, Sequence sequence)","paramTypes":["int","Sequence"],"notNullIndices":[1]},{"className":"javax.sound.midi.spi.MidiFileWriter","api":"write","signature":"public abstract int write(Sequence in, int fileType, OutputStream out) throws IOException","paramTypes":["Sequence","int","OutputStream"],"notNullIndices":[0,2]},{"className":"javax.sound.midi.spi.MidiFileWriter","api":"write","signature":"public abstract int write(Sequence in, int fileType, File out) throws IOException","paramTypes":["Sequence","int","File"],"notNullIndices":[0,2]},{"className":"javax.sound.midi.spi.SoundbankReader","api":"getSoundbank","signature":"public abstract Soundbank getSoundbank(URL url) throws InvalidMidiDataException, IOException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.sound.midi.spi.SoundbankReader","api":"getSoundbank","signature":"public abstract Soundbank getSoundbank(InputStream stream) throws InvalidMidiDataException, IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"javax.sound.midi.spi.SoundbankReader","api":"getSoundbank","signature":"public abstract Soundbank getSoundbank(File file) throws InvalidMidiDataException, IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.sound.sampled.AudioPermission","api":"AudioPermission","signature":"public AudioPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.sound.sampled.AudioPermission","api":"AudioPermission","signature":"public AudioPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.sound.sampled.AudioSystem","api":"getTargetEncodings","signature":"public static AudioFormat.Encoding[] getTargetEncodings(AudioFormat.Encoding sourceEncoding)","paramTypes":["AudioFormat.Encoding"],"notNullIndices":[0]},{"className":"javax.sound.sampled.AudioSystem","api":"getTargetEncodings","signature":"public static AudioFormat.Encoding[] getTargetEncodings(AudioFormat sourceFormat)","paramTypes":["AudioFormat"],"notNullIndices":[0]},{"className":"javax.sound.sampled.AudioSystem","api":"isConversionSupported","signature":"public static boolean isConversionSupported(AudioFormat.Encoding targetEncoding, AudioFormat sourceFormat)","paramTypes":["AudioFormat.Encoding","AudioFormat"],"notNullIndices":[0,1]},{"className":"javax.sound.sampled.AudioSystem","api":"getAudioInputStream","signature":"public static AudioInputStream getAudioInputStream(AudioFormat.Encoding targetEncoding, AudioInputStream sourceStream)","paramTypes":["AudioFormat.Encoding","AudioInputStream"],"notNullIndices":[0,1]},{"className":"javax.sound.sampled.AudioSystem","api":"getTargetFormats","signature":"public static AudioFormat[] getTargetFormats(AudioFormat.Encoding targetEncoding, AudioFormat sourceFormat)","paramTypes":["AudioFormat.Encoding","AudioFormat"],"notNullIndices":[0,1]},{"className":"javax.sound.sampled.AudioSystem","api":"isConversionSupported","signature":"public static boolean isConversionSupported(AudioFormat targetFormat, AudioFormat sourceFormat)","paramTypes":["AudioFormat","AudioFormat"],"notNullIndices":[0,1]},{"className":"javax.sound.sampled.AudioSystem","api":"getAudioInputStream","signature":"public static AudioInputStream getAudioInputStream(AudioFormat targetFormat, AudioInputStream sourceStream)","paramTypes":["AudioFormat","AudioInputStream"],"notNullIndices":[0,1]},{"className":"javax.sound.sampled.AudioSystem","api":"getAudioFileFormat","signature":"public static AudioFileFormat getAudioFileFormat(InputStream stream) throws UnsupportedAudioFileException, IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"javax.sound.sampled.AudioSystem","api":"getAudioFileFormat","signature":"public static AudioFileFormat getAudioFileFormat(URL url) throws UnsupportedAudioFileException, IOException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.sound.sampled.AudioSystem","api":"getAudioFileFormat","signature":"public static AudioFileFormat getAudioFileFormat(File file) throws UnsupportedAudioFileException, IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.sound.sampled.AudioSystem","api":"getAudioInputStream","signature":"public static AudioInputStream getAudioInputStream(InputStream stream) throws UnsupportedAudioFileException, IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"javax.sound.sampled.AudioSystem","api":"getAudioInputStream","signature":"public static AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.sound.sampled.AudioSystem","api":"getAudioInputStream","signature":"public static AudioInputStream getAudioInputStream(File file) throws UnsupportedAudioFileException, IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.sound.sampled.AudioSystem","api":"isFileTypeSupported","signature":"public static boolean isFileTypeSupported(AudioFileFormat.Type fileType)","paramTypes":["AudioFileFormat.Type"],"notNullIndices":[0]},{"className":"javax.sound.sampled.AudioSystem","api":"getAudioFileTypes","signature":"public static AudioFileFormat.Type[] getAudioFileTypes(AudioInputStream stream)","paramTypes":["AudioInputStream"],"notNullIndices":[0]},{"className":"javax.sound.sampled.AudioSystem","api":"isFileTypeSupported","signature":"public static boolean isFileTypeSupported(AudioFileFormat.Type fileType, AudioInputStream stream)","paramTypes":["AudioFileFormat.Type","AudioInputStream"],"notNullIndices":[0,1]},{"className":"javax.sound.sampled.AudioSystem","api":"write","signature":"public static int write(AudioInputStream stream, AudioFileFormat.Type fileType, OutputStream out) throws IOException","paramTypes":["AudioInputStream","AudioFileFormat.Type","OutputStream"],"notNullIndices":[0,1,2]},{"className":"javax.sound.sampled.AudioSystem","api":"write","signature":"public static int write(AudioInputStream stream, AudioFileFormat.Type fileType, File out) throws IOException","paramTypes":["AudioInputStream","AudioFileFormat.Type","File"],"notNullIndices":[0,1,2]},{"className":"javax.sound.sampled.LineEvent","api":"LineEvent","signature":"public LineEvent(Line line, LineEvent.Type type, long position)","paramTypes":["Line","LineEvent.Type","long"],"notNullIndices":[0]},{"className":"javax.sound.sampled.spi.AudioFileReader","api":"getAudioFileFormat","signature":"public abstract AudioFileFormat getAudioFileFormat(InputStream stream) throws UnsupportedAudioFileException, IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"javax.sound.sampled.spi.AudioFileReader","api":"getAudioFileFormat","signature":"public abstract AudioFileFormat getAudioFileFormat(URL url) throws UnsupportedAudioFileException, IOException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.sound.sampled.spi.AudioFileReader","api":"getAudioFileFormat","signature":"public abstract AudioFileFormat getAudioFileFormat(File file) throws UnsupportedAudioFileException, IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.sound.sampled.spi.AudioFileReader","api":"getAudioInputStream","signature":"public abstract AudioInputStream getAudioInputStream(InputStream stream) throws UnsupportedAudioFileException, IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"javax.sound.sampled.spi.AudioFileReader","api":"getAudioInputStream","signature":"public abstract AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.sound.sampled.spi.AudioFileReader","api":"getAudioInputStream","signature":"public abstract AudioInputStream getAudioInputStream(File file) throws UnsupportedAudioFileException, IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.sound.sampled.spi.AudioFileWriter","api":"isFileTypeSupported","signature":"public boolean isFileTypeSupported(AudioFileFormat.Type fileType)","paramTypes":["AudioFileFormat.Type"],"notNullIndices":[0]},{"className":"javax.sound.sampled.spi.AudioFileWriter","api":"getAudioFileTypes","signature":"public abstract AudioFileFormat.Type[] getAudioFileTypes(AudioInputStream stream)","paramTypes":["AudioInputStream"],"notNullIndices":[0]},{"className":"javax.sound.sampled.spi.AudioFileWriter","api":"isFileTypeSupported","signature":"public boolean isFileTypeSupported(AudioFileFormat.Type fileType, AudioInputStream stream)","paramTypes":["AudioFileFormat.Type","AudioInputStream"],"notNullIndices":[0,1]},{"className":"javax.sound.sampled.spi.AudioFileWriter","api":"write","signature":"public abstract int write(AudioInputStream stream, AudioFileFormat.Type fileType, OutputStream out) throws IOException","paramTypes":["AudioInputStream","AudioFileFormat.Type","OutputStream"],"notNullIndices":[0,1,2]},{"className":"javax.sound.sampled.spi.AudioFileWriter","api":"write","signature":"public abstract int write(AudioInputStream stream, AudioFileFormat.Type fileType, File out) throws IOException","paramTypes":["AudioInputStream","AudioFileFormat.Type","File"],"notNullIndices":[0,1,2]},{"className":"javax.sound.sampled.spi.FormatConversionProvider","api":"isSourceEncodingSupported","signature":"public boolean isSourceEncodingSupported(AudioFormat.Encoding sourceEncoding)","paramTypes":["AudioFormat.Encoding"],"notNullIndices":[0]},{"className":"javax.sound.sampled.spi.FormatConversionProvider","api":"isTargetEncodingSupported","signature":"public boolean isTargetEncodingSupported(AudioFormat.Encoding targetEncoding)","paramTypes":["AudioFormat.Encoding"],"notNullIndices":[0]},{"className":"javax.sound.sampled.spi.FormatConversionProvider","api":"getTargetEncodings","signature":"public abstract AudioFormat.Encoding[] getTargetEncodings(AudioFormat sourceFormat)","paramTypes":["AudioFormat"],"notNullIndices":[0]},{"className":"javax.sound.sampled.spi.FormatConversionProvider","api":"isConversionSupported","signature":"public boolean isConversionSupported(AudioFormat.Encoding targetEncoding, AudioFormat sourceFormat)","paramTypes":["AudioFormat.Encoding","AudioFormat"],"notNullIndices":[0,1]},{"className":"javax.sound.sampled.spi.FormatConversionProvider","api":"getTargetFormats","signature":"public abstract AudioFormat[] getTargetFormats(AudioFormat.Encoding targetEncoding, AudioFormat sourceFormat)","paramTypes":["AudioFormat.Encoding","AudioFormat"],"notNullIndices":[0,1]},{"className":"javax.sound.sampled.spi.FormatConversionProvider","api":"isConversionSupported","signature":"public boolean isConversionSupported(AudioFormat targetFormat, AudioFormat sourceFormat)","paramTypes":["AudioFormat","AudioFormat"],"notNullIndices":[0,1]},{"className":"javax.sound.sampled.spi.FormatConversionProvider","api":"getAudioInputStream","signature":"public abstract AudioInputStream getAudioInputStream(AudioFormat.Encoding targetEncoding, AudioInputStream sourceStream)","paramTypes":["AudioFormat.Encoding","AudioInputStream"],"notNullIndices":[0,1]},{"className":"javax.sound.sampled.spi.FormatConversionProvider","api":"getAudioInputStream","signature":"public abstract AudioInputStream getAudioInputStream(AudioFormat targetFormat, AudioInputStream sourceStream)","paramTypes":["AudioFormat","AudioInputStream"],"notNullIndices":[0,1]},{"className":"javax.sound.sampled.spi.MixerProvider","api":"isMixerSupported","signature":"public boolean isMixerSupported(Mixer.Info info)","paramTypes":["Mixer.Info"],"notNullIndices":[0]},{"className":"javax.sql.ConnectionEvent","api":"ConnectionEvent","signature":"public ConnectionEvent(PooledConnection con)","paramTypes":["PooledConnection"],"notNullIndices":[0]},{"className":"javax.sql.ConnectionEvent","api":"ConnectionEvent","signature":"public ConnectionEvent(PooledConnection con, SQLException ex)","paramTypes":["PooledConnection","SQLException"],"notNullIndices":[0]},{"className":"javax.sql.RowSetEvent","api":"RowSetEvent","signature":"public RowSetEvent(RowSet source)","paramTypes":["RowSet"],"notNullIndices":[0]},{"className":"javax.sql.StatementEvent","api":"StatementEvent","signature":"public StatementEvent(PooledConnection con, PreparedStatement statement)","paramTypes":["PooledConnection","PreparedStatement"],"notNullIndices":[0]},{"className":"javax.sql.StatementEvent","api":"StatementEvent","signature":"public StatementEvent(PooledConnection con, PreparedStatement statement, SQLException exception)","paramTypes":["PooledConnection","PreparedStatement","SQLException"],"notNullIndices":[0]},{"className":"javax.sql.rowset.CachedRowSet","api":"populate","signature":"void populate(ResultSet data) throws SQLException","paramTypes":["ResultSet"],"notNullIndices":[0]},{"className":"javax.sql.rowset.CachedRowSet","api":"setTableName","signature":"void setTableName(String tabName) throws SQLException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.sql.rowset.Joinable","api":"setMatchColumn","signature":"void setMatchColumn(String columnName) throws SQLException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.sql.rowset.Joinable","api":"setMatchColumn","signature":"void setMatchColumn(String[] columnNames) throws SQLException","paramTypes":["String[]"],"notNullIndices":[0]},{"className":"javax.sql.rowset.RowSetProvider","api":"newFactory","signature":"public static RowSetFactory newFactory(String factoryClassName, ClassLoader cl) throws SQLException","paramTypes":["String","ClassLoader"],"notNullIndices":[0]},{"className":"javax.sql.rowset.serial.SQLInputImpl","api":"SQLInputImpl","signature":"public SQLInputImpl(Object[] attributes, Map<String,Class<?>> map) throws SQLException","paramTypes":["Object[]","Map>"],"notNullIndices":[0,1]},{"className":"javax.sql.rowset.serial.SQLOutputImpl","api":"SQLOutputImpl","signature":"public SQLOutputImpl(Vector<?> attributes, Map<String,?> map) throws SQLException","paramTypes":["Vector","Map"],"notNullIndices":[0,1]},{"className":"javax.sql.rowset.serial.SerialArray","api":"SerialArray","signature":"public SerialArray(Array array, Map<String,Class<?>> map) throws SerialException, SQLException","paramTypes":["Array","Map>"],"notNullIndices":[0,1]},{"className":"javax.sql.rowset.serial.SerialArray","api":"SerialArray","signature":"public SerialArray(Array array) throws SerialException, SQLException","paramTypes":["Array"],"notNullIndices":[0]},{"className":"javax.sql.rowset.serial.SerialBlob","api":"SerialBlob","signature":"public SerialBlob(Blob blob) throws SerialException, SQLException","paramTypes":["Blob"],"notNullIndices":[0]},{"className":"javax.sql.rowset.serial.SerialClob","api":"SerialClob","signature":"public SerialClob(Clob clob) throws SerialException, SQLException","paramTypes":["Clob"],"notNullIndices":[0]},{"className":"javax.sql.rowset.serial.SerialDatalink","api":"SerialDatalink","signature":"public SerialDatalink(URL url) throws SerialException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.sql.rowset.serial.SerialRef","api":"SerialRef","signature":"public SerialRef(Ref ref) throws SerialException, SQLException","paramTypes":["Ref"],"notNullIndices":[0]},{"className":"javax.sql.rowset.spi.SyncFactory","api":"registerProvider","signature":"public static void registerProvider(String providerID) throws SyncFactoryException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.sql.rowset.spi.SyncFactory","api":"getInstance","signature":"public static SyncProvider getInstance(String providerID) throws SyncFactoryException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.sql.rowset.spi.SyncFactory","api":"setLogger","signature":"public static void setLogger(Logger logger)","paramTypes":["Logger"],"notNullIndices":[0]},{"className":"javax.sql.rowset.spi.SyncFactory","api":"setLogger","signature":"public static void setLogger(Logger logger, Level level)","paramTypes":["Logger","Level"],"notNullIndices":[0]},{"className":"javax.sql.rowset.spi.SyncFactory","api":"setJNDIContext","signature":"public static void setJNDIContext(Context ctx) throws SyncFactoryException","paramTypes":["Context"],"notNullIndices":[0]},{"className":"javax.sql.rowset.spi.SyncProviderException","api":"SyncProviderException","signature":"public SyncProviderException(SyncResolver syncResolver)","paramTypes":["SyncResolver"],"notNullIndices":[0]},{"className":"javax.sql.rowset.spi.SyncProviderException","api":"setSyncResolver","signature":"public void setSyncResolver(SyncResolver syncResolver)","paramTypes":["SyncResolver"],"notNullIndices":[0]},{"className":"javax.swing.BorderFactory","api":"createStrokeBorder","signature":"public static Border createStrokeBorder(BasicStroke stroke)","paramTypes":["BasicStroke"],"notNullIndices":[0]},{"className":"javax.swing.BorderFactory","api":"createStrokeBorder","signature":"public static Border createStrokeBorder(BasicStroke stroke, Paint paint)","paramTypes":["BasicStroke","Paint"],"notNullIndices":[0]},{"className":"javax.swing.Box.Filler","api":"paintComponent","signature":"protected void paintComponent(Graphics g)","paramTypes":["Graphics"],"notNullIndices":[0]},{"className":"javax.swing.Box","api":"paintComponent","signature":"protected void paintComponent(Graphics g)","paramTypes":["Graphics"],"notNullIndices":[0]},{"className":"javax.swing.ComponentInputMap","api":"ComponentInputMap","signature":"public ComponentInputMap(JComponent component)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.DefaultComboBoxModel<E>","api":"addAll","signature":"public void addAll(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"javax.swing.DefaultComboBoxModel<E>","api":"addAll","signature":"public void addAll(int index, Collection<? extends E> c)","paramTypes":["int","Collection"],"notNullIndices":[1]},{"className":"javax.swing.DefaultListModel<E>","api":"addAll","signature":"public void addAll(Collection<? extends E> c)","paramTypes":["Collection"],"notNullIndices":[0]},{"className":"javax.swing.DefaultListModel<E>","api":"addAll","signature":"public void addAll(int index, Collection<? extends E> c)","paramTypes":["int","Collection"],"notNullIndices":[1]},{"className":"javax.swing.DropMode","api":"valueOf","signature":"public static DropMode valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.GroupLayout.Alignment","api":"valueOf","signature":"public static GroupLayout.Alignment valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.GroupLayout.ParallelGroup","api":"addGroup","signature":"public GroupLayout.ParallelGroup addGroup(GroupLayout.Alignment alignment, GroupLayout.Group group)","paramTypes":["GroupLayout.Alignment","GroupLayout.Group"],"notNullIndices":[0]},{"className":"javax.swing.GroupLayout.ParallelGroup","api":"addComponent","signature":"public GroupLayout.ParallelGroup addComponent(Component component, GroupLayout.Alignment alignment)","paramTypes":["Component","GroupLayout.Alignment"],"notNullIndices":[1]},{"className":"javax.swing.GroupLayout.ParallelGroup","api":"addComponent","signature":"public GroupLayout.ParallelGroup addComponent(Component component, GroupLayout.Alignment alignment, int min, int pref, int max)","paramTypes":["Component","GroupLayout.Alignment","int","int","int"],"notNullIndices":[1]},{"className":"javax.swing.GroupLayout.SequentialGroup","api":"addPreferredGap","signature":"public GroupLayout.SequentialGroup addPreferredGap(JComponent comp1, JComponent comp2, LayoutStyle.ComponentPlacement type)","paramTypes":["JComponent","JComponent","LayoutStyle.ComponentPlacement"],"notNullIndices":[0,1,2]},{"className":"javax.swing.GroupLayout.SequentialGroup","api":"addPreferredGap","signature":"public GroupLayout.SequentialGroup addPreferredGap(JComponent comp1, JComponent comp2, LayoutStyle.ComponentPlacement type, int pref, int max)","paramTypes":["JComponent","JComponent","LayoutStyle.ComponentPlacement","int","int"],"notNullIndices":[0,1,2]},{"className":"javax.swing.GroupLayout","api":"GroupLayout","signature":"public GroupLayout(Container host)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"javax.swing.GroupLayout","api":"setHonorsVisibility","signature":"public void setHonorsVisibility(Component component, Boolean honorsVisibility)","paramTypes":["Component","Boolean"],"notNullIndices":[0]},{"className":"javax.swing.GroupLayout","api":"setHorizontalGroup","signature":"public void setHorizontalGroup(GroupLayout.Group group)","paramTypes":["GroupLayout.Group"],"notNullIndices":[0]},{"className":"javax.swing.GroupLayout","api":"setVerticalGroup","signature":"public void setVerticalGroup(GroupLayout.Group group)","paramTypes":["GroupLayout.Group"],"notNullIndices":[0]},{"className":"javax.swing.GroupLayout","api":"createParallelGroup","signature":"public GroupLayout.ParallelGroup createParallelGroup(GroupLayout.Alignment alignment)","paramTypes":["GroupLayout.Alignment"],"notNullIndices":[0]},{"className":"javax.swing.GroupLayout","api":"createParallelGroup","signature":"public GroupLayout.ParallelGroup createParallelGroup(GroupLayout.Alignment alignment, boolean resizable)","paramTypes":["GroupLayout.Alignment","boolean"],"notNullIndices":[0]},{"className":"javax.swing.GroupLayout","api":"linkSize","signature":"public void linkSize(Component... components)","paramTypes":["Component..."],"notNullIndices":[0]},{"className":"javax.swing.GroupLayout","api":"linkSize","signature":"public void linkSize(int axis, Component... components)","paramTypes":["int","Component..."],"notNullIndices":[1]},{"className":"javax.swing.InternalFrameFocusTraversalPolicy","api":"getInitialComponent","signature":"public Component getInitialComponent(JInternalFrame frame)","paramTypes":["JInternalFrame"],"notNullIndices":[0]},{"className":"javax.swing.JComponent","api":"getFontMetrics","signature":"public FontMetrics getFontMetrics(Font font)","paramTypes":["Font"],"notNullIndices":[0]},{"className":"javax.swing.JComponent","api":"setFocusTraversalKeys","signature":"public void setFocusTraversalKeys(int id, Set<? extends AWTKeyStroke> keystrokes)","paramTypes":["int","Set"],"notNullIndices":[0,1]},{"className":"javax.swing.JDialog","api":"remove","signature":"public void remove(Component comp)","paramTypes":["Component"],"notNullIndices":[0]},{"className":"javax.swing.JDialog","api":"setContentPane","signature":"@BeanProperty(bound=false, hidden=true, description=\"The client area of the dialog where child components are normally inserted.\") public void setContentPane(Container contentPane)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"javax.swing.JDialog","api":"setLayeredPane","signature":"@BeanProperty(bound=false, hidden=true, description=\"The pane which holds the various dialog layers.\") public void setLayeredPane(JLayeredPane layeredPane)","paramTypes":["JLayeredPane"],"notNullIndices":[0]},{"className":"javax.swing.JEditorPane","api":"JEditorPane","signature":"public JEditorPane(URL initialPage) throws IOException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.swing.JEditorPane","api":"JEditorPane","signature":"public JEditorPane(String url) throws IOException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.JEditorPane","api":"JEditorPane","signature":"public JEditorPane(String type, String text)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.swing.JEditorPane","api":"setPage","signature":"@BeanProperty(expert=true, description=\"the URL used to set content\") public void setPage(URL page) throws IOException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.swing.JEditorPane","api":"setPage","signature":"public void setPage(String url) throws IOException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.JEditorPane","api":"setContentType","signature":"@BeanProperty(bound=false, description=\"the type of content\") public final void setContentType(String type)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.JFrame","api":"remove","signature":"public void remove(Component comp)","paramTypes":["Component"],"notNullIndices":[0]},{"className":"javax.swing.JFrame","api":"setContentPane","signature":"@BeanProperty(bound=false, hidden=true, description=\"The client area of the frame where child components are normally inserted.\") public void setContentPane(Container contentPane)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"javax.swing.JFrame","api":"setLayeredPane","signature":"@BeanProperty(bound=false, hidden=true, description=\"The pane that holds the various frame layers.\") public void setLayeredPane(JLayeredPane layeredPane)","paramTypes":["JLayeredPane"],"notNullIndices":[0]},{"className":"javax.swing.JInternalFrame","api":"remove","signature":"public void remove(Component comp)","paramTypes":["Component"],"notNullIndices":[0]},{"className":"javax.swing.JInternalFrame","api":"setContentPane","signature":"@BeanProperty(hidden=true, description=\"The client area of the internal frame where child components are normally inserted.\") public void setContentPane(Container c)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"javax.swing.JInternalFrame","api":"setLayeredPane","signature":"@BeanProperty(hidden=true, description=\"The pane which holds the various desktop layers.\") public void setLayeredPane(JLayeredPane layered)","paramTypes":["JLayeredPane"],"notNullIndices":[0]},{"className":"javax.swing.JInternalFrame","api":"setLayer","signature":"@BeanProperty(bound=false, expert=true, description=\"Specifies what desktop layer is used.\") public void setLayer(Integer layer)","paramTypes":["Integer"],"notNullIndices":[0]},{"className":"javax.swing.JList<E>","api":"JList","signature":"public JList(ListModel<E> dataModel)","paramTypes":["ListModel"],"notNullIndices":[0]},{"className":"javax.swing.JList<E>","api":"setDropMode","signature":"public final void setDropMode(DropMode dropMode)","paramTypes":["DropMode"],"notNullIndices":[0]},{"className":"javax.swing.JList<E>","api":"getNextMatch","signature":"public int getNextMatch(String prefix, int startIndex, Position.Bias bias)","paramTypes":["String","int","Position.Bias"],"notNullIndices":[0]},{"className":"javax.swing.JList<E>","api":"setModel","signature":"@BeanProperty(visualUpdate=true, description=\"The object that contains the data to be drawn by this JList.\") public void setModel(ListModel<E> model)","paramTypes":["ListModel"],"notNullIndices":[0]},{"className":"javax.swing.JList<E>","api":"setSelectionModel","signature":"@BeanProperty(description=\"The selection model, recording which cells are selected.\") public void setSelectionModel(ListSelectionModel selectionModel)","paramTypes":["ListSelectionModel"],"notNullIndices":[0]},{"className":"javax.swing.JList<E>","api":"setSelectedIndices","signature":"public void setSelectedIndices(int[] indices)","paramTypes":["int[]"],"notNullIndices":[0]},{"className":"javax.swing.JList<E>","api":"getScrollableUnitIncrement","signature":"public int getScrollableUnitIncrement(Rectangle visibleRect, int orientation, int direction)","paramTypes":["Rectangle","int","int"],"notNullIndices":[0]},{"className":"javax.swing.JList<E>","api":"getScrollableBlockIncrement","signature":"public int getScrollableBlockIncrement(Rectangle visibleRect, int orientation, int direction)","paramTypes":["Rectangle","int","int"],"notNullIndices":[0]},{"className":"javax.swing.JMenu","api":"applyComponentOrientation","signature":"public void applyComponentOrientation(ComponentOrientation o)","paramTypes":["ComponentOrientation"],"notNullIndices":[0]},{"className":"javax.swing.JPopupMenu.AccessibleJPopupMenu","api":"propertyChange","signature":"public void propertyChange(PropertyChangeEvent e)","paramTypes":["PropertyChangeEvent"],"notNullIndices":[0]},{"className":"javax.swing.JRootPane","api":"setContentPane","signature":"public void setContentPane(Container content)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"javax.swing.JRootPane","api":"setLayeredPane","signature":"public void setLayeredPane(JLayeredPane layered)","paramTypes":["JLayeredPane"],"notNullIndices":[0]},{"className":"javax.swing.JRootPane","api":"setGlassPane","signature":"public void setGlassPane(Component glass)","paramTypes":["Component"],"notNullIndices":[0]},{"className":"javax.swing.JScrollPane.AccessibleJScrollPane","api":"stateChanged","signature":"public void stateChanged(ChangeEvent e)","paramTypes":["ChangeEvent"],"notNullIndices":[0]},{"className":"javax.swing.JScrollPane.AccessibleJScrollPane","api":"propertyChange","signature":"public void propertyChange(PropertyChangeEvent e)","paramTypes":["PropertyChangeEvent"],"notNullIndices":[0]},{"className":"javax.swing.JSpinner.AccessibleJSpinner","api":"stateChanged","signature":"public void stateChanged(ChangeEvent e)","paramTypes":["ChangeEvent"],"notNullIndices":[0]},{"className":"javax.swing.JSpinner","api":"JSpinner","signature":"public JSpinner(SpinnerModel model)","paramTypes":["SpinnerModel"],"notNullIndices":[0]},{"className":"javax.swing.JSpinner","api":"setModel","signature":"@BeanProperty(visualUpdate=true, description=\"Model that represents the value of this spinner.\") public void setModel(SpinnerModel model)","paramTypes":["SpinnerModel"],"notNullIndices":[0]},{"className":"javax.swing.JSpinner","api":"setEditor","signature":"@BeanProperty(visualUpdate=true, description=\"JComponent that displays the current value of the model\") public void setEditor(JComponent editor)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.JTable.PrintMode","api":"valueOf","signature":"public static JTable.PrintMode valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.JTable","api":"setGridColor","signature":"@BeanProperty(description=\"The grid color.\") public void setGridColor(Color gridColor)","paramTypes":["Color"],"notNullIndices":[0]},{"className":"javax.swing.JTable","api":"setDropMode","signature":"public final void setDropMode(DropMode dropMode)","paramTypes":["DropMode"],"notNullIndices":[0]},{"className":"javax.swing.JTable","api":"getColumn","signature":"public TableColumn getColumn(Object identifier)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.JTable","api":"setModel","signature":"@BeanProperty(description=\"The model that is the source of the data for this view.\") public void setModel(TableModel dataModel)","paramTypes":["TableModel"],"notNullIndices":[0]},{"className":"javax.swing.JTable","api":"setColumnModel","signature":"@BeanProperty(description=\"The object governing the way columns appear in the view.\") public void setColumnModel(TableColumnModel columnModel)","paramTypes":["TableColumnModel"],"notNullIndices":[0]},{"className":"javax.swing.JTable","api":"setSelectionModel","signature":"@BeanProperty(description=\"The selection model for rows.\") public void setSelectionModel(ListSelectionModel selectionModel)","paramTypes":["ListSelectionModel"],"notNullIndices":[0]},{"className":"javax.swing.JTable","api":"sorterChanged","signature":"public void sorterChanged(RowSorterEvent e)","paramTypes":["RowSorterEvent"],"notNullIndices":[0]},{"className":"javax.swing.JTree","api":"setDropMode","signature":"public final void setDropMode(DropMode dropMode)","paramTypes":["DropMode"],"notNullIndices":[0]},{"className":"javax.swing.JTree","api":"getNextMatch","signature":"public TreePath getNextMatch(String prefix, int startingRow, Position.Bias bias)","paramTypes":["String","int","Position.Bias"],"notNullIndices":[0]},{"className":"javax.swing.JTree","api":"removeDescendantToggledPaths","signature":"protected void removeDescendantToggledPaths(Enumeration<TreePath> toRemove)","paramTypes":["Enumeration"],"notNullIndices":[0]},{"className":"javax.swing.JWindow","api":"remove","signature":"public void remove(Component comp)","paramTypes":["Component"],"notNullIndices":[0]},{"className":"javax.swing.JWindow","api":"setContentPane","signature":"@BeanProperty(bound=false, hidden=true, description=\"The client area of the window where child components are normally inserted.\") public void setContentPane(Container contentPane)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"javax.swing.JWindow","api":"setLayeredPane","signature":"@BeanProperty(bound=false, hidden=true, description=\"The pane which holds the various window layers.\") public void setLayeredPane(JLayeredPane layeredPane)","paramTypes":["JLayeredPane"],"notNullIndices":[0]},{"className":"javax.swing.KeyStroke","api":"getKeyStroke","signature":"public static KeyStroke getKeyStroke(Character keyChar, int modifiers)","paramTypes":["Character","int"],"notNullIndices":[0]},{"className":"javax.swing.KeyStroke","api":"getKeyStrokeForEvent","signature":"public static KeyStroke getKeyStrokeForEvent(KeyEvent anEvent)","paramTypes":["KeyEvent"],"notNullIndices":[0]},{"className":"javax.swing.LayoutFocusTraversalPolicy","api":"getComponentAfter","signature":"public Component getComponentAfter(Container aContainer, Component aComponent)","paramTypes":["Container","Component"],"notNullIndices":[0,1]},{"className":"javax.swing.LayoutFocusTraversalPolicy","api":"getComponentBefore","signature":"public Component getComponentBefore(Container aContainer, Component aComponent)","paramTypes":["Container","Component"],"notNullIndices":[0,1]},{"className":"javax.swing.LayoutFocusTraversalPolicy","api":"getFirstComponent","signature":"public Component getFirstComponent(Container aContainer)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"javax.swing.LayoutFocusTraversalPolicy","api":"getLastComponent","signature":"public Component getLastComponent(Container aContainer)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"javax.swing.LayoutStyle.ComponentPlacement","api":"valueOf","signature":"public static LayoutStyle.ComponentPlacement valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.LayoutStyle","api":"getPreferredGap","signature":"public abstract int getPreferredGap(JComponent component1, JComponent component2, LayoutStyle.ComponentPlacement type, int position, Container parent)","paramTypes":["JComponent","JComponent","LayoutStyle.ComponentPlacement","int","Container"],"notNullIndices":[0,1,2]},{"className":"javax.swing.LookAndFeel","api":"uninstallBorder","signature":"public static void uninstallBorder(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.LookAndFeel","api":"makeKeyBindings","signature":"public static JTextComponent.KeyBinding[] makeKeyBindings(Object[] keyBindingList)","paramTypes":["Object[]"],"notNullIndices":[0]},{"className":"javax.swing.LookAndFeel","api":"makeComponentInputMap","signature":"public static ComponentInputMap makeComponentInputMap(JComponent c, Object[] keys)","paramTypes":["JComponent","Object[]"],"notNullIndices":[0]},{"className":"javax.swing.Popup","api":"Popup","signature":"protected Popup(Component owner, Component contents, int x, int y)","paramTypes":["Component","Component","int","int"],"notNullIndices":[1]},{"className":"javax.swing.PopupFactory","api":"setSharedInstance","signature":"public static void setSharedInstance(PopupFactory factory)","paramTypes":["PopupFactory"],"notNullIndices":[0]},{"className":"javax.swing.PopupFactory","api":"getPopup","signature":"public Popup getPopup(Component owner, Component contents, int x, int y) throws IllegalArgumentException","paramTypes":["Component","Component","int","int"],"notNullIndices":[1]},{"className":"javax.swing.PopupFactory","api":"getPopup","signature":"protected Popup getPopup(Component owner, Component contents, int x, int y, boolean isHeavyWeightPopup) throws IllegalArgumentException","paramTypes":["Component","Component","int","int","boolean"],"notNullIndices":[1]},{"className":"javax.swing.ProgressMonitor.AccessibleProgressMonitor","api":"stateChanged","signature":"public void stateChanged(ChangeEvent e)","paramTypes":["ChangeEvent"],"notNullIndices":[0]},{"className":"javax.swing.ProgressMonitor.AccessibleProgressMonitor","api":"propertyChange","signature":"public void propertyChange(PropertyChangeEvent e)","paramTypes":["PropertyChangeEvent"],"notNullIndices":[0]},{"className":"javax.swing.RootPaneContainer","api":"setContentPane","signature":"void setContentPane(Container contentPane)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"javax.swing.RootPaneContainer","api":"setLayeredPane","signature":"void setLayeredPane(JLayeredPane layeredPane)","paramTypes":["JLayeredPane"],"notNullIndices":[0]},{"className":"javax.swing.RowFilter.ComparisonType","api":"valueOf","signature":"public static RowFilter.ComparisonType valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.RowSorter.SortKey","api":"SortKey","signature":"public SortKey(int column, SortOrder sortOrder)","paramTypes":["int","SortOrder"],"notNullIndices":[1]},{"className":"javax.swing.SortOrder","api":"valueOf","signature":"public static SortOrder valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.SortingFocusTraversalPolicy","api":"getComponentAfter","signature":"public Component getComponentAfter(Container aContainer, Component aComponent)","paramTypes":["Container","Component"],"notNullIndices":[0,1]},{"className":"javax.swing.SortingFocusTraversalPolicy","api":"getComponentBefore","signature":"public Component getComponentBefore(Container aContainer, Component aComponent)","paramTypes":["Container","Component"],"notNullIndices":[0,1]},{"className":"javax.swing.SortingFocusTraversalPolicy","api":"getFirstComponent","signature":"public Component getFirstComponent(Container aContainer)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"javax.swing.SortingFocusTraversalPolicy","api":"getLastComponent","signature":"public Component getLastComponent(Container aContainer)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"javax.swing.SortingFocusTraversalPolicy","api":"getDefaultComponent","signature":"public Component getDefaultComponent(Container aContainer)","paramTypes":["Container"],"notNullIndices":[0]},{"className":"javax.swing.SpinnerDateModel","api":"SpinnerDateModel","signature":"public SpinnerDateModel(Date value, Comparable<Date> start, Comparable<Date> end, int calendarField)","paramTypes":["Date","Comparable","Comparable","int"],"notNullIndices":[0,3]},{"className":"javax.swing.SpinnerDateModel","api":"setValue","signature":"public void setValue(Object value)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.SpinnerListModel","api":"SpinnerListModel","signature":"public SpinnerListModel(List<?> values)","paramTypes":["List"],"notNullIndices":[0]},{"className":"javax.swing.SpinnerListModel","api":"SpinnerListModel","signature":"public SpinnerListModel(Object[] values)","paramTypes":["Object[]"],"notNullIndices":[0]},{"className":"javax.swing.SpinnerListModel","api":"setList","signature":"public void setList(List<?> list)","paramTypes":["List"],"notNullIndices":[0]},{"className":"javax.swing.SpinnerNumberModel","api":"SpinnerNumberModel","signature":"public SpinnerNumberModel(Number value, Comparable<?> minimum, Comparable<?> maximum, Number stepSize)","paramTypes":["Number","Comparable","Comparable","Number"],"notNullIndices":[0,3]},{"className":"javax.swing.SpinnerNumberModel","api":"setValue","signature":"public void setValue(Object value)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.Spring","api":"scale","signature":"public static Spring scale(Spring s, float factor)","paramTypes":["Spring","float"],"notNullIndices":[0]},{"className":"javax.swing.Spring","api":"width","signature":"public static Spring width(Component c)","paramTypes":["Component"],"notNullIndices":[0]},{"className":"javax.swing.Spring","api":"height","signature":"public static Spring height(Component c)","paramTypes":["Component"],"notNullIndices":[0]},{"className":"javax.swing.SpringLayout.Constraints","api":"Constraints","signature":"public Constraints(Component c)","paramTypes":["Component"],"notNullIndices":[0]},{"className":"javax.swing.SpringLayout.Constraints","api":"setConstraint","signature":"public void setConstraint(String edgeName, Spring s)","paramTypes":["String","Spring"],"notNullIndices":[0]},{"className":"javax.swing.SpringLayout.Constraints","api":"getConstraint","signature":"public Spring getConstraint(String edgeName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.SwingUtilities","api":"getUnwrappedParent","signature":"public static Container getUnwrappedParent(Component component)","paramTypes":["Component"],"notNullIndices":[0]},{"className":"javax.swing.SwingUtilities","api":"getUnwrappedView","signature":"public static Component getUnwrappedView(JViewport viewport)","paramTypes":["JViewport"],"notNullIndices":[0]},{"className":"javax.swing.SwingWorker.StateValue","api":"valueOf","signature":"public static SwingWorker.StateValue valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.TransferHandler.DropLocation","api":"DropLocation","signature":"protected DropLocation(Point dropPoint)","paramTypes":["Point"],"notNullIndices":[0]},{"className":"javax.swing.TransferHandler","api":"importData","signature":"public boolean importData(TransferHandler.TransferSupport support)","paramTypes":["TransferHandler.TransferSupport"],"notNullIndices":[0]},{"className":"javax.swing.TransferHandler","api":"canImport","signature":"public boolean canImport(TransferHandler.TransferSupport support)","paramTypes":["TransferHandler.TransferSupport"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"setInstalledLookAndFeels","signature":"public static void setInstalledLookAndFeels(UIManager.LookAndFeelInfo[] infos) throws SecurityException","paramTypes":["UIManager.LookAndFeelInfo[]"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"createLookAndFeel","signature":"public static LookAndFeel createLookAndFeel(String name) throws UnsupportedLookAndFeelException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"setLookAndFeel","signature":"public static void setLookAndFeel(String className) throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getFont","signature":"public static Font getFont(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getFont","signature":"public static Font getFont(Object key, Locale l)","paramTypes":["Object","Locale"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getColor","signature":"public static Color getColor(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getColor","signature":"public static Color getColor(Object key, Locale l)","paramTypes":["Object","Locale"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getIcon","signature":"public static Icon getIcon(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getIcon","signature":"public static Icon getIcon(Object key, Locale l)","paramTypes":["Object","Locale"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getBorder","signature":"public static Border getBorder(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getBorder","signature":"public static Border getBorder(Object key, Locale l)","paramTypes":["Object","Locale"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getString","signature":"public static String getString(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getString","signature":"public static String getString(Object key, Locale l)","paramTypes":["Object","Locale"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getInt","signature":"public static int getInt(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getInt","signature":"public static int getInt(Object key, Locale l)","paramTypes":["Object","Locale"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getBoolean","signature":"public static boolean getBoolean(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getBoolean","signature":"public static boolean getBoolean(Object key, Locale l)","paramTypes":["Object","Locale"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getInsets","signature":"public static Insets getInsets(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getInsets","signature":"public static Insets getInsets(Object key, Locale l)","paramTypes":["Object","Locale"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getDimension","signature":"public static Dimension getDimension(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getDimension","signature":"public static Dimension getDimension(Object key, Locale l)","paramTypes":["Object","Locale"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"get","signature":"public static Object get(Object key)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"get","signature":"public static Object get(Object key, Locale l)","paramTypes":["Object","Locale"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"put","signature":"public static Object put(Object key, Object value)","paramTypes":["Object","Object"],"notNullIndices":[0]},{"className":"javax.swing.UIManager","api":"getUI","signature":"public static ComponentUI getUI(JComponent target)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.border.StrokeBorder","api":"StrokeBorder","signature":"public StrokeBorder(BasicStroke stroke)","paramTypes":["BasicStroke"],"notNullIndices":[0]},{"className":"javax.swing.border.StrokeBorder","api":"StrokeBorder","signature":"@ConstructorProperties({\"stroke\",\"paint\"}) public StrokeBorder(BasicStroke stroke, Paint paint)","paramTypes":["BasicStroke","Paint"],"notNullIndices":[0]},{"className":"javax.swing.border.StrokeBorder","api":"paintBorder","signature":"public void paintBorder(Component c, Graphics g, int x, int y, int width, int height)","paramTypes":["Component","Graphics","int","int","int","int"],"notNullIndices":[1]},{"className":"javax.swing.border.StrokeBorder","api":"getBorderInsets","signature":"public Insets getBorderInsets(Component c, Insets insets)","paramTypes":["Component","Insets"],"notNullIndices":[1]},{"className":"javax.swing.event.RowSorterEvent.Type","api":"valueOf","signature":"public static RowSorterEvent.Type valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.event.RowSorterEvent","api":"RowSorterEvent","signature":"public RowSorterEvent(RowSorter<?> source)","paramTypes":["RowSorter"],"notNullIndices":[0]},{"className":"javax.swing.event.RowSorterEvent","api":"RowSorterEvent","signature":"public RowSorterEvent(RowSorter<?> source, RowSorterEvent.Type type, int[] previousRowIndexToModel)","paramTypes":["RowSorter","RowSorterEvent.Type","int[]"],"notNullIndices":[0,1]},{"className":"javax.swing.event.SwingPropertyChangeSupport","api":"SwingPropertyChangeSupport","signature":"public SwingPropertyChangeSupport(Object sourceBean)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.event.SwingPropertyChangeSupport","api":"SwingPropertyChangeSupport","signature":"public SwingPropertyChangeSupport(Object sourceBean, boolean notifyOnEDT)","paramTypes":["Object","boolean"],"notNullIndices":[0]},{"className":"javax.swing.event.SwingPropertyChangeSupport","api":"firePropertyChange","signature":"public void firePropertyChange(PropertyChangeEvent evt)","paramTypes":["PropertyChangeEvent"],"notNullIndices":[0]},{"className":"javax.swing.filechooser.FileNameExtensionFilter","api":"FileNameExtensionFilter","signature":"public FileNameExtensionFilter(String description, String... extensions)","paramTypes":["String","String..."],"notNullIndices":[1]},{"className":"javax.swing.filechooser.FileSystemView","api":"isLink","signature":"public boolean isLink(File file)","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.swing.filechooser.FileSystemView","api":"getLinkLocation","signature":"public File getLinkLocation(File file) throws FileNotFoundException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.swing.plaf.ComponentUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.ComponentUI","api":"getBaselineResizeBehavior","signature":"public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.ListUI","api":"locationToIndex","signature":"public abstract int locationToIndex(JList<?> list, Point location)","paramTypes":["JList","Point"],"notNullIndices":[1]},{"className":"javax.swing.plaf.basic.BasicButtonUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicButtonUI","api":"getBaselineResizeBehavior","signature":"public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicComboBoxUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicComboBoxUI","api":"getBaselineResizeBehavior","signature":"public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicGraphicsUtils","api":"drawString","signature":"public static void drawString(JComponent c, Graphics2D g, String string, float x, float y)","paramTypes":["JComponent","Graphics2D","String","float","float"],"notNullIndices":[1]},{"className":"javax.swing.plaf.basic.BasicGraphicsUtils","api":"drawStringUnderlineCharAt","signature":"public static void drawStringUnderlineCharAt(JComponent c, Graphics2D g, String string, int underlinedIndex, float x, float y)","paramTypes":["JComponent","Graphics2D","String","int","float","float"],"notNullIndices":[1]},{"className":"javax.swing.plaf.basic.BasicGraphicsUtils","api":"getClippedString","signature":"public static String getClippedString(JComponent c, FontMetrics fm, String string, int availTextWidth)","paramTypes":["JComponent","FontMetrics","String","int"],"notNullIndices":[1]},{"className":"javax.swing.plaf.basic.BasicGraphicsUtils","api":"getStringWidth","signature":"public static float getStringWidth(JComponent c, FontMetrics fm, String string)","paramTypes":["JComponent","FontMetrics","String"],"notNullIndices":[1]},{"className":"javax.swing.plaf.basic.BasicLabelUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicLabelUI","api":"getBaselineResizeBehavior","signature":"public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicListUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicListUI","api":"getBaselineResizeBehavior","signature":"public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicListUI","api":"locationToIndex","signature":"public int locationToIndex(JList<?> list, Point location)","paramTypes":["JList","Point"],"notNullIndices":[1]},{"className":"javax.swing.plaf.basic.BasicLookAndFeel","api":"initClassDefaults","signature":"protected void initClassDefaults(UIDefaults table)","paramTypes":["UIDefaults"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicLookAndFeel","api":"initSystemColorDefaults","signature":"protected void initSystemColorDefaults(UIDefaults table)","paramTypes":["UIDefaults"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicLookAndFeel","api":"initComponentDefaults","signature":"protected void initComponentDefaults(UIDefaults table)","paramTypes":["UIDefaults"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicPanelUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicPanelUI","api":"getBaselineResizeBehavior","signature":"public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicProgressBarUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicProgressBarUI","api":"getBaselineResizeBehavior","signature":"public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicScrollPaneUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicScrollPaneUI","api":"getBaselineResizeBehavior","signature":"public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicSliderUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicSliderUI","api":"getBaselineResizeBehavior","signature":"public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicSpinnerUI","api":"installNextButtonListeners","signature":"protected void installNextButtonListeners(Component c)","paramTypes":["Component"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicSpinnerUI","api":"installPreviousButtonListeners","signature":"protected void installPreviousButtonListeners(Component c)","paramTypes":["Component"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicSpinnerUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicSpinnerUI","api":"getBaselineResizeBehavior","signature":"public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicTabbedPaneUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicTabbedPaneUI","api":"getBaselineResizeBehavior","signature":"public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicTableHeaderUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicTableUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicTableUI","api":"getBaselineResizeBehavior","signature":"public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicTextAreaUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicTextAreaUI","api":"getBaselineResizeBehavior","signature":"public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicTextFieldUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicTextFieldUI","api":"getBaselineResizeBehavior","signature":"public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicToolBarUI","api":"paintDragWindow","signature":"protected void paintDragWindow(Graphics g)","paramTypes":["Graphics"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicTreeUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.basic.BasicTreeUI","api":"getBaselineResizeBehavior","signature":"public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.metal.MetalButtonUI","api":"update","signature":"public void update(Graphics g, JComponent c)","paramTypes":["Graphics","JComponent"],"notNullIndices":[0,1]},{"className":"javax.swing.plaf.metal.MetalComboBoxUI","api":"getBaseline","signature":"public int getBaseline(JComponent c, int width, int height)","paramTypes":["JComponent","int","int"],"notNullIndices":[0]},{"className":"javax.swing.plaf.metal.MetalLookAndFeel","api":"initClassDefaults","signature":"protected void initClassDefaults(UIDefaults table)","paramTypes":["UIDefaults"],"notNullIndices":[0]},{"className":"javax.swing.plaf.metal.MetalLookAndFeel","api":"initSystemColorDefaults","signature":"protected void initSystemColorDefaults(UIDefaults table)","paramTypes":["UIDefaults"],"notNullIndices":[0]},{"className":"javax.swing.plaf.metal.MetalLookAndFeel","api":"initComponentDefaults","signature":"protected void initComponentDefaults(UIDefaults table)","paramTypes":["UIDefaults"],"notNullIndices":[0]},{"className":"javax.swing.plaf.metal.MetalLookAndFeel","api":"setCurrentTheme","signature":"public static void setCurrentTheme(MetalTheme theme)","paramTypes":["MetalTheme"],"notNullIndices":[0]},{"className":"javax.swing.plaf.metal.MetalMenuBarUI","api":"createUI","signature":"public static ComponentUI createUI(JComponent x)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.metal.MetalMenuBarUI","api":"installUI","signature":"public void installUI(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.metal.MetalMenuBarUI","api":"uninstallUI","signature":"public void uninstallUI(JComponent c)","paramTypes":["JComponent"],"notNullIndices":[0]},{"className":"javax.swing.plaf.metal.MetalMenuBarUI","api":"update","signature":"public void update(Graphics g, JComponent c)","paramTypes":["Graphics","JComponent"],"notNullIndices":[0,1]},{"className":"javax.swing.plaf.metal.MetalToggleButtonUI","api":"update","signature":"public void update(Graphics g, JComponent c)","paramTypes":["Graphics","JComponent"],"notNullIndices":[0,1]},{"className":"javax.swing.plaf.metal.MetalToolBarUI","api":"update","signature":"public void update(Graphics g, JComponent c)","paramTypes":["Graphics","JComponent"],"notNullIndices":[0,1]},{"className":"javax.swing.plaf.metal.OceanTheme","api":"addCustomEntriesToTable","signature":"public void addCustomEntriesToTable(UIDefaults table)","paramTypes":["UIDefaults"],"notNullIndices":[0]},{"className":"javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext.CacheMode","api":"valueOf","signature":"public static AbstractRegionPainter.PaintContext.CacheMode valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.plaf.nimbus.AbstractRegionPainter","api":"decodeGradient","signature":"protected final LinearGradientPaint decodeGradient(float x1, float y1, float x2, float y2, float[] midpoints, Color[] colors)","paramTypes":["float","float","float","float","float[]","Color[]"],"notNullIndices":[4,5]},{"className":"javax.swing.plaf.nimbus.AbstractRegionPainter","api":"decodeRadialGradient","signature":"protected final RadialGradientPaint decodeRadialGradient(float x, float y, float r, float[] midpoints, Color[] colors)","paramTypes":["float","float","float","float[]","Color[]"],"notNullIndices":[3,4]},{"className":"javax.swing.plaf.synth.SynthContext","api":"SynthContext","signature":"public SynthContext(JComponent component, Region region, SynthStyle style, int state)","paramTypes":["JComponent","Region","SynthStyle","int"],"notNullIndices":[0,1,2]},{"className":"javax.swing.plaf.synth.SynthLookAndFeel","api":"load","signature":"public void load(InputStream input, Class<?> resourceBase) throws ParseException","paramTypes":["InputStream","Class"],"notNullIndices":[0,1]},{"className":"javax.swing.plaf.synth.SynthLookAndFeel","api":"load","signature":"public void load(URL url) throws ParseException, IOException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.swing.table.DefaultTableColumnModel","api":"addColumn","signature":"public void addColumn(TableColumn aColumn)","paramTypes":["TableColumn"],"notNullIndices":[0]},{"className":"javax.swing.table.DefaultTableColumnModel","api":"getColumnIndex","signature":"public int getColumnIndex(Object identifier)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.table.DefaultTableColumnModel","api":"setSelectionModel","signature":"public void setSelectionModel(ListSelectionModel newModel)","paramTypes":["ListSelectionModel"],"notNullIndices":[0]},{"className":"javax.swing.table.JTableHeader","api":"setColumnModel","signature":"@BeanProperty(description=\"The object governing the way columns appear in the view.\") public void setColumnModel(TableColumnModel columnModel)","paramTypes":["TableColumnModel"],"notNullIndices":[0]},{"className":"javax.swing.table.TableColumnModel","api":"getColumnIndex","signature":"int getColumnIndex(Object columnIdentifier)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.table.TableStringConverter","api":"toString","signature":"public abstract String toString(TableModel model, int row, int column)","paramTypes":["TableModel","int","int"],"notNullIndices":[0]},{"className":"javax.swing.text.AttributeSet","api":"containsAttribute","signature":"boolean containsAttribute(Object name, Object value)","paramTypes":["Object","Object"],"notNullIndices":[0,1]},{"className":"javax.swing.text.AttributeSet","api":"containsAttributes","signature":"boolean containsAttributes(AttributeSet attributes)","paramTypes":["AttributeSet"],"notNullIndices":[0]},{"className":"javax.swing.text.DefaultStyledDocument","api":"removeElement","signature":"public void removeElement(Element elem)","paramTypes":["Element"],"notNullIndices":[0]},{"className":"javax.swing.text.JTextComponent","api":"setDropMode","signature":"public final void setDropMode(DropMode dropMode)","paramTypes":["DropMode"],"notNullIndices":[0]},{"className":"javax.swing.text.html.FormSubmitEvent.MethodType","api":"valueOf","signature":"public static FormSubmitEvent.MethodType valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.swing.tree.DefaultMutableTreeNode","api":"insert","signature":"public void insert(MutableTreeNode newChild, int childIndex)","paramTypes":["MutableTreeNode","int"],"notNullIndices":[0]},{"className":"javax.swing.tree.DefaultMutableTreeNode","api":"getIndex","signature":"public int getIndex(TreeNode aChild)","paramTypes":["TreeNode"],"notNullIndices":[0]},{"className":"javax.swing.tree.DefaultMutableTreeNode","api":"remove","signature":"public void remove(MutableTreeNode aChild)","paramTypes":["MutableTreeNode"],"notNullIndices":[0]},{"className":"javax.swing.tree.DefaultMutableTreeNode","api":"add","signature":"public void add(MutableTreeNode newChild)","paramTypes":["MutableTreeNode"],"notNullIndices":[0]},{"className":"javax.swing.tree.DefaultMutableTreeNode","api":"getChildAfter","signature":"public TreeNode getChildAfter(TreeNode aChild)","paramTypes":["TreeNode"],"notNullIndices":[0]},{"className":"javax.swing.tree.DefaultMutableTreeNode","api":"getChildBefore","signature":"public TreeNode getChildBefore(TreeNode aChild)","paramTypes":["TreeNode"],"notNullIndices":[0]},{"className":"javax.swing.tree.TreePath","api":"TreePath","signature":"@ConstructorProperties(\"path\") public TreePath(Object[] path)","paramTypes":["Object[]"],"notNullIndices":[0]},{"className":"javax.swing.tree.TreePath","api":"TreePath","signature":"public TreePath(Object lastPathComponent)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.swing.tree.TreePath","api":"TreePath","signature":"protected TreePath(TreePath parent, Object lastPathComponent)","paramTypes":["TreePath","Object"],"notNullIndices":[1]},{"className":"javax.swing.tree.TreePath","api":"TreePath","signature":"protected TreePath(Object[] path, int length)","paramTypes":["Object[]","int"],"notNullIndices":[0]},{"className":"javax.swing.tree.TreePath","api":"TreePath","signature":"protected TreePath(Object[] path, int length)","paramTypes":["Object[]","int"],"notNullIndices":[1]},{"className":"javax.swing.tree.TreePath","api":"pathByAddingChild","signature":"public TreePath pathByAddingChild(Object child)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"javax.tools.Diagnostic.Kind","api":"valueOf","signature":"public static Diagnostic.Kind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.tools.DocumentationTool.Location","api":"valueOf","signature":"public static DocumentationTool.Location valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.tools.JavaFileObject.Kind","api":"valueOf","signature":"public static JavaFileObject.Kind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.tools.StandardLocation","api":"valueOf","signature":"public static StandardLocation valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.tools.Tool","api":"run","signature":"int run(InputStream in, OutputStream out, OutputStream err, String... arguments)","paramTypes":["InputStream","OutputStream","OutputStream","String..."],"notNullIndices":[3]},{"className":"javax.xml.catalog.CatalogFeatures.Feature","api":"valueOf","signature":"public static CatalogFeatures.Feature valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.KeySelector","api":"singletonKeySelector","signature":"public static KeySelector singletonKeySelector(Key key)","paramTypes":["Key"],"notNullIndices":[0]},{"className":"javax.xml.crypto.OctetStreamData","api":"OctetStreamData","signature":"public OctetStreamData(InputStream octetStream)","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"javax.xml.crypto.OctetStreamData","api":"OctetStreamData","signature":"public OctetStreamData(InputStream octetStream, String uri, String mimeType)","paramTypes":["InputStream","String","String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.URIDereferencer","api":"dereference","signature":"Data dereference(URIReference uriReference, XMLCryptoContext context) throws URIReferenceException","paramTypes":["URIReference","XMLCryptoContext"],"notNullIndices":[0,1]},{"className":"javax.xml.crypto.URIReferenceException","api":"URIReferenceException","signature":"public URIReferenceException(String message, Throwable cause, URIReference uriReference)","paramTypes":["String","Throwable","URIReference"],"notNullIndices":[2]},{"className":"javax.xml.crypto.XMLCryptoContext","api":"getNamespacePrefix","signature":"String getNamespacePrefix(String namespaceURI, String defaultPrefix)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.XMLCryptoContext","api":"putNamespacePrefix","signature":"String putNamespacePrefix(String namespaceURI, String prefix)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.XMLCryptoContext","api":"setProperty","signature":"Object setProperty(String name, Object value)","paramTypes":["String","Object"],"notNullIndices":[0]},{"className":"javax.xml.crypto.XMLCryptoContext","api":"getProperty","signature":"Object getProperty(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.XMLStructure","api":"isFeatureSupported","signature":"boolean isFeatureSupported(String feature)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dom.DOMCryptoContext","api":"getNamespacePrefix","signature":"public String getNamespacePrefix(String namespaceURI, String defaultPrefix)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dom.DOMCryptoContext","api":"putNamespacePrefix","signature":"public String putNamespacePrefix(String namespaceURI, String prefix)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dom.DOMCryptoContext","api":"getProperty","signature":"public Object getProperty(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dom.DOMCryptoContext","api":"setProperty","signature":"public Object setProperty(String name, Object value)","paramTypes":["String","Object"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dom.DOMCryptoContext","api":"getElementById","signature":"public Element getElementById(String idValue)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dom.DOMCryptoContext","api":"setIdAttributeNS","signature":"public void setIdAttributeNS(Element element, String namespaceURI, String localName)","paramTypes":["Element","String","String"],"notNullIndices":[0,2]},{"className":"javax.xml.crypto.dom.DOMStructure","api":"DOMStructure","signature":"public DOMStructure(Node node)","paramTypes":["Node"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dom.DOMStructure","api":"isFeatureSupported","signature":"public boolean isFeatureSupported(String feature)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.Reference","api":"validate","signature":"boolean validate(XMLValidateContext validateContext) throws XMLSignatureException","paramTypes":["XMLValidateContext"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.Transform","api":"transform","signature":"Data transform(Data data, XMLCryptoContext context) throws TransformException","paramTypes":["Data","XMLCryptoContext"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.Transform","api":"transform","signature":"Data transform(Data data, XMLCryptoContext context, OutputStream os) throws TransformException","paramTypes":["Data","XMLCryptoContext","OutputStream"],"notNullIndices":[0,2]},{"className":"javax.xml.crypto.dsig.TransformService","api":"getInstance","signature":"public static TransformService getInstance(String algorithm, String mechanismType) throws NoSuchAlgorithmException","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"javax.xml.crypto.dsig.TransformService","api":"getInstance","signature":"public static TransformService getInstance(String algorithm, String mechanismType, Provider provider) throws NoSuchAlgorithmException","paramTypes":["String","String","Provider"],"notNullIndices":[0,1,2]},{"className":"javax.xml.crypto.dsig.TransformService","api":"getInstance","signature":"public static TransformService getInstance(String algorithm, String mechanismType, String provider) throws NoSuchAlgorithmException, NoSuchProviderException","paramTypes":["String","String","String"],"notNullIndices":[0,1,2]},{"className":"javax.xml.crypto.dsig.TransformService","api":"marshalParams","signature":"public abstract void marshalParams(XMLStructure parent, XMLCryptoContext context) throws MarshalException","paramTypes":["XMLStructure","XMLCryptoContext"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.TransformService","api":"init","signature":"public abstract void init(XMLStructure parent, XMLCryptoContext context) throws InvalidAlgorithmParameterException","paramTypes":["XMLStructure","XMLCryptoContext"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignature.SignatureValue","api":"validate","signature":"boolean validate(XMLValidateContext validateContext) throws XMLSignatureException","paramTypes":["XMLValidateContext"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignature","api":"validate","signature":"boolean validate(XMLValidateContext validateContext) throws XMLSignatureException","paramTypes":["XMLValidateContext"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignature","api":"sign","signature":"void sign(XMLSignContext signContext) throws MarshalException, XMLSignatureException","paramTypes":["XMLSignContext"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"getInstance","signature":"public static XMLSignatureFactory getInstance(String mechanismType)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"getInstance","signature":"public static XMLSignatureFactory getInstance(String mechanismType, Provider provider)","paramTypes":["String","Provider"],"notNullIndices":[0,1]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"getInstance","signature":"public static XMLSignatureFactory getInstance(String mechanismType, String provider) throws NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newXMLSignature","signature":"public abstract XMLSignature newXMLSignature(SignedInfo si, KeyInfo ki)","paramTypes":["SignedInfo","KeyInfo"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newXMLSignature","signature":"public abstract XMLSignature newXMLSignature(SignedInfo si, KeyInfo ki, List<? extends XMLObject> objects, String id, String signatureValueId)","paramTypes":["SignedInfo","KeyInfo","List","String","String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newReference","signature":"public abstract Reference newReference(String uri, DigestMethod dm)","paramTypes":["String","DigestMethod"],"notNullIndices":[1]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newReference","signature":"public abstract Reference newReference(String uri, DigestMethod dm, List<? extends Transform> transforms, String type, String id)","paramTypes":["String","DigestMethod","List","String","String"],"notNullIndices":[1]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newReference","signature":"public abstract Reference newReference(String uri, DigestMethod dm, List<? extends Transform> transforms, String type, String id, byte[] digestValue)","paramTypes":["String","DigestMethod","List","String","String","byte[]"],"notNullIndices":[1,5]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newReference","signature":"public abstract Reference newReference(String uri, DigestMethod dm, List<? extends Transform> appliedTransforms, Data result, List<? extends Transform> transforms, String type, String id)","paramTypes":["String","DigestMethod","List","Data","List","String","String"],"notNullIndices":[1,2,3]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newSignedInfo","signature":"public abstract SignedInfo newSignedInfo(CanonicalizationMethod cm, SignatureMethod sm, List<? extends Reference> references, String id)","paramTypes":["CanonicalizationMethod","SignatureMethod","List","String"],"notNullIndices":[0,1,2]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newManifest","signature":"public abstract Manifest newManifest(List<? extends Reference> references)","paramTypes":["List"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newManifest","signature":"public abstract Manifest newManifest(List<? extends Reference> references, String id)","paramTypes":["List","String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newSignatureProperty","signature":"public abstract SignatureProperty newSignatureProperty(List<? extends XMLStructure> content, String target, String id)","paramTypes":["List","String","String"],"notNullIndices":[0,1]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newSignatureProperties","signature":"public abstract SignatureProperties newSignatureProperties(List<? extends SignatureProperty> properties, String id)","paramTypes":["List","String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newDigestMethod","signature":"public abstract DigestMethod newDigestMethod(String algorithm, DigestMethodParameterSpec params) throws NoSuchAlgorithmException, InvalidAlgorithmParameterException","paramTypes":["String","DigestMethodParameterSpec"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newSignatureMethod","signature":"public abstract SignatureMethod newSignatureMethod(String algorithm, SignatureMethodParameterSpec params) throws NoSuchAlgorithmException, InvalidAlgorithmParameterException","paramTypes":["String","SignatureMethodParameterSpec"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newTransform","signature":"public abstract Transform newTransform(String algorithm, TransformParameterSpec params) throws NoSuchAlgorithmException, InvalidAlgorithmParameterException","paramTypes":["String","TransformParameterSpec"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newTransform","signature":"public abstract Transform newTransform(String algorithm, XMLStructure params) throws NoSuchAlgorithmException, InvalidAlgorithmParameterException","paramTypes":["String","XMLStructure"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newCanonicalizationMethod","signature":"public abstract CanonicalizationMethod newCanonicalizationMethod(String algorithm, C14NMethodParameterSpec params) throws NoSuchAlgorithmException, InvalidAlgorithmParameterException","paramTypes":["String","C14NMethodParameterSpec"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"newCanonicalizationMethod","signature":"public abstract CanonicalizationMethod newCanonicalizationMethod(String algorithm, XMLStructure params) throws NoSuchAlgorithmException, InvalidAlgorithmParameterException","paramTypes":["String","XMLStructure"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"unmarshalXMLSignature","signature":"public abstract XMLSignature unmarshalXMLSignature(XMLValidateContext context) throws MarshalException","paramTypes":["XMLValidateContext"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"unmarshalXMLSignature","signature":"public abstract XMLSignature unmarshalXMLSignature(XMLStructure xmlStructure) throws MarshalException","paramTypes":["XMLStructure"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.XMLSignatureFactory","api":"isFeatureSupported","signature":"public abstract boolean isFeatureSupported(String feature)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.dom.DOMSignContext","api":"DOMSignContext","signature":"public DOMSignContext(Key signingKey, Node parent)","paramTypes":["Key","Node"],"notNullIndices":[0,1]},{"className":"javax.xml.crypto.dsig.dom.DOMSignContext","api":"DOMSignContext","signature":"public DOMSignContext(Key signingKey, Node parent, Node nextSibling)","paramTypes":["Key","Node","Node"],"notNullIndices":[0,1,2]},{"className":"javax.xml.crypto.dsig.dom.DOMSignContext","api":"DOMSignContext","signature":"public DOMSignContext(KeySelector ks, Node parent)","paramTypes":["KeySelector","Node"],"notNullIndices":[0,1]},{"className":"javax.xml.crypto.dsig.dom.DOMSignContext","api":"DOMSignContext","signature":"public DOMSignContext(KeySelector ks, Node parent, Node nextSibling)","paramTypes":["KeySelector","Node","Node"],"notNullIndices":[0,1,2]},{"className":"javax.xml.crypto.dsig.dom.DOMSignContext","api":"setParent","signature":"public void setParent(Node parent)","paramTypes":["Node"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.dom.DOMValidateContext","api":"DOMValidateContext","signature":"public DOMValidateContext(KeySelector ks, Node node)","paramTypes":["KeySelector","Node"],"notNullIndices":[0,1]},{"className":"javax.xml.crypto.dsig.dom.DOMValidateContext","api":"DOMValidateContext","signature":"public DOMValidateContext(Key validatingKey, Node node)","paramTypes":["Key","Node"],"notNullIndices":[0,1]},{"className":"javax.xml.crypto.dsig.dom.DOMValidateContext","api":"setNode","signature":"public void setNode(Node node)","paramTypes":["Node"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfo","api":"marshal","signature":"void marshal(XMLStructure parent, XMLCryptoContext context) throws MarshalException","paramTypes":["XMLStructure","XMLCryptoContext"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"getInstance","signature":"public static KeyInfoFactory getInstance(String mechanismType)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"getInstance","signature":"public static KeyInfoFactory getInstance(String mechanismType, Provider provider)","paramTypes":["String","Provider"],"notNullIndices":[0,1]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"getInstance","signature":"public static KeyInfoFactory getInstance(String mechanismType, String provider) throws NoSuchProviderException","paramTypes":["String","String"],"notNullIndices":[0,1]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"newKeyInfo","signature":"public abstract KeyInfo newKeyInfo(List<? extends XMLStructure> content)","paramTypes":["List"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"newKeyInfo","signature":"public abstract KeyInfo newKeyInfo(List<? extends XMLStructure> content, String id)","paramTypes":["List","String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"newKeyName","signature":"public abstract KeyName newKeyName(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"newKeyValue","signature":"public abstract KeyValue newKeyValue(PublicKey key) throws KeyException","paramTypes":["PublicKey"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"newPGPData","signature":"public abstract PGPData newPGPData(byte[] keyId)","paramTypes":["byte[]"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"newPGPData","signature":"public abstract PGPData newPGPData(byte[] keyId, byte[] keyPacket, List<? extends XMLStructure> other)","paramTypes":["byte[]","byte[]","List"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"newPGPData","signature":"public abstract PGPData newPGPData(byte[] keyPacket, List<? extends XMLStructure> other)","paramTypes":["byte[]","List"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"newRetrievalMethod","signature":"public abstract RetrievalMethod newRetrievalMethod(String uri)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"newRetrievalMethod","signature":"public abstract RetrievalMethod newRetrievalMethod(String uri, String type, List<? extends Transform> transforms)","paramTypes":["String","String","List"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"newX509Data","signature":"public abstract X509Data newX509Data(List<?> content)","paramTypes":["List"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"newX509IssuerSerial","signature":"public abstract X509IssuerSerial newX509IssuerSerial(String issuerName, BigInteger serialNumber)","paramTypes":["String","BigInteger"],"notNullIndices":[0,1]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"isFeatureSupported","signature":"public abstract boolean isFeatureSupported(String feature)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","api":"unmarshalKeyInfo","signature":"public abstract KeyInfo unmarshalKeyInfo(XMLStructure xmlStructure) throws MarshalException","paramTypes":["XMLStructure"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.keyinfo.RetrievalMethod","api":"dereference","signature":"Data dereference(XMLCryptoContext context) throws URIReferenceException","paramTypes":["XMLCryptoContext"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.spec.ExcC14NParameterSpec","api":"ExcC14NParameterSpec","signature":"public ExcC14NParameterSpec(List<String> prefixList)","paramTypes":["List"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec","api":"XPathFilter2ParameterSpec","signature":"public XPathFilter2ParameterSpec(List<XPathType> xPathList)","paramTypes":["List"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.spec.XPathFilterParameterSpec","api":"XPathFilterParameterSpec","signature":"public XPathFilterParameterSpec(String xPath)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.crypto.dsig.spec.XPathFilterParameterSpec","api":"XPathFilterParameterSpec","signature":"public XPathFilterParameterSpec(String xPath, Map<String,String> namespaceMap)","paramTypes":["String","Map"],"notNullIndices":[0,1]},{"className":"javax.xml.crypto.dsig.spec.XPathType","api":"XPathType","signature":"public XPathType(String expression, XPathType.Filter filter)","paramTypes":["String","XPathType.Filter"],"notNullIndices":[0,1]},{"className":"javax.xml.crypto.dsig.spec.XPathType","api":"XPathType","signature":"public XPathType(String expression, XPathType.Filter filter, Map<String,String> namespaceMap)","paramTypes":["String","XPathType.Filter","Map"],"notNullIndices":[0,1,2]},{"className":"javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec","api":"XSLTTransformParameterSpec","signature":"public XSLTTransformParameterSpec(XMLStructure stylesheet)","paramTypes":["XMLStructure"],"notNullIndices":[0]},{"className":"javax.xml.datatype.DatatypeFactory","api":"newInstance","signature":"public static DatatypeFactory newInstance(String factoryClassName, ClassLoader classLoader) throws DatatypeConfigurationException","paramTypes":["String","ClassLoader"],"notNullIndices":[0]},{"className":"javax.xml.datatype.DatatypeFactory","api":"newDuration","signature":"public abstract Duration newDuration(String lexicalRepresentation)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.datatype.DatatypeFactory","api":"newDuration","signature":"public abstract Duration newDuration(boolean isPositive, BigInteger years, BigInteger months, BigInteger days, BigInteger hours, BigInteger minutes, BigDecimal seconds)","paramTypes":["boolean","BigInteger","BigInteger","BigInteger","BigInteger","BigInteger","BigDecimal"],"notNullIndices":[2]},{"className":"javax.xml.datatype.DatatypeFactory","api":"newDurationDayTime","signature":"public Duration newDurationDayTime(String lexicalRepresentation)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.datatype.DatatypeFactory","api":"newDurationDayTime","signature":"public Duration newDurationDayTime(boolean isPositive, BigInteger day, BigInteger hour, BigInteger minute, BigInteger second)","paramTypes":["boolean","BigInteger","BigInteger","BigInteger","BigInteger"],"notNullIndices":[2]},{"className":"javax.xml.datatype.DatatypeFactory","api":"newDurationYearMonth","signature":"public Duration newDurationYearMonth(String lexicalRepresentation)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.datatype.DatatypeFactory","api":"newXMLGregorianCalendar","signature":"public abstract XMLGregorianCalendar newXMLGregorianCalendar(String lexicalRepresentation)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.datatype.DatatypeFactory","api":"newXMLGregorianCalendar","signature":"public abstract XMLGregorianCalendar newXMLGregorianCalendar(GregorianCalendar cal)","paramTypes":["GregorianCalendar"],"notNullIndices":[0]},{"className":"javax.xml.datatype.Duration","api":"getTimeInMillis","signature":"public long getTimeInMillis(Calendar startInstant)","paramTypes":["Calendar"],"notNullIndices":[0]},{"className":"javax.xml.datatype.Duration","api":"getTimeInMillis","signature":"public long getTimeInMillis(Date startInstant)","paramTypes":["Date"],"notNullIndices":[0]},{"className":"javax.xml.datatype.Duration","api":"getField","signature":"public abstract Number getField(DatatypeConstants.Field field)","paramTypes":["DatatypeConstants.Field"],"notNullIndices":[0]},{"className":"javax.xml.datatype.Duration","api":"isSet","signature":"public abstract boolean isSet(DatatypeConstants.Field field)","paramTypes":["DatatypeConstants.Field"],"notNullIndices":[0]},{"className":"javax.xml.datatype.Duration","api":"add","signature":"public abstract Duration add(Duration rhs)","paramTypes":["Duration"],"notNullIndices":[0]},{"className":"javax.xml.datatype.Duration","api":"addTo","signature":"public abstract void addTo(Calendar calendar)","paramTypes":["Calendar"],"notNullIndices":[0]},{"className":"javax.xml.datatype.Duration","api":"addTo","signature":"public void addTo(Date date)","paramTypes":["Date"],"notNullIndices":[0]},{"className":"javax.xml.datatype.Duration","api":"subtract","signature":"public Duration subtract(Duration rhs)","paramTypes":["Duration"],"notNullIndices":[0]},{"className":"javax.xml.datatype.Duration","api":"multiply","signature":"public abstract Duration multiply(BigDecimal factor)","paramTypes":["BigDecimal"],"notNullIndices":[0]},{"className":"javax.xml.datatype.Duration","api":"normalizeWith","signature":"public abstract Duration normalizeWith(Calendar startTimeInstant)","paramTypes":["Calendar"],"notNullIndices":[0]},{"className":"javax.xml.datatype.Duration","api":"compare","signature":"public abstract int compare(Duration duration)","paramTypes":["Duration"],"notNullIndices":[0]},{"className":"javax.xml.datatype.Duration","api":"isLongerThan","signature":"public boolean isLongerThan(Duration duration)","paramTypes":["Duration"],"notNullIndices":[0]},{"className":"javax.xml.datatype.Duration","api":"isShorterThan","signature":"public boolean isShorterThan(Duration duration)","paramTypes":["Duration"],"notNullIndices":[0]},{"className":"javax.xml.datatype.XMLGregorianCalendar","api":"compare","signature":"public abstract int compare(XMLGregorianCalendar xmlGregorianCalendar)","paramTypes":["XMLGregorianCalendar"],"notNullIndices":[0]},{"className":"javax.xml.datatype.XMLGregorianCalendar","api":"add","signature":"public abstract void add(Duration duration)","paramTypes":["Duration"],"notNullIndices":[0]},{"className":"javax.xml.namespace.NamespaceContext","api":"getNamespaceURI","signature":"String getNamespaceURI(String prefix)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.namespace.NamespaceContext","api":"getPrefix","signature":"String getPrefix(String namespaceURI)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.namespace.NamespaceContext","api":"getPrefixes","signature":"Iterator<String> getPrefixes(String namespaceURI)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.namespace.QName","api":"QName","signature":"public QName(String namespaceURI, String localPart)","paramTypes":["String","String"],"notNullIndices":[1]},{"className":"javax.xml.namespace.QName","api":"QName","signature":"public QName(String namespaceURI, String localPart, String prefix)","paramTypes":["String","String","String"],"notNullIndices":[1,2]},{"className":"javax.xml.namespace.QName","api":"QName","signature":"public QName(String localPart)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.namespace.QName","api":"valueOf","signature":"public static QName valueOf(String qNameAsString)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.parsers.DocumentBuilder","api":"parse","signature":"public Document parse(InputStream is) throws SAXException, IOException","paramTypes":["InputStream"],"notNullIndices":[0]},{"className":"javax.xml.parsers.DocumentBuilder","api":"parse","signature":"public Document parse(InputStream is, String systemId) throws SAXException, IOException","paramTypes":["InputStream","String"],"notNullIndices":[0]},{"className":"javax.xml.parsers.DocumentBuilder","api":"parse","signature":"public Document parse(String uri) throws SAXException, IOException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.parsers.DocumentBuilder","api":"parse","signature":"public Document parse(File f) throws SAXException, IOException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.xml.parsers.DocumentBuilder","api":"parse","signature":"public abstract Document parse(InputSource is) throws SAXException, IOException","paramTypes":["InputSource"],"notNullIndices":[0]},{"className":"javax.xml.parsers.DocumentBuilderFactory","api":"newInstance","signature":"public static DocumentBuilderFactory newInstance(String factoryClassName, ClassLoader classLoader)","paramTypes":["String","ClassLoader"],"notNullIndices":[0]},{"className":"javax.xml.parsers.DocumentBuilderFactory","api":"setFeature","signature":"public abstract void setFeature(String name, boolean value) throws ParserConfigurationException","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"javax.xml.parsers.SAXParser","api":"parse","signature":"public void parse(InputStream is, HandlerBase hb) throws SAXException, IOException","paramTypes":["InputStream","HandlerBase"],"notNullIndices":[0]},{"className":"javax.xml.parsers.SAXParser","api":"parse","signature":"public void parse(InputStream is, HandlerBase hb, String systemId) throws SAXException, IOException","paramTypes":["InputStream","HandlerBase","String"],"notNullIndices":[0]},{"className":"javax.xml.parsers.SAXParser","api":"parse","signature":"public void parse(InputStream is, DefaultHandler dh) throws SAXException, IOException","paramTypes":["InputStream","DefaultHandler"],"notNullIndices":[0]},{"className":"javax.xml.parsers.SAXParser","api":"parse","signature":"public void parse(InputStream is, DefaultHandler dh, String systemId) throws SAXException, IOException","paramTypes":["InputStream","DefaultHandler","String"],"notNullIndices":[0]},{"className":"javax.xml.parsers.SAXParser","api":"parse","signature":"public void parse(String uri, HandlerBase hb) throws SAXException, IOException","paramTypes":["String","HandlerBase"],"notNullIndices":[0]},{"className":"javax.xml.parsers.SAXParser","api":"parse","signature":"public void parse(String uri, DefaultHandler dh) throws SAXException, IOException","paramTypes":["String","DefaultHandler"],"notNullIndices":[0]},{"className":"javax.xml.parsers.SAXParser","api":"parse","signature":"public void parse(InputSource is, HandlerBase hb) throws SAXException, IOException","paramTypes":["InputSource","HandlerBase"],"notNullIndices":[0]},{"className":"javax.xml.parsers.SAXParser","api":"parse","signature":"public void parse(InputSource is, DefaultHandler dh) throws SAXException, IOException","paramTypes":["InputSource","DefaultHandler"],"notNullIndices":[0]},{"className":"javax.xml.parsers.SAXParserFactory","api":"newInstance","signature":"public static SAXParserFactory newInstance(String factoryClassName, ClassLoader classLoader)","paramTypes":["String","ClassLoader"],"notNullIndices":[0]},{"className":"javax.xml.parsers.SAXParserFactory","api":"setFeature","signature":"public abstract void setFeature(String name, boolean value) throws ParserConfigurationException, SAXNotRecognizedException, SAXNotSupportedException","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"javax.xml.stream.XMLStreamReader","api":"getProperty","signature":"Object getProperty(String name) throws IllegalArgumentException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.stream.XMLStreamReader","api":"getNamespaceURI","signature":"String getNamespaceURI(String prefix)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.stream.XMLStreamReader","api":"getTextCharacters","signature":"int getTextCharacters(int sourceStart, char[] target, int targetStart, int length) throws XMLStreamException","paramTypes":["int","char[]","int","int"],"notNullIndices":[1]},{"className":"javax.xml.stream.XMLStreamWriter","api":"getProperty","signature":"Object getProperty(String name) throws IllegalArgumentException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.transform.Transformer","api":"setParameter","signature":"public abstract void setParameter(String name, Object value)","paramTypes":["String","Object"],"notNullIndices":[1]},{"className":"javax.xml.transform.Transformer","api":"setErrorListener","signature":"public abstract void setErrorListener(ErrorListener listener) throws IllegalArgumentException","paramTypes":["ErrorListener"],"notNullIndices":[0]},{"className":"javax.xml.transform.TransformerFactory","api":"newInstance","signature":"public static TransformerFactory newInstance(String factoryClassName, ClassLoader classLoader) throws TransformerFactoryConfigurationError","paramTypes":["String","ClassLoader"],"notNullIndices":[0]},{"className":"javax.xml.transform.TransformerFactory","api":"setFeature","signature":"public abstract void setFeature(String name, boolean value) throws TransformerConfigurationException","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"javax.xml.transform.TransformerFactory","api":"getFeature","signature":"public abstract boolean getFeature(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.transform.TransformerFactory","api":"setErrorListener","signature":"public abstract void setErrorListener(ErrorListener listener)","paramTypes":["ErrorListener"],"notNullIndices":[0]},{"className":"javax.xml.transform.stax.StAXResult","api":"StAXResult","signature":"public StAXResult(XMLEventWriter xmlEventWriter)","paramTypes":["XMLEventWriter"],"notNullIndices":[0]},{"className":"javax.xml.transform.stax.StAXResult","api":"StAXResult","signature":"public StAXResult(XMLStreamWriter xmlStreamWriter)","paramTypes":["XMLStreamWriter"],"notNullIndices":[0]},{"className":"javax.xml.transform.stax.StAXSource","api":"StAXSource","signature":"public StAXSource(XMLEventReader xmlEventReader) throws XMLStreamException","paramTypes":["XMLEventReader"],"notNullIndices":[0]},{"className":"javax.xml.transform.stax.StAXSource","api":"StAXSource","signature":"public StAXSource(XMLStreamReader xmlStreamReader)","paramTypes":["XMLStreamReader"],"notNullIndices":[0]},{"className":"javax.xml.validation.SchemaFactory","api":"newInstance","signature":"public static SchemaFactory newInstance(String schemaLanguage)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.validation.SchemaFactory","api":"newInstance","signature":"public static SchemaFactory newInstance(String schemaLanguage, String factoryClassName, ClassLoader classLoader)","paramTypes":["String","String","ClassLoader"],"notNullIndices":[1]},{"className":"javax.xml.validation.SchemaFactory","api":"newInstance","signature":"public static SchemaFactory newInstance(String schemaLanguage, String factoryClassName, ClassLoader classLoader)","paramTypes":["String","String","ClassLoader"],"notNullIndices":[0]},{"className":"javax.xml.validation.SchemaFactory","api":"isSchemaLanguageSupported","signature":"public abstract boolean isSchemaLanguageSupported(String schemaLanguage)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.validation.SchemaFactory","api":"getFeature","signature":"public boolean getFeature(String name) throws SAXNotRecognizedException, SAXNotSupportedException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.validation.SchemaFactory","api":"setFeature","signature":"public void setFeature(String name, boolean value) throws SAXNotRecognizedException, SAXNotSupportedException","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"javax.xml.validation.SchemaFactory","api":"setProperty","signature":"public void setProperty(String name, Object object) throws SAXNotRecognizedException, SAXNotSupportedException","paramTypes":["String","Object"],"notNullIndices":[0]},{"className":"javax.xml.validation.SchemaFactory","api":"getProperty","signature":"public Object getProperty(String name) throws SAXNotRecognizedException, SAXNotSupportedException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.validation.SchemaFactory","api":"newSchema","signature":"public Schema newSchema(Source schema) throws SAXException","paramTypes":["Source"],"notNullIndices":[0]},{"className":"javax.xml.validation.SchemaFactory","api":"newSchema","signature":"public Schema newSchema(File schema) throws SAXException","paramTypes":["File"],"notNullIndices":[0]},{"className":"javax.xml.validation.SchemaFactory","api":"newSchema","signature":"public Schema newSchema(URL schema) throws SAXException","paramTypes":["URL"],"notNullIndices":[0]},{"className":"javax.xml.validation.SchemaFactory","api":"newSchema","signature":"public abstract Schema newSchema(Source[] schemas) throws SAXException","paramTypes":["Source[]"],"notNullIndices":[0]},{"className":"javax.xml.validation.SchemaFactoryLoader","api":"newFactory","signature":"public abstract SchemaFactory newFactory(String schemaLanguage)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.validation.Validator","api":"validate","signature":"public void validate(Source source) throws SAXException, IOException","paramTypes":["Source"],"notNullIndices":[0]},{"className":"javax.xml.validation.Validator","api":"validate","signature":"public abstract void validate(Source source, Result result) throws SAXException, IOException","paramTypes":["Source","Result"],"notNullIndices":[0]},{"className":"javax.xml.validation.Validator","api":"getFeature","signature":"public boolean getFeature(String name) throws SAXNotRecognizedException, SAXNotSupportedException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.validation.Validator","api":"setFeature","signature":"public void setFeature(String name, boolean value) throws SAXNotRecognizedException, SAXNotSupportedException","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"javax.xml.validation.Validator","api":"setProperty","signature":"public void setProperty(String name, Object object) throws SAXNotRecognizedException, SAXNotSupportedException","paramTypes":["String","Object"],"notNullIndices":[0]},{"className":"javax.xml.validation.Validator","api":"getProperty","signature":"public Object getProperty(String name) throws SAXNotRecognizedException, SAXNotSupportedException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.validation.ValidatorHandler","api":"getFeature","signature":"public boolean getFeature(String name) throws SAXNotRecognizedException, SAXNotSupportedException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.validation.ValidatorHandler","api":"setFeature","signature":"public void setFeature(String name, boolean value) throws SAXNotRecognizedException, SAXNotSupportedException","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"javax.xml.validation.ValidatorHandler","api":"setProperty","signature":"public void setProperty(String name, Object object) throws SAXNotRecognizedException, SAXNotSupportedException","paramTypes":["String","Object"],"notNullIndices":[0]},{"className":"javax.xml.validation.ValidatorHandler","api":"getProperty","signature":"public Object getProperty(String name) throws SAXNotRecognizedException, SAXNotSupportedException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPath","api":"setXPathVariableResolver","signature":"void setXPathVariableResolver(XPathVariableResolver resolver)","paramTypes":["XPathVariableResolver"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPath","api":"setXPathFunctionResolver","signature":"void setXPathFunctionResolver(XPathFunctionResolver resolver)","paramTypes":["XPathFunctionResolver"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPath","api":"setNamespaceContext","signature":"void setNamespaceContext(NamespaceContext nsContext)","paramTypes":["NamespaceContext"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPath","api":"compile","signature":"XPathExpression compile(String expression) throws XPathExpressionException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPath","api":"evaluate","signature":"Object evaluate(String expression, Object item, QName returnType) throws XPathExpressionException","paramTypes":["String","Object","QName"],"notNullIndices":[0,2]},{"className":"javax.xml.xpath.XPath","api":"evaluate","signature":"String evaluate(String expression, Object item) throws XPathExpressionException","paramTypes":["String","Object"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPath","api":"evaluate","signature":"Object evaluate(String expression, InputSource source, QName returnType) throws XPathExpressionException","paramTypes":["String","InputSource","QName"],"notNullIndices":[0,1,2]},{"className":"javax.xml.xpath.XPath","api":"evaluate","signature":"String evaluate(String expression, InputSource source) throws XPathExpressionException","paramTypes":["String","InputSource"],"notNullIndices":[0,1]},{"className":"javax.xml.xpath.XPath","api":"evaluateExpression","signature":"default <T> T evaluateExpression(String expression, Object item, Class<T> type) throws XPathExpressionException","paramTypes":["String","Object","Class"],"notNullIndices":[0,2]},{"className":"javax.xml.xpath.XPath","api":"evaluateExpression","signature":"default XPathEvaluationResult<?> evaluateExpression(String expression, Object item) throws XPathExpressionException","paramTypes":["String","Object"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPath","api":"evaluateExpression","signature":"default <T> T evaluateExpression(String expression, InputSource source, Class<T> type) throws XPathExpressionException","paramTypes":["String","InputSource","Class"],"notNullIndices":[0,1]},{"className":"javax.xml.xpath.XPath","api":"evaluateExpression","signature":"default XPathEvaluationResult<?> evaluateExpression(String expression, InputSource source) throws XPathExpressionException","paramTypes":["String","InputSource"],"notNullIndices":[0,1]},{"className":"javax.xml.xpath.XPathEvaluationResult.XPathResultType","api":"valueOf","signature":"public static XPathEvaluationResult.XPathResultType valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathException","api":"XPathException","signature":"public XPathException(String message)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathException","api":"XPathException","signature":"public XPathException(Throwable cause)","paramTypes":["Throwable"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathExpression","api":"evaluate","signature":"Object evaluate(Object item, QName returnType) throws XPathExpressionException","paramTypes":["Object","QName"],"notNullIndices":[1]},{"className":"javax.xml.xpath.XPathExpression","api":"evaluate","signature":"Object evaluate(InputSource source, QName returnType) throws XPathExpressionException","paramTypes":["InputSource","QName"],"notNullIndices":[0,1]},{"className":"javax.xml.xpath.XPathExpression","api":"evaluate","signature":"String evaluate(InputSource source) throws XPathExpressionException","paramTypes":["InputSource"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathExpression","api":"evaluateExpression","signature":"default <T> T evaluateExpression(Object item, Class<T> type) throws XPathExpressionException","paramTypes":["Object","Class"],"notNullIndices":[1]},{"className":"javax.xml.xpath.XPathExpression","api":"evaluateExpression","signature":"default <T> T evaluateExpression(InputSource source, Class<T> type) throws XPathExpressionException","paramTypes":["InputSource","Class"],"notNullIndices":[0,1]},{"className":"javax.xml.xpath.XPathExpression","api":"evaluateExpression","signature":"default XPathEvaluationResult<?> evaluateExpression(InputSource source) throws XPathExpressionException","paramTypes":["InputSource"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathExpressionException","api":"XPathExpressionException","signature":"public XPathExpressionException(String message)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathExpressionException","api":"XPathExpressionException","signature":"public XPathExpressionException(Throwable cause)","paramTypes":["Throwable"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathFactory","api":"newInstance","signature":"public static XPathFactory newInstance(String uri) throws XPathFactoryConfigurationException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathFactory","api":"newInstance","signature":"public static XPathFactory newInstance(String uri) throws XPathFactoryConfigurationException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathFactory","api":"newInstance","signature":"public static XPathFactory newInstance(String uri, String factoryClassName, ClassLoader classLoader) throws XPathFactoryConfigurationException","paramTypes":["String","String","ClassLoader"],"notNullIndices":[1]},{"className":"javax.xml.xpath.XPathFactory","api":"newInstance","signature":"public static XPathFactory newInstance(String uri, String factoryClassName, ClassLoader classLoader) throws XPathFactoryConfigurationException","paramTypes":["String","String","ClassLoader"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathFactory","api":"newInstance","signature":"public static XPathFactory newInstance(String uri, String factoryClassName, ClassLoader classLoader) throws XPathFactoryConfigurationException","paramTypes":["String","String","ClassLoader"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathFactory","api":"isObjectModelSupported","signature":"public abstract boolean isObjectModelSupported(String objectModel)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathFactory","api":"setFeature","signature":"public abstract void setFeature(String name, boolean value) throws XPathFactoryConfigurationException","paramTypes":["String","boolean"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathFactory","api":"getFeature","signature":"public abstract boolean getFeature(String name) throws XPathFactoryConfigurationException","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathFactory","api":"setXPathVariableResolver","signature":"public abstract void setXPathVariableResolver(XPathVariableResolver resolver)","paramTypes":["XPathVariableResolver"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathFactory","api":"setXPathFunctionResolver","signature":"public abstract void setXPathFunctionResolver(XPathFunctionResolver resolver)","paramTypes":["XPathFunctionResolver"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathFactoryConfigurationException","api":"XPathFactoryConfigurationException","signature":"public XPathFactoryConfigurationException(String message)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathFactoryConfigurationException","api":"XPathFactoryConfigurationException","signature":"public XPathFactoryConfigurationException(Throwable cause)","paramTypes":["Throwable"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathFunctionException","api":"XPathFunctionException","signature":"public XPathFunctionException(String message)","paramTypes":["String"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathFunctionException","api":"XPathFunctionException","signature":"public XPathFunctionException(Throwable cause)","paramTypes":["Throwable"],"notNullIndices":[0]},{"className":"javax.xml.xpath.XPathFunctionResolver","api":"resolveFunction","signature":"XPathFunction resolveFunction(QName functionName, int arity)","paramTypes":["QName","int"],"notNullIndices":[0,1]},{"className":"javax.xml.xpath.XPathVariableResolver","api":"resolveVariable","signature":"Object resolveVariable(QName variableName)","paramTypes":["QName"],"notNullIndices":[0]},{"className":"jdk.dynalink.CallSiteDescriptor","api":"changeMethodType","signature":"public final CallSiteDescriptor changeMethodType(MethodType newMethodType)","paramTypes":["MethodType"],"notNullIndices":[0]},{"className":"jdk.dynalink.CallSiteDescriptor","api":"changeOperation","signature":"public final CallSiteDescriptor changeOperation(Operation newOperation)","paramTypes":["Operation"],"notNullIndices":[0]},{"className":"jdk.dynalink.DynamicLinkerFactory","api":"setPrioritizedLinkers","signature":"public void setPrioritizedLinkers(List<? extends GuardingDynamicLinker> prioritizedLinkers)","paramTypes":["List"],"notNullIndices":[0]},{"className":"jdk.dynalink.DynamicLinkerFactory","api":"setPrioritizedLinkers","signature":"public void setPrioritizedLinkers(GuardingDynamicLinker... prioritizedLinkers)","paramTypes":["GuardingDynamicLinker..."],"notNullIndices":[0]},{"className":"jdk.dynalink.DynamicLinkerFactory","api":"setPrioritizedLinker","signature":"public void setPrioritizedLinker(GuardingDynamicLinker prioritizedLinker)","paramTypes":["GuardingDynamicLinker"],"notNullIndices":[0]},{"className":"jdk.dynalink.DynamicLinkerFactory","api":"setFallbackLinkers","signature":"public void setFallbackLinkers(List<? extends GuardingDynamicLinker> fallbackLinkers)","paramTypes":["List"],"notNullIndices":[0]},{"className":"jdk.dynalink.DynamicLinkerFactory","api":"setFallbackLinkers","signature":"public void setFallbackLinkers(GuardingDynamicLinker... fallbackLinkers)","paramTypes":["GuardingDynamicLinker..."],"notNullIndices":[0]},{"className":"jdk.dynalink.NamedOperation","api":"NamedOperation","signature":"public NamedOperation(Operation baseOperation, Object name)","paramTypes":["Operation","Object"],"notNullIndices":[0,1]},{"className":"jdk.dynalink.NamedOperation","api":"changeName","signature":"public final NamedOperation changeName(String newName)","paramTypes":["String"],"notNullIndices":[0]},{"className":"jdk.dynalink.NamespaceOperation","api":"NamespaceOperation","signature":"public NamespaceOperation(Operation baseOperation, Namespace... namespaces)","paramTypes":["Operation","Namespace..."],"notNullIndices":[0,1]},{"className":"jdk.dynalink.Operation","api":"withNamespace","signature":"default NamespaceOperation withNamespace(Namespace namespace)","paramTypes":["Namespace"],"notNullIndices":[0]},{"className":"jdk.dynalink.Operation","api":"withNamespaces","signature":"default NamespaceOperation withNamespaces(Namespace... namespaces)","paramTypes":["Namespace..."],"notNullIndices":[0]},{"className":"jdk.dynalink.Operation","api":"named","signature":"default NamedOperation named(Object name)","paramTypes":["Object"],"notNullIndices":[0]},{"className":"jdk.dynalink.SecureLookupSupplier","api":"SecureLookupSupplier","signature":"public SecureLookupSupplier(MethodHandles.Lookup lookup)","paramTypes":["MethodHandles.Lookup"],"notNullIndices":[0]},{"className":"jdk.dynalink.StandardNamespace","api":"valueOf","signature":"public static StandardNamespace valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"jdk.dynalink.StandardOperation","api":"valueOf","signature":"public static StandardOperation valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"jdk.dynalink.linker.ConversionComparator.Comparison","api":"valueOf","signature":"public static ConversionComparator.Comparison valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"jdk.dynalink.linker.GuardedInvocation","api":"GuardedInvocation","signature":"public GuardedInvocation(MethodHandle invocation)","paramTypes":["MethodHandle"],"notNullIndices":[0]},{"className":"jdk.dynalink.linker.GuardedInvocation","api":"GuardedInvocation","signature":"public GuardedInvocation(MethodHandle invocation, MethodHandle guard)","paramTypes":["MethodHandle","MethodHandle"],"notNullIndices":[0]},{"className":"jdk.dynalink.linker.GuardedInvocation","api":"GuardedInvocation","signature":"public GuardedInvocation(MethodHandle invocation, SwitchPoint switchPoint)","paramTypes":["MethodHandle","SwitchPoint"],"notNullIndices":[0]},{"className":"jdk.dynalink.linker.GuardedInvocation","api":"GuardedInvocation","signature":"public GuardedInvocation(MethodHandle invocation, MethodHandle guard, SwitchPoint switchPoint)","paramTypes":["MethodHandle","MethodHandle","SwitchPoint"],"notNullIndices":[0]},{"className":"jdk.dynalink.linker.GuardedInvocation","api":"GuardedInvocation","signature":"public GuardedInvocation(MethodHandle invocation, MethodHandle guard, SwitchPoint switchPoint, Class<? extends Throwable> exception)","paramTypes":["MethodHandle","MethodHandle","SwitchPoint","Class"],"notNullIndices":[0]},{"className":"jdk.dynalink.linker.GuardedInvocation","api":"GuardedInvocation","signature":"public GuardedInvocation(MethodHandle invocation, MethodHandle guard, SwitchPoint[] switchPoints, Class<? extends Throwable> exception)","paramTypes":["MethodHandle","MethodHandle","SwitchPoint[]","Class"],"notNullIndices":[0]},{"className":"jdk.dynalink.linker.LinkerServices","api":"getWithLookup","signature":"<T> T getWithLookup(Supplier<T> operation, SecureLookupSupplier lookupSupplier)","paramTypes":["Supplier","SecureLookupSupplier"],"notNullIndices":[1]},{"className":"jdk.dynalink.linker.support.CompositeGuardingDynamicLinker","api":"CompositeGuardingDynamicLinker","signature":"public CompositeGuardingDynamicLinker(Iterable<? extends GuardingDynamicLinker> linkers)","paramTypes":["Iterable"],"notNullIndices":[0]},{"className":"jdk.dynalink.linker.support.CompositeTypeBasedGuardingDynamicLinker","api":"CompositeTypeBasedGuardingDynamicLinker","signature":"public CompositeTypeBasedGuardingDynamicLinker(Iterable<? extends TypeBasedGuardingDynamicLinker> linkers)","paramTypes":["Iterable"],"notNullIndices":[0]},{"className":"jdk.dynalink.linker.support.CompositeTypeBasedGuardingDynamicLinker","api":"optimize","signature":"public static List<GuardingDynamicLinker> optimize(Iterable<? extends GuardingDynamicLinker> linkers)","paramTypes":["Iterable"],"notNullIndices":[0]},{"className":"jdk.dynalink.linker.support.SimpleLinkRequest","api":"SimpleLinkRequest","signature":"public SimpleLinkRequest(CallSiteDescriptor callSiteDescriptor, boolean callSiteUnstable, Object... arguments)","paramTypes":["CallSiteDescriptor","boolean","Object..."],"notNullIndices":[0,2]},{"className":"jdk.dynalink.support.AbstractRelinkableCallSite","api":"AbstractRelinkableCallSite","signature":"protected AbstractRelinkableCallSite(CallSiteDescriptor descriptor)","paramTypes":["CallSiteDescriptor"],"notNullIndices":[0]},{"className":"jdk.javadoc.doclet.Doclet.Option.Kind","api":"valueOf","signature":"public static Doclet.Option.Kind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"jdk.javadoc.doclet.DocletEnvironment.ModuleMode","api":"valueOf","signature":"public static DocletEnvironment.ModuleMode valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"jdk.javadoc.doclet.Taglet.Location","api":"valueOf","signature":"public static Taglet.Location valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"jdk.jfr.RecordingState","api":"valueOf","signature":"public static RecordingState valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"jdk.jshell.Snippet.Kind","api":"valueOf","signature":"public static Snippet.Kind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"jdk.jshell.Snippet.Status","api":"valueOf","signature":"public static Snippet.Status valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"jdk.jshell.Snippet.SubKind","api":"valueOf","signature":"public static Snippet.SubKind valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"jdk.jshell.SourceCodeAnalysis.Completeness","api":"valueOf","signature":"public static SourceCodeAnalysis.Completeness valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"jdk.net.NetworkPermission","api":"NetworkPermission","signature":"public NetworkPermission(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"jdk.net.NetworkPermission","api":"NetworkPermission","signature":"public NetworkPermission(String name, String actions)","paramTypes":["String","String"],"notNullIndices":[0]},{"className":"jdk.net.SocketFlow.Status","api":"valueOf","signature":"public static SocketFlow.Status valueOf(String name)","paramTypes":["String"],"notNullIndices":[0]},{"className":"jdk.net.Sockets","api":"setOption","signature":"public static <T> void setOption(Socket s, SocketOption<T> name, T value) throws IOException","paramTypes":["Socket","SocketOption","T"],"notNullIndices":[1]},{"className":"jdk.net.Sockets","api":"getOption","signature":"public static <T> T getOption(Socket s, SocketOption<T> name) throws IOException","paramTypes":["Socket","SocketOption"],"notNullIndices":[1]},{"className":"jdk.net.Sockets","api":"setOption","signature":"public static <T> void setOption(ServerSocket s, SocketOption<T> name, T value) throws IOException","paramTypes":["ServerSocket","SocketOption","T"],"notNullIndices":[1]},{"className":"jdk.net.Sockets","api":"getOption","signature":"public static <T> T getOption(ServerSocket s, SocketOption<T> name) throws IOException","paramTypes":["ServerSocket","SocketOption"],"notNullIndices":[1]},{"className":"jdk.net.Sockets","api":"setOption","signature":"public static <T> void setOption(DatagramSocket s, SocketOption<T> name, T value) throws IOException","paramTypes":["DatagramSocket","SocketOption","T"],"notNullIndices":[1]},{"className":"jdk.net.Sockets","api":"getOption","signature":"public static <T> T getOption(DatagramSocket s, SocketOption<T> name) throws IOException","paramTypes":["DatagramSocket","SocketOption"],"notNullIndices":[1]},{"className":"org.w3c.dom.events.EventTarget","api":"dispatchEvent","signature":"boolean dispatchEvent(Event evt) throws EventException","paramTypes":["Event"],"notNullIndices":[0]},{"className":"org.w3c.dom.traversal.DocumentTraversal","api":"createNodeIterator","signature":"NodeIterator createNodeIterator(Node root, int whatToShow, NodeFilter filter, boolean entityReferenceExpansion) throws DOMException","paramTypes":["Node","int","NodeFilter","boolean"],"notNullIndices":[0]},{"className":"org.w3c.dom.traversal.DocumentTraversal","api":"createTreeWalker","signature":"TreeWalker createTreeWalker(Node root, int whatToShow, NodeFilter filter, boolean entityReferenceExpansion) throws DOMException","paramTypes":["Node","int","NodeFilter","boolean"],"notNullIndices":[0]},{"className":"org.xml.sax.helpers.ParserAdapter","api":"ParserAdapter","signature":"public ParserAdapter(Parser parser)","paramTypes":["Parser"],"notNullIndices":[0]},{"className":"org.xml.sax.helpers.XMLReaderAdapter","api":"XMLReaderAdapter","signature":"public XMLReaderAdapter(XMLReader xmlReader)","paramTypes":["XMLReader"],"notNullIndices":[0]}]